{"id":"../src/2d/layers/labels/text-area-layer-bound-max.vs","dependencies":[],"generated":{"js":"module.exports = \"varying vec4 vertexColor;\\nvarying vec2 texCoord;\\n\\nvoid main() {\\n  vec2 scale = fontScale * cameraScale2D.xy;\\n  float scaleBy = max(scale.x, scale.y) / maxScale;\\n  vec2 pushOut = normals * glyphSize * fontScale;\\n\\n  float vx = mix(\\n    (origin.x + padding.x + offset.x + pushOut.x),\\n    origin.x + anchor.x + (padding.x - anchor.x + offset.x + pushOut.x) / scaleBy,\\n    float(scale.x >= maxScale)\\n  );\\n\\n  float vy = mix(\\n    (origin.y + padding.y + offset.y + pushOut.y),\\n    origin.y + anchor.y + (padding.y - anchor.y + offset.y + pushOut.y) / scaleBy,\\n    float(scale.y >= maxScale)\\n  );\\n\\n  // Calculate in the anchor, the origin, glyph offset, and the quad pushout to make our quad geometry\\n  vec3 position = vec3(vec2(vx, vy), depth);\\n  gl_Position = clipSpace(position);\\n\\n  // Get the atlas position of the texture information\\n  texCoord = texture.xy + (texture.zw - texture.xy) * normals;\\n  // Apply the color of the glyph\\n  vertexColor = color * color.a;\\n}\\n\""},"sourceMaps":null,"error":null,"hash":"bf492d6db7f97ed8fc214e8256801075","cacheData":{}}