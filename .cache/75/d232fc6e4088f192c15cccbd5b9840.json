{"id":"../src/surface/buffer-management/base-diff-processor.ts","dependencies":[{"name":"/Users/diniden/Desktop/VoidRay/fiesta/tsconfig.json","includedInParent":true,"mtime":1570670525118},{"name":"/Users/diniden/Desktop/VoidRay/fiesta/package.json","includedInParent":true,"mtime":1570672381660}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BaseDiffProcessor = function () {\n  function BaseDiffProcessor(layer, bufferManager) {\n    this.layer = layer;\n    this.bufferManager = bufferManager;\n  }\n\n  return BaseDiffProcessor;\n}();\n\nexports.BaseDiffProcessor = BaseDiffProcessor;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":4}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":21}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":24}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":36}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":8,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":8,"column":11}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":8,"column":28}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":8,"column":29}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":8,"column":34}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":8,"column":36}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":8,"column":49}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":18,"column":56},"generated":{"line":8,"column":51}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":9,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":9,"column":9}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":9,"column":14}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":9,"column":17}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":9,"column":22}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":10,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":21,"column":9},"generated":{"line":10,"column":9}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":10,"column":22}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":21,"column":25},"generated":{"line":10,"column":25}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":10,"column":38}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":22,"column":3},"generated":{"line":11,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":13,"column":9}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":13,"column":26}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":14,"column":1}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":14,"column":3}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":0}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":7}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":8}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":25}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":28}},{"source":"../src/surface/buffer-management/base-diff-processor.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":16,"column":45}}],"sources":{"../src/surface/buffer-management/base-diff-processor.ts":"import { Instance, InstanceDiff } from '../../instance-provider';\nimport {\n  BufferManagerBase,\n  IBufferLocation,\n  IBufferLocationGroup,\n} from './buffer-manager-base';\nimport { IInstanceDiffManagerTarget } from './instance-diff-manager';\n\n/**\n * Base requirements for handling diffs from a layer.\n */\nexport abstract class BaseDiffProcessor<T extends Instance> {\n  layer: IInstanceDiffManagerTarget<T>;\n  bufferManager: BufferManagerBase<T, IBufferLocation>;\n\n  constructor(\n    layer: IInstanceDiffManagerTarget<T>,\n    bufferManager: BufferManagerBase<T, IBufferLocation>\n  ) {\n    this.layer = layer;\n    this.bufferManager = bufferManager;\n  }\n\n  /** Perform an 'add' operation for the instance's buffer */\n  abstract addInstance(\n    manager: this,\n    instance: T,\n    propIds: number[],\n    bufferLocation?: IBufferLocation | IBufferLocationGroup<IBufferLocation>\n  ): void;\n  /** Perform a 'change' operation for the instance's buffer */\n  abstract changeInstance(\n    manager: this,\n    instance: T,\n    propIds: number[],\n    bufferLocation?: IBufferLocation | IBufferLocationGroup<IBufferLocation>\n  ): void;\n  /** Perform a 'remove' operation for the instance's buffer */\n  abstract removeInstance(\n    manager: this,\n    instance: T,\n    propIds: number[],\n    bufferLocation?: IBufferLocation | IBufferLocationGroup<IBufferLocation>\n  ): void;\n\n  /**\n   * This indicates all changes have been applied, this allows the processor to finalize buffer updates\n   */\n  abstract commit(): void;\n  /**\n   * This will be called with the changes that WILL be processed. This allows this processor to make extra judgement calls on\n   * how it will process the changes and let's it optimize itself before changes are actually processed. An example optimization:\n   *\n   * Buffers have an update range we can adjust so only a piece of the buffer is updated. However, calculating that range causes\n   * overhead to calculate the affected range. So, if we have mass changes happening for major sections of the buffer (number of\n   * changes approaches some large percentage of the instances supported by the buffer), then it would be more efficient just to\n   * update the entire buffer rather than discover the portion needing updating.\n   */\n  abstract incomingChangeList(changes: InstanceDiff<T>[]): void;\n}\n"},"lineCount":null}},"error":null,"hash":"d87be01e2ada3b53f1b63c8939596802","cacheData":{"env":{}}}