{"id":"../node_modules/underscore/underscore.js","dependencies":[{"name":"/Users/diniden/Desktop/VoidRay/fiesta/package.json","includedInParent":true,"mtime":1570672381660},{"name":"/Users/diniden/Desktop/VoidRay/fiesta/node_modules/underscore/package.json","includedInParent":true,"mtime":1570671212773}],"generated":{"js":"var define;\n//     Underscore.js 1.6.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype,\n    ObjProto = Object.prototype,\n    FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    concat = ArrayProto.concat,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeForEach = ArrayProto.forEach,\n    nativeMap = ArrayProto.map,\n    nativeReduce = ArrayProto.reduce,\n    nativeReduceRight = ArrayProto.reduceRight,\n    nativeFilter = ArrayProto.filter,\n    nativeEvery = ArrayProto.every,\n    nativeSome = ArrayProto.some,\n    nativeIndexOf = ArrayProto.indexOf,\n    nativeLastIndexOf = ArrayProto.lastIndexOf,\n    nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeBind = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.6.0';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = (_.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return obj;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, length = obj.length; i < length; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n          return;\n      }\n    }\n    return obj;\n  });\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results.push(iterator.call(context, value, index, list));\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial\n        ? obj.reduceRight(iterator, memo)\n        : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter)\n      return obj.filter(predicate, context);\n    each(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(\n      obj,\n      function(value, index, list) {\n        return !predicate.call(context, value, index, list);\n      },\n      context\n    );\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate || (predicate = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery)\n      return obj.every(predicate, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && predicate.call(context, value, index, list)))\n        return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = (_.some = _.any = function(obj, predicate, context) {\n    predicate || (predicate = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome)\n      return obj.some(predicate, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = predicate.call(context, value, index, list)))\n        return breaker;\n    });\n    return !!result;\n  });\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf)\n      return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n  _.max = function(obj, iterator, context) {\n    if (\n      !iterator &&\n      _.isArray(obj) &&\n      obj[0] === +obj[0] &&\n      obj.length < 65535\n    ) {\n      return Math.max.apply(Math, obj);\n    }\n    var result = -Infinity,\n      lastComputed = -Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator\n        ? iterator.call(context, value, index, list)\n        : value;\n      if (computed > lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (\n      !iterator &&\n      _.isArray(obj) &&\n      obj[0] === +obj[0] &&\n      obj.length < 65535\n    ) {\n      return Math.min.apply(Math, obj);\n    }\n    var result = Infinity,\n      lastComputed = Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator\n        ? iterator.call(context, value, index, list)\n        : value;\n      if (computed < lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  };\n\n  // Shuffle an array, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return value;\n    return _.property(value);\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, iterator, context) {\n    iterator = lookupIterator(iterator);\n    return _.pluck(\n      _.map(obj, function(value, index, list) {\n        return {\n          value: value,\n          index: index,\n          criteria: iterator.call(context, value, index, list),\n        };\n      }).sort(function(left, right) {\n        var a = left.criteria;\n        var b = right.criteria;\n        if (a !== b) {\n          if (a > b || a === void 0) return 1;\n          if (a < b || b === void 0) return -1;\n        }\n        return left.index - right.index;\n      }),\n      'value'\n    );\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iterator, context) {\n      var result = {};\n      iterator = lookupIterator(iterator);\n      each(obj, function(value, index) {\n        var key = iterator.call(context, value, index, obj);\n        behavior(result, key, value);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, key, value) {\n    _.has(result, key) ? result[key].push(value) : (result[key] = [value]);\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, key, value) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, key) {\n    _.has(result, key) ? result[key]++ : (result[key] = 1);\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0,\n      high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value\n        ? (low = mid + 1)\n        : (high = mid);\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    each(input, function(value) {\n      if (_.isArray(value) || _.isArguments(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Split an array into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(array, predicate) {\n    var pass = [],\n      fail = [];\n    each(array, function(elem) {\n      (predicate(elem) ? pass : fail).push(elem);\n    });\n    return [pass, fail];\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (\n        isSorted\n          ? !index || seen[seen.length - 1] !== value\n          : !_.contains(seen, value)\n      ) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(_.flatten(arguments, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.contains(other, item);\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value) {\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var length = _.max(_.pluck(arguments, 'length').concat(0));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, '' + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0,\n      length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf)\n      return array.indexOf(item, isSorted);\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = hasIndex ? from : array.length;\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(length);\n\n    while (idx < length) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var ctor = function() {};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind)\n      return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError();\n    args = slice.call(arguments, 2);\n    return (bound = function() {\n      if (!(this instanceof bound))\n        return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor();\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    });\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0)\n      throw new Error('bindAll must be passed function names');\n    each(funcs, function(f) {\n      obj[f] = _.bind(obj[f], obj);\n    });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key)\n        ? memo[key]\n        : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false,\n      memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = new Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = new Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return (\n          a.source == b.source &&\n          a.global == b.global &&\n          a.multiline == b.multiline &&\n          a.ignoreCase == b.ignoreCase\n        );\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor,\n      bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      !(\n        _.isFunction(aCtor) &&\n        aCtor instanceof aCtor &&\n        _.isFunction(bCtor) &&\n        bCtor instanceof bCtor\n      ) &&\n      ('constructor' in a && 'constructor' in b)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0,\n      result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)))\n            break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !size--) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray =\n    nativeIsArray ||\n    function(obj) {\n      return toString.call(obj) == '[object Array]';\n    };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(\n    ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'],\n    function(name) {\n      _['is' + name] = function(obj) {\n        return toString.call(obj) == '[object ' + name + ']';\n      };\n    }\n  );\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return (\n      obj === true || obj === false || toString.call(obj) == '[object Boolean]'\n    );\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    return function(obj) {\n      if (obj === attrs) return true; //avoid comparing an object to itself.\n      for (var key in attrs) {\n        if (attrs[key] !== obj[key]) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(Math.max(0, n));\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now =\n    Date.now ||\n    function() {\n      return new Date().getTime();\n    };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n    },\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g'),\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name) {\n      var func = (_[name] = obj[name]);\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g,\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029',\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp(\n      [\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source,\n      ].join('|') + '|$',\n      'g'\n    );\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(\n      match,\n      escape,\n      interpolate,\n      evaluate,\n      offset\n    ) {\n      source += text.slice(index, offset).replace(escaper, function(match) {\n        return '\\\\' + escapes[match];\n      });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source =\n      \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source +\n      'return __p;\\n';\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source =\n      'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(\n    ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'],\n    function(name) {\n      var method = ArrayProto[name];\n      _.prototype[name] = function() {\n        var obj = this._wrapped;\n        method.apply(obj, arguments);\n        if ((name == 'shift' || name == 'splice') && obj.length === 0)\n          delete obj[0];\n        return result.call(this, obj);\n      };\n    }\n  );\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    },\n  });\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/underscore/underscore.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/underscore/underscore.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}}],"sources":{"../node_modules/underscore/underscore.js":"//     Underscore.js 1.6.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype,\n    ObjProto = Object.prototype,\n    FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    concat = ArrayProto.concat,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeForEach = ArrayProto.forEach,\n    nativeMap = ArrayProto.map,\n    nativeReduce = ArrayProto.reduce,\n    nativeReduceRight = ArrayProto.reduceRight,\n    nativeFilter = ArrayProto.filter,\n    nativeEvery = ArrayProto.every,\n    nativeSome = ArrayProto.some,\n    nativeIndexOf = ArrayProto.indexOf,\n    nativeLastIndexOf = ArrayProto.lastIndexOf,\n    nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeBind = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.6.0';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = (_.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return obj;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, length = obj.length; i < length; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n          return;\n      }\n    }\n    return obj;\n  });\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results.push(iterator.call(context, value, index, list));\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial\n        ? obj.reduceRight(iterator, memo)\n        : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter)\n      return obj.filter(predicate, context);\n    each(obj, function(value, index, list) {\n      if (predicate.call(context, value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(\n      obj,\n      function(value, index, list) {\n        return !predicate.call(context, value, index, list);\n      },\n      context\n    );\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate || (predicate = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery)\n      return obj.every(predicate, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && predicate.call(context, value, index, list)))\n        return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = (_.some = _.any = function(obj, predicate, context) {\n    predicate || (predicate = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome)\n      return obj.some(predicate, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = predicate.call(context, value, index, list)))\n        return breaker;\n    });\n    return !!result;\n  });\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf)\n      return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n  _.max = function(obj, iterator, context) {\n    if (\n      !iterator &&\n      _.isArray(obj) &&\n      obj[0] === +obj[0] &&\n      obj.length < 65535\n    ) {\n      return Math.max.apply(Math, obj);\n    }\n    var result = -Infinity,\n      lastComputed = -Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator\n        ? iterator.call(context, value, index, list)\n        : value;\n      if (computed > lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (\n      !iterator &&\n      _.isArray(obj) &&\n      obj[0] === +obj[0] &&\n      obj.length < 65535\n    ) {\n      return Math.min.apply(Math, obj);\n    }\n    var result = Infinity,\n      lastComputed = Infinity;\n    each(obj, function(value, index, list) {\n      var computed = iterator\n        ? iterator.call(context, value, index, list)\n        : value;\n      if (computed < lastComputed) {\n        result = value;\n        lastComputed = computed;\n      }\n    });\n    return result;\n  };\n\n  // Shuffle an array, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return value;\n    return _.property(value);\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, iterator, context) {\n    iterator = lookupIterator(iterator);\n    return _.pluck(\n      _.map(obj, function(value, index, list) {\n        return {\n          value: value,\n          index: index,\n          criteria: iterator.call(context, value, index, list),\n        };\n      }).sort(function(left, right) {\n        var a = left.criteria;\n        var b = right.criteria;\n        if (a !== b) {\n          if (a > b || a === void 0) return 1;\n          if (a < b || b === void 0) return -1;\n        }\n        return left.index - right.index;\n      }),\n      'value'\n    );\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iterator, context) {\n      var result = {};\n      iterator = lookupIterator(iterator);\n      each(obj, function(value, index) {\n        var key = iterator.call(context, value, index, obj);\n        behavior(result, key, value);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, key, value) {\n    _.has(result, key) ? result[key].push(value) : (result[key] = [value]);\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, key, value) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, key) {\n    _.has(result, key) ? result[key]++ : (result[key] = 1);\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0,\n      high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value\n        ? (low = mid + 1)\n        : (high = mid);\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    each(input, function(value) {\n      if (_.isArray(value) || _.isArguments(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Split an array into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(array, predicate) {\n    var pass = [],\n      fail = [];\n    each(array, function(elem) {\n      (predicate(elem) ? pass : fail).push(elem);\n    });\n    return [pass, fail];\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (\n        isSorted\n          ? !index || seen[seen.length - 1] !== value\n          : !_.contains(seen, value)\n      ) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(_.flatten(arguments, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.contains(other, item);\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value) {\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var length = _.max(_.pluck(arguments, 'length').concat(0));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, '' + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0,\n      length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf)\n      return array.indexOf(item, isSorted);\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = hasIndex ? from : array.length;\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(length);\n\n    while (idx < length) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var ctor = function() {};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind)\n      return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError();\n    args = slice.call(arguments, 2);\n    return (bound = function() {\n      if (!(this instanceof bound))\n        return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor();\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    });\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0)\n      throw new Error('bindAll must be passed function names');\n    each(funcs, function(f) {\n      obj[f] = _.bind(obj[f], obj);\n    });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key)\n        ? memo[key]\n        : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false,\n      memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = new Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = new Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return (\n          a.source == b.source &&\n          a.global == b.global &&\n          a.multiline == b.multiline &&\n          a.ignoreCase == b.ignoreCase\n        );\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor,\n      bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      !(\n        _.isFunction(aCtor) &&\n        aCtor instanceof aCtor &&\n        _.isFunction(bCtor) &&\n        bCtor instanceof bCtor\n      ) &&\n      ('constructor' in a && 'constructor' in b)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0,\n      result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)))\n            break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !size--) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray =\n    nativeIsArray ||\n    function(obj) {\n      return toString.call(obj) == '[object Array]';\n    };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(\n    ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'],\n    function(name) {\n      _['is' + name] = function(obj) {\n        return toString.call(obj) == '[object ' + name + ']';\n      };\n    }\n  );\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return (\n      obj === true || obj === false || toString.call(obj) == '[object Boolean]'\n    );\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    return function(obj) {\n      if (obj === attrs) return true; //avoid comparing an object to itself.\n      for (var key in attrs) {\n        if (attrs[key] !== obj[key]) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(Math.max(0, n));\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now =\n    Date.now ||\n    function() {\n      return new Date().getTime();\n    };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n    },\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g'),\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name) {\n      var func = (_[name] = obj[name]);\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g,\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029',\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp(\n      [\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source,\n      ].join('|') + '|$',\n      'g'\n    );\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(\n      match,\n      escape,\n      interpolate,\n      evaluate,\n      offset\n    ) {\n      source += text.slice(index, offset).replace(escaper, function(match) {\n        return '\\\\' + escapes[match];\n      });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source =\n      \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source +\n      'return __p;\\n';\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source =\n      'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(\n    ['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'],\n    function(name) {\n      var method = ArrayProto[name];\n      _.prototype[name] = function() {\n        var obj = this._wrapped;\n        method.apply(obj, arguments);\n        if ((name == 'shift' || name == 'splice') && obj.length === 0)\n          delete obj[0];\n        return result.call(this, obj);\n      };\n    }\n  );\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    },\n  });\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"},"lineCount":1435}},"error":null,"hash":"8ff96d6f72925886a70cf0abbaf69033","cacheData":{"env":{}}}