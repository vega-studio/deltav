{"id":"../src/shaders/processing/base-shader-io-injection.ts","dependencies":[{"name":"/Users/diniden/Desktop/VoidRay/fiesta/tsconfig.json","includedInParent":true,"mtime":1570670525118},{"name":"/Users/diniden/Desktop/VoidRay/fiesta/package.json","includedInParent":true,"mtime":1570672381660},{"name":"debug","loc":{"line":3,"column":20},"parent":"/Users/diniden/Desktop/VoidRay/fiesta/src/shaders/processing/base-shader-io-injection.ts","resolved":"/Users/diniden/Desktop/VoidRay/fiesta/node_modules/debug/src/browser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug = require('debug')('performance');\n\nvar BaseShaderIOInjection = function () {\n  function BaseShaderIOInjection() {}\n\n  BaseShaderIOInjection.prototype.setDeclaration = function (declarations, key, value, debugMessageCtx) {\n    if (declarations.get(key)) {\n      debug('%s: Overriding declaration %s\\nSetting new value: %s', debugMessageCtx || 'Expand IO Declarations', key, value);\n    }\n\n    declarations.set(key, value);\n  };\n\n  return BaseShaderIOInjection;\n}();\n\nexports.BaseShaderIOInjection = BaseShaderIOInjection;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":7,"column":4}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":7,"column":9}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":7,"column":12}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":7,"column":19}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":7,"column":20}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":7,"column":27}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":7,"column":28}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":31},"generated":{"line":7,"column":29}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":7,"column":42}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":7,"column":43}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":9,"column":4}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":9,"column":25}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":9,"column":28}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":9,"column":40}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":10,"column":11}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":10,"column":32}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":10,"column":35}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":107,"column":1},"generated":{"line":10,"column":36}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":2}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":23}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":24}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":33}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":34}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":48}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":51}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":12,"column":61}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":73}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":12,"column":75}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":78}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":12,"column":80}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":85}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":12,"column":87}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":12,"column":102}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":48,"column":28},"generated":{"line":12,"column":104}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":13,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":13,"column":8}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":20},"generated":{"line":13,"column":20}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":21},"generated":{"line":13,"column":21}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":13,"column":24}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":13,"column":25}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":13,"column":28}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":13,"column":29}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":50,"column":31},"generated":{"line":13,"column":31}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":14,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":14,"column":6}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":14,"column":11}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":14,"column":12}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":14,"column":66}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":14,"column":68}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":14,"column":83}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":53,"column":27},"generated":{"line":14,"column":87}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":14,"column":111}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":14,"column":113}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":14,"column":116}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":14,"column":118}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":14,"column":123}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":14,"column":124}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":57,"column":5},"generated":{"line":15,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":17,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":17,"column":4}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":17,"column":16}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":17},"generated":{"line":17,"column":17}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":17,"column":20}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":21},"generated":{"line":17,"column":21}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":17,"column":24}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":26},"generated":{"line":17,"column":26}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":17,"column":31}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":60,"column":3},"generated":{"line":18,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":18,"column":3}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":107,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":107,"column":0},"generated":{"line":20,"column":9}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":107,"column":0},"generated":{"line":20,"column":30}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":21,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":21,"column":1}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":21,"column":3}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":0}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":7}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":8}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":29}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":32}},{"source":"../src/shaders/processing/base-shader-io-injection.ts","name":null,"original":{"line":39,"column":22},"generated":{"line":23,"column":53}}],"sources":{"../src/shaders/processing/base-shader-io-injection.ts":"import { Attribute } from '../../gl';\nimport { Instance } from '../../instance-provider/instance';\nimport { MetricsProcessing } from '../../shaders/processing/metrics-processing';\nimport { ILayerProps, Layer } from '../../surface/layer';\nimport {\n  IInstanceAttribute,\n  IInstancingUniform,\n  IUniform,\n  IVertexAttribute,\n  ShaderInjectionTarget,\n} from '../../types';\n\nconst debug = require('debug')('performance');\n\n/**\n * The result of an injection into the header of a shader. Allows for injection content into the header\n * and provide extra Shader IO such as uniforms and attributes.\n */\nexport type ShaderIOHeaderInjectionResult = {\n  /** The content to inject into the shader */\n  injection: string;\n  /** Additional geometry changes possibly caused by the header injection */\n  geometry?: {\n    attributes: { [key: string]: Attribute };\n  };\n  /** Additional material changes possibly caused by the header injection changes */\n  material?: {\n    uniforms: IInstancingUniform[];\n  };\n};\n\nexport type ShaderDeclarationStatements = Map<string, string>;\n\n/**\n * This is the basis to allow the system to have additional shader injection capabilities.\n * This will cover an object or manager that wishes to inject elements into the header of the\n * shader and inject elements after attribute destructuring.\n */\nexport abstract class BaseShaderIOInjection {\n  /**\n   * This is a helper to apply declarations to the input declaration object. This will automatically use the\n   * performance debug output to provide useful information when overrides occur.\n   */\n  setDeclaration(\n    declarations: ShaderDeclarationStatements,\n    key: string,\n    value: string,\n    debugMessageCtx?: string\n  ) {\n    if (declarations.get(key)) {\n      debug(\n        '%s: Overriding declaration %s\\nSetting new value: %s',\n        debugMessageCtx || 'Expand IO Declarations',\n        key,\n        value\n      );\n    }\n\n    declarations.set(key, value);\n  }\n\n  /**\n   * This allows for injection into the header of the shader.\n   *\n   * The order these controllers are injected\n   * into the system determines the order the contents are written to the header. So dependent injections\n   * must be sorted appropriately.\n   *\n   * @param target Specifies which shader type we should be writing the header for. Will be FS OR VS not ALL.\n   * @param declarations This is where the output should register declarations so the system can composite them together.\n   *                     This allows for IO Injections to override each other on declared names and help them set up expectations\n   *                     amongst each other for shader output.\n   * @param layer The layer that is currently being processed\n   * @param metrics Some metrics processed that are useful for making decisions about buffering strategies etc.\n   */\n  abstract processHeaderInjection(\n    target: ShaderInjectionTarget,\n    declarations: ShaderDeclarationStatements,\n    layer: Layer<Instance, ILayerProps<Instance>>,\n    metrics: MetricsProcessing,\n    vertexAttributes: IVertexAttribute[],\n    instanceAttributes: IInstanceAttribute<Instance>[],\n    uniforms: IUniform[]\n  ): ShaderIOHeaderInjectionResult;\n\n  /**\n   * This allows for injection into the shader AFTER attribute destructuring has taken place.\n   *\n   * The order these controllers are injected\n   * into the system determines the order the contents are written to the header. So dependent injections\n   * must be sorted appropriately.\n   *\n   * @param layer The layer that is currently being processed\n   * @param declarations This is where the output should register declarations so the system can composite them together.\n   *                     This allows for IO Injections to override each other on declared names and help them set up expectations\n   *                     amongst each other for shader output.\n   * @param metrics Some metrics processed that are useful for making decisions about buffering strategies etc.\n   */\n  abstract processAttributeDestructuring(\n    layer: Layer<Instance, ILayerProps<Instance>>,\n    declarations: ShaderDeclarationStatements,\n    metrics: MetricsProcessing,\n    vertexAttributes: IVertexAttribute[],\n    instanceAttributes: IInstanceAttribute<Instance>[],\n    uniforms: IUniform[]\n  ): string;\n}\n"},"lineCount":null}},"error":null,"hash":"cb84cae601c39ed27a8907dbec5842b1","cacheData":{"env":{}}}