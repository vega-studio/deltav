{"id":"../node_modules/matter-js/build/matter.js","dependencies":[{"name":"/Users/diniden/Desktop/VoidRay/fiesta/package.json","includedInParent":true,"mtime":1570672381660},{"name":"/Users/diniden/Desktop/VoidRay/fiesta/node_modules/matter-js/package.json","includedInParent":true,"mtime":1570671212420}],"generated":{"js":"var define;\nvar global = arguments[3];\n/**\n * matter-js 0.14.2 by @liabru 2018-06-11\n * http://brm.io/matter-js/\n * License MIT\n */\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f) {\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], f);\n  } else {\n    var g;\n    if (typeof window !== 'undefined') {\n      g = window;\n    } else if (typeof global !== 'undefined') {\n      g = global;\n    } else if (typeof self !== 'undefined') {\n      g = self;\n    } else {\n      g = this;\n    }\n    g.Matter = f();\n  }\n})(function() {\n  var define, module, exports;\n  return (function() {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = 'function' == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw ((a.code = 'MODULE_NOT_FOUND'), a);\n          }\n          var p = (n[i] = { exports: {} });\n          e[i][0].call(\n            p.exports,\n            function(r) {\n              var n = e[i][1][r];\n              return o(n || r);\n            },\n            p,\n            p.exports,\n            r,\n            e,\n            n,\n            t\n          );\n        }\n        return n[i].exports;\n      }\n      for (\n        var u = 'function' == typeof require && require, i = 0;\n        i < t.length;\n        i++\n      )\n        o(t[i]);\n      return o;\n    }\n    return r;\n  })()(\n    {\n      1: [\n        function(_dereq_, module, exports) {\n          /**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\n          var Body = {};\n\n          module.exports = Body;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Render = _dereq_('../render/Render');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Axes = _dereq_('../geometry/Axes');\n\n          (function() {\n            Body._inertiaScale = 4;\n            Body._nextCollidingGroupId = 1;\n            Body._nextNonCollidingGroupId = -1;\n            Body._nextCategory = 0x0001;\n\n            /**\n             * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * Vertices must be specified in clockwise order.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} options\n             * @return {body} body\n             */\n            Body.create = function(options) {\n              var defaults = {\n                id: Common.nextId(),\n                type: 'body',\n                label: 'Body',\n                parts: [],\n                plugin: {},\n                angle: 0,\n                vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n                position: { x: 0, y: 0 },\n                force: { x: 0, y: 0 },\n                torque: 0,\n                positionImpulse: { x: 0, y: 0 },\n                constraintImpulse: { x: 0, y: 0, angle: 0 },\n                totalContacts: 0,\n                speed: 0,\n                angularSpeed: 0,\n                velocity: { x: 0, y: 0 },\n                angularVelocity: 0,\n                isSensor: false,\n                isStatic: false,\n                isSleeping: false,\n                motion: 0,\n                sleepThreshold: 60,\n                density: 0.001,\n                restitution: 0,\n                friction: 0.1,\n                frictionStatic: 0.5,\n                frictionAir: 0.01,\n                collisionFilter: {\n                  category: 0x0001,\n                  mask: 0xffffffff,\n                  group: 0,\n                },\n                slop: 0.05,\n                timeScale: 1,\n                render: {\n                  visible: true,\n                  opacity: 1,\n                  sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0,\n                  },\n                  lineWidth: 0,\n                },\n              };\n\n              var body = Common.extend(defaults, options);\n\n              _initProperties(body, options);\n\n              return body;\n            };\n\n            /**\n             * Returns the next unique group index for which bodies will collide.\n             * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n             * See `body.collisionFilter` for more information.\n             * @method nextGroup\n             * @param {bool} [isNonColliding=false]\n             * @return {Number} Unique group index\n             */\n            Body.nextGroup = function(isNonColliding) {\n              if (isNonColliding) return Body._nextNonCollidingGroupId--;\n\n              return Body._nextCollidingGroupId++;\n            };\n\n            /**\n             * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n             * There are 32 available. See `body.collisionFilter` for more information.\n             * @method nextCategory\n             * @return {Number} Unique category bitfield\n             */\n            Body.nextCategory = function() {\n              Body._nextCategory = Body._nextCategory << 1;\n              return Body._nextCategory;\n            };\n\n            /**\n             * Initialises body properties.\n             * @method _initProperties\n             * @private\n             * @param {body} body\n             * @param {} [options]\n             */\n            var _initProperties = function(body, options) {\n              options = options || {};\n\n              // init required properties (order is important)\n              Body.set(body, {\n                bounds: body.bounds || Bounds.create(body.vertices),\n                positionPrev: body.positionPrev || Vector.clone(body.position),\n                anglePrev: body.anglePrev || body.angle,\n                vertices: body.vertices,\n                parts: body.parts || [body],\n                isStatic: body.isStatic,\n                isSleeping: body.isSleeping,\n                parent: body.parent || body,\n              });\n\n              Vertices.rotate(body.vertices, body.angle, body.position);\n              Axes.rotate(body.axes, body.angle);\n              Bounds.update(body.bounds, body.vertices, body.velocity);\n\n              // allow options to override the automatically calculated properties\n              Body.set(body, {\n                axes: options.axes || body.axes,\n                area: options.area || body.area,\n                mass: options.mass || body.mass,\n                inertia: options.inertia || body.inertia,\n              });\n\n              // render properties\n              var defaultFillStyle = body.isStatic\n                  ? '#2e2b44'\n                  : Common.choose([\n                      '#006BA6',\n                      '#0496FF',\n                      '#FFBC42',\n                      '#D81159',\n                      '#8F2D56',\n                    ]),\n                defaultStrokeStyle = '#000';\n              body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n              body.render.strokeStyle =\n                body.render.strokeStyle || defaultStrokeStyle;\n              body.render.sprite.xOffset +=\n                -(body.bounds.min.x - body.position.x) /\n                (body.bounds.max.x - body.bounds.min.x);\n              body.render.sprite.yOffset +=\n                -(body.bounds.min.y - body.position.y) /\n                (body.bounds.max.y - body.bounds.min.y);\n            };\n\n            /**\n             * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n             * Prefer to use the actual setter functions in performance critical situations.\n             * @method set\n             * @param {body} body\n             * @param {} settings A property name (or map of properties and values) to set on the body.\n             * @param {} value The value to set if `settings` is a single property name.\n             */\n            Body.set = function(body, settings, value) {\n              var property;\n\n              if (typeof settings === 'string') {\n                property = settings;\n                settings = {};\n                settings[property] = value;\n              }\n\n              for (property in settings) {\n                value = settings[property];\n\n                if (!settings.hasOwnProperty(property)) continue;\n\n                switch (property) {\n                  case 'isStatic':\n                    Body.setStatic(body, value);\n                    break;\n                  case 'isSleeping':\n                    Sleeping.set(body, value);\n                    break;\n                  case 'mass':\n                    Body.setMass(body, value);\n                    break;\n                  case 'density':\n                    Body.setDensity(body, value);\n                    break;\n                  case 'inertia':\n                    Body.setInertia(body, value);\n                    break;\n                  case 'vertices':\n                    Body.setVertices(body, value);\n                    break;\n                  case 'position':\n                    Body.setPosition(body, value);\n                    break;\n                  case 'angle':\n                    Body.setAngle(body, value);\n                    break;\n                  case 'velocity':\n                    Body.setVelocity(body, value);\n                    break;\n                  case 'angularVelocity':\n                    Body.setAngularVelocity(body, value);\n                    break;\n                  case 'parts':\n                    Body.setParts(body, value);\n                    break;\n                  default:\n                    body[property] = value;\n                }\n              }\n            };\n\n            /**\n             * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n             * @method setStatic\n             * @param {body} body\n             * @param {bool} isStatic\n             */\n            Body.setStatic = function(body, isStatic) {\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.isStatic = isStatic;\n\n                if (isStatic) {\n                  part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia,\n                  };\n\n                  part.restitution = 0;\n                  part.friction = 1;\n                  part.mass = part.inertia = part.density = Infinity;\n                  part.inverseMass = part.inverseInertia = 0;\n\n                  part.positionPrev.x = part.position.x;\n                  part.positionPrev.y = part.position.y;\n                  part.anglePrev = part.angle;\n                  part.angularVelocity = 0;\n                  part.speed = 0;\n                  part.angularSpeed = 0;\n                  part.motion = 0;\n                } else if (part._original) {\n                  part.restitution = part._original.restitution;\n                  part.friction = part._original.friction;\n                  part.mass = part._original.mass;\n                  part.inertia = part._original.inertia;\n                  part.density = part._original.density;\n                  part.inverseMass = part._original.inverseMass;\n                  part.inverseInertia = part._original.inverseInertia;\n\n                  delete part._original;\n                }\n              }\n            };\n\n            /**\n             * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n             * @method setMass\n             * @param {body} body\n             * @param {number} mass\n             */\n            Body.setMass = function(body, mass) {\n              var moment = body.inertia / (body.mass / 6);\n              body.inertia = moment * (mass / 6);\n              body.inverseInertia = 1 / body.inertia;\n\n              body.mass = mass;\n              body.inverseMass = 1 / body.mass;\n              body.density = body.mass / body.area;\n            };\n\n            /**\n             * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n             * @method setDensity\n             * @param {body} body\n             * @param {number} density\n             */\n            Body.setDensity = function(body, density) {\n              Body.setMass(body, density * body.area);\n              body.density = density;\n            };\n\n            /**\n             * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n             * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n             * @method setInertia\n             * @param {body} body\n             * @param {number} inertia\n             */\n            Body.setInertia = function(body, inertia) {\n              body.inertia = inertia;\n              body.inverseInertia = 1 / body.inertia;\n            };\n\n            /**\n             * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n             * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n             * They are then automatically translated to world space based on `body.position`.\n             *\n             * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n             * Vertices must form a convex hull, concave hulls are not supported.\n             *\n             * @method setVertices\n             * @param {body} body\n             * @param {vector[]} vertices\n             */\n            Body.setVertices = function(body, vertices) {\n              // change vertices\n              if (vertices[0].body === body) {\n                body.vertices = vertices;\n              } else {\n                body.vertices = Vertices.create(vertices, body);\n              }\n\n              // update properties\n              body.axes = Axes.fromVertices(body.vertices);\n              body.area = Vertices.area(body.vertices);\n              Body.setMass(body, body.density * body.area);\n\n              // orient vertices around the centre of mass at origin (0, 0)\n              var centre = Vertices.centre(body.vertices);\n              Vertices.translate(body.vertices, centre, -1);\n\n              // update inertia while vertices are at origin (0, 0)\n              Body.setInertia(\n                body,\n                Body._inertiaScale * Vertices.inertia(body.vertices, body.mass)\n              );\n\n              // update geometry\n              Vertices.translate(body.vertices, body.position);\n              Bounds.update(body.bounds, body.vertices, body.velocity);\n            };\n\n            /**\n             * Sets the parts of the `body` and updates mass, inertia and centroid.\n             * Each part will have its parent set to `body`.\n             * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n             * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n             * @method setParts\n             * @param {body} body\n             * @param [body] parts\n             * @param {bool} [autoHull=true]\n             */\n            Body.setParts = function(body, parts, autoHull) {\n              var i;\n\n              // add all the parts, ensuring that the first part is always the parent body\n              parts = parts.slice(0);\n              body.parts.length = 0;\n              body.parts.push(body);\n              body.parent = body;\n\n              for (i = 0; i < parts.length; i++) {\n                var part = parts[i];\n                if (part !== body) {\n                  part.parent = body;\n                  body.parts.push(part);\n                }\n              }\n\n              if (body.parts.length === 1) return;\n\n              autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n              // find the convex hull of all parts to set on the parent body\n              if (autoHull) {\n                var vertices = [];\n                for (i = 0; i < parts.length; i++) {\n                  vertices = vertices.concat(parts[i].vertices);\n                }\n\n                Vertices.clockwiseSort(vertices);\n\n                var hull = Vertices.hull(vertices),\n                  hullCentre = Vertices.centre(hull);\n\n                Body.setVertices(body, hull);\n                Vertices.translate(body.vertices, hullCentre);\n              }\n\n              // sum the properties of all compound parts of the parent body\n              var total = Body._totalProperties(body);\n\n              body.area = total.area;\n              body.parent = body;\n              body.position.x = total.centre.x;\n              body.position.y = total.centre.y;\n              body.positionPrev.x = total.centre.x;\n              body.positionPrev.y = total.centre.y;\n\n              Body.setMass(body, total.mass);\n              Body.setInertia(body, total.inertia);\n              Body.setPosition(body, total.centre);\n            };\n\n            /**\n             * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n             * @method setPosition\n             * @param {body} body\n             * @param {vector} position\n             */\n            Body.setPosition = function(body, position) {\n              var delta = Vector.sub(position, body.position);\n              body.positionPrev.x += delta.x;\n              body.positionPrev.y += delta.y;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.position.x += delta.x;\n                part.position.y += delta.y;\n                Vertices.translate(part.vertices, delta);\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n            };\n\n            /**\n             * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n             * @method setAngle\n             * @param {body} body\n             * @param {number} angle\n             */\n            Body.setAngle = function(body, angle) {\n              var delta = angle - body.angle;\n              body.anglePrev += delta;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.angle += delta;\n                Vertices.rotate(part.vertices, delta, body.position);\n                Axes.rotate(part.axes, delta);\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n                if (i > 0) {\n                  Vector.rotateAbout(\n                    part.position,\n                    delta,\n                    body.position,\n                    part.position\n                  );\n                }\n              }\n            };\n\n            /**\n             * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n             * @method setVelocity\n             * @param {body} body\n             * @param {vector} velocity\n             */\n            Body.setVelocity = function(body, velocity) {\n              body.positionPrev.x = body.position.x - velocity.x;\n              body.positionPrev.y = body.position.y - velocity.y;\n              body.velocity.x = velocity.x;\n              body.velocity.y = velocity.y;\n              body.speed = Vector.magnitude(body.velocity);\n            };\n\n            /**\n             * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n             * @method setAngularVelocity\n             * @param {body} body\n             * @param {number} velocity\n             */\n            Body.setAngularVelocity = function(body, velocity) {\n              body.anglePrev = body.angle - velocity;\n              body.angularVelocity = velocity;\n              body.angularSpeed = Math.abs(body.angularVelocity);\n            };\n\n            /**\n             * Moves a body by a given vector relative to its current position, without imparting any velocity.\n             * @method translate\n             * @param {body} body\n             * @param {vector} translation\n             */\n            Body.translate = function(body, translation) {\n              Body.setPosition(body, Vector.add(body.position, translation));\n            };\n\n            /**\n             * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n             * @method rotate\n             * @param {body} body\n             * @param {number} rotation\n             * @param {vector} [point]\n             */\n            Body.rotate = function(body, rotation, point) {\n              if (!point) {\n                Body.setAngle(body, body.angle + rotation);\n              } else {\n                var cos = Math.cos(rotation),\n                  sin = Math.sin(rotation),\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + (dx * cos - dy * sin),\n                  y: point.y + (dx * sin + dy * cos),\n                });\n\n                Body.setAngle(body, body.angle + rotation);\n              }\n            };\n\n            /**\n             * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n             * @method scale\n             * @param {body} body\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} [point]\n             */\n            Body.scale = function(body, scaleX, scaleY, point) {\n              var totalArea = 0,\n                totalInertia = 0;\n\n              point = point || body.position;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n\n                // scale vertices\n                Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n                // update properties\n                part.axes = Axes.fromVertices(part.vertices);\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, {\n                  x: -part.position.x,\n                  y: -part.position.y,\n                });\n                Body.setInertia(\n                  part,\n                  Body._inertiaScale *\n                    Vertices.inertia(part.vertices, part.mass)\n                );\n                Vertices.translate(part.vertices, {\n                  x: part.position.x,\n                  y: part.position.y,\n                });\n\n                if (i > 0) {\n                  totalArea += part.area;\n                  totalInertia += part.inertia;\n                }\n\n                // scale position\n                part.position.x =\n                  point.x + (part.position.x - point.x) * scaleX;\n                part.position.y =\n                  point.y + (part.position.y - point.y) * scaleY;\n\n                // update bounds\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n\n              // handle parent body\n              if (body.parts.length > 1) {\n                body.area = totalArea;\n\n                if (!body.isStatic) {\n                  Body.setMass(body, body.density * totalArea);\n                  Body.setInertia(body, totalInertia);\n                }\n              }\n\n              // handle circles\n              if (body.circleRadius) {\n                if (scaleX === scaleY) {\n                  body.circleRadius *= scaleX;\n                } else {\n                  // body is no longer a circle\n                  body.circleRadius = null;\n                }\n              }\n            };\n\n            /**\n             * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n             * @method update\n             * @param {body} body\n             * @param {number} deltaTime\n             * @param {number} timeScale\n             * @param {number} correction\n             */\n            Body.update = function(body, deltaTime, timeScale, correction) {\n              var deltaTimeSquared = Math.pow(\n                deltaTime * timeScale * body.timeScale,\n                2\n              );\n\n              // from the previous step\n              var frictionAir =\n                  1 - body.frictionAir * timeScale * body.timeScale,\n                velocityPrevX = body.position.x - body.positionPrev.x,\n                velocityPrevY = body.position.y - body.positionPrev.y;\n\n              // update velocity with Verlet integration\n              body.velocity.x =\n                velocityPrevX * frictionAir * correction +\n                body.force.x / body.mass * deltaTimeSquared;\n              body.velocity.y =\n                velocityPrevY * frictionAir * correction +\n                body.force.y / body.mass * deltaTimeSquared;\n\n              body.positionPrev.x = body.position.x;\n              body.positionPrev.y = body.position.y;\n              body.position.x += body.velocity.x;\n              body.position.y += body.velocity.y;\n\n              // update angular velocity with Verlet integration\n              body.angularVelocity =\n                (body.angle - body.anglePrev) * frictionAir * correction +\n                body.torque / body.inertia * deltaTimeSquared;\n              body.anglePrev = body.angle;\n              body.angle += body.angularVelocity;\n\n              // track speed and acceleration\n              body.speed = Vector.magnitude(body.velocity);\n              body.angularSpeed = Math.abs(body.angularVelocity);\n\n              // transform the body geometry\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n\n                Vertices.translate(part.vertices, body.velocity);\n\n                if (i > 0) {\n                  part.position.x += body.velocity.x;\n                  part.position.y += body.velocity.y;\n                }\n\n                if (body.angularVelocity !== 0) {\n                  Vertices.rotate(\n                    part.vertices,\n                    body.angularVelocity,\n                    body.position\n                  );\n                  Axes.rotate(part.axes, body.angularVelocity);\n                  if (i > 0) {\n                    Vector.rotateAbout(\n                      part.position,\n                      body.angularVelocity,\n                      body.position,\n                      part.position\n                    );\n                  }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n            };\n\n            /**\n             * Applies a force to a body from a given world-space position, including resulting torque.\n             * @method applyForce\n             * @param {body} body\n             * @param {vector} position\n             * @param {vector} force\n             */\n            Body.applyForce = function(body, position, force) {\n              body.force.x += force.x;\n              body.force.y += force.y;\n              var offset = {\n                x: position.x - body.position.x,\n                y: position.y - body.position.y,\n              };\n              body.torque += offset.x * force.y - offset.y * force.x;\n            };\n\n            /**\n             * Returns the sums of the properties of all compound parts of the parent body.\n             * @method _totalProperties\n             * @private\n             * @param {body} body\n             * @return {}\n             */\n            Body._totalProperties = function(body) {\n              // from equations at:\n              // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n              // http://output.to/sideway/default.asp?qno=121100087\n\n              var properties = {\n                mass: 0,\n                area: 0,\n                inertia: 0,\n                centre: { x: 0, y: 0 },\n              };\n\n              // sum the properties of all compound parts of the parent body\n              for (\n                var i = body.parts.length === 1 ? 0 : 1;\n                i < body.parts.length;\n                i++\n              ) {\n                var part = body.parts[i],\n                  mass = part.mass !== Infinity ? part.mass : 1;\n\n                properties.mass += mass;\n                properties.area += part.area;\n                properties.inertia += part.inertia;\n                properties.centre = Vector.add(\n                  properties.centre,\n                  Vector.mult(part.position, mass)\n                );\n              }\n\n              properties.centre = Vector.div(\n                properties.centre,\n                properties.mass\n              );\n\n              return properties;\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when a body starts sleeping (where `this` is the body).\n             *\n             * @event sleepStart\n             * @this {body} The body that has started sleeping\n             * @param {} event An event object\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a body ends sleeping (where `this` is the body).\n             *\n             * @event sleepEnd\n             * @this {body} The body that has ended sleeping\n             * @param {} event An event object\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"body\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage bodies.\n             *\n             * @property label\n             * @type string\n             * @default \"Body\"\n             */\n\n            /**\n             * An array of bodies that make up this body.\n             * The first body in the array must always be a self reference to the current body instance.\n             * All bodies in the `parts` array together form a single rigid compound body.\n             * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n             * Parts themselves should never be added to a `World`, only the parent body should be.\n             * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n             *\n             * @property parts\n             * @type body[]\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n\n            /**\n             * A self reference if the body is _not_ a part of another body.\n             * Otherwise this is a reference to the body that this is a part of.\n             * See `body.parts`.\n             *\n             * @property parent\n             * @type body\n             */\n\n            /**\n             * A `Number` specifying the angle of the body, in radians.\n             *\n             * @property angle\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * An array of `Vector` objects that specify the convex hull of the rigid body.\n             * These should be provided about the origin `(0, 0)`. E.g.\n             *\n             *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n             *\n             * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n             * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n             *\n             * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n             * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n             *\n             * @property vertices\n             * @type vector[]\n             */\n\n            /**\n             * A `Vector` that specifies the current world-space position of the body.\n             *\n             * @property position\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n             *\n             * @property force\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n             *\n             * @property torque\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n             *\n             * @readOnly\n             * @property speed\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n             *\n             * @readOnly\n             * @property angularSpeed\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n             * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n             *\n             * @readOnly\n             * @property velocity\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n             * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n             *\n             * @readOnly\n             * @property angularVelocity\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n             * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n             *\n             * @property isStatic\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n             *\n             * @property isSensor\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n             * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n             *\n             * @property isSleeping\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n             * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n             *\n             * @readOnly\n             * @property motion\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n             *\n             * @property sleepThreshold\n             * @type number\n             * @default 60\n             */\n\n            /**\n             * A `Number` that defines the density of the body, that is its mass per unit area.\n             * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n             * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n             *\n             * @property density\n             * @type number\n             * @default 0.001\n             */\n\n            /**\n             * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n             * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n             *\n             * @property mass\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the inverse mass of the body (`1 / mass`).\n             * If you modify this value, you must also modify the `body.mass` property.\n             *\n             * @property inverseMass\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n             * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n             * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n             *\n             * @property inertia\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n             * If you modify this value, you must also modify the `body.inertia` property.\n             *\n             * @property inverseInertia\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n             * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n             * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n             * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n             *\n             *     Math.max(bodyA.restitution, bodyB.restitution)\n             *\n             * @property restitution\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n             * A value of `0` means that the body may slide indefinitely.\n             * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n             *\n             * The effects of the value may be non-linear.\n             * High values may be unstable depending on the body.\n             * The engine uses a Coulomb friction model including static and kinetic friction.\n             * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n             *\n             *     Math.min(bodyA.friction, bodyB.friction)\n             *\n             * @property friction\n             * @type number\n             * @default 0.1\n             */\n\n            /**\n             * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n             * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n             * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n             * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n             *\n             * @property frictionStatic\n             * @type number\n             * @default 0.5\n             */\n\n            /**\n             * A `Number` that defines the air friction of the body (air resistance).\n             * A value of `0` means the body will never slow as it moves through space.\n             * The higher the value, the faster a body slows when moving through space.\n             * The effects of the value are non-linear.\n             *\n             * @property frictionAir\n             * @type number\n             * @default 0.01\n             */\n\n            /**\n             * An `Object` that specifies the collision filtering properties of this body.\n             *\n             * Collisions between two bodies will obey the following rules:\n             * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n             *   they will always collide if the value is positive, and they will never collide\n             *   if the value is negative.\n             * - If the two bodies have different values of `collisionFilter.group` or if one\n             *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n             *\n             * Each body belongs to a collision category, given by `collisionFilter.category`. This\n             * value is used as a bit field and the category should have only one bit set, meaning that\n             * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n             * different collision categories available.\n             *\n             * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n             * the categories it collides with (the value is the bitwise AND value of all these categories).\n             *\n             * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n             * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n             * are both true.\n             *\n             * @property collisionFilter\n             * @type object\n             */\n\n            /**\n             * An Integer `Number`, that specifies the collision group this body belongs to.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.group\n             * @type object\n             * @default 0\n             */\n\n            /**\n             * A bit field that specifies the collision category this body belongs to.\n             * The category value should have only one bit set, for example `0x0001`.\n             * This means there are up to 32 unique collision categories available.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.category\n             * @type object\n             * @default 1\n             */\n\n            /**\n             * A bit mask that specifies the collision categories this body may collide with.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.mask\n             * @type object\n             * @default -1\n             */\n\n            /**\n             * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n             * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n             * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n             *\n             * @property slop\n             * @type number\n             * @default 0.05\n             */\n\n            /**\n             * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n             *\n             * @property timeScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n             *\n             * @property render\n             * @type object\n             */\n\n            /**\n             * A flag that indicates if the body should be rendered.\n             *\n             * @property render.visible\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * Sets the opacity to use when rendering.\n             *\n             * @property render.opacity\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * An `Object` that defines the sprite properties to use when rendering, if any.\n             *\n             * @property render.sprite\n             * @type object\n             */\n\n            /**\n             * An `String` that defines the path to the image to use as the sprite texture, if any.\n             *\n             * @property render.sprite.texture\n             * @type string\n             */\n\n            /**\n             * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n             *\n             * @property render.sprite.xScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n             *\n             * @property render.sprite.yScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n             *\n             * @property render.sprite.xOffset\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n             *\n             * @property render.sprite.yOffset\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n             * A value of `0` means no outline will be rendered.\n             *\n             * @property render.lineWidth\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.fillStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.strokeStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * An array of unique axis vectors (edge normals) used for collision detection.\n             * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n             * They are constantly updated by `Body.update` during the simulation.\n             *\n             * @property axes\n             * @type vector[]\n             */\n\n            /**\n             * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n             *\n             * @property area\n             * @type string\n             * @default\n             */\n\n            /**\n             * A `Bounds` object that defines the AABB region for the body.\n             * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n             *\n             * @property bounds\n             * @type bounds\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Sleeping': 22,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          '../render/Render': 31,\n        },\n      ],\n      2: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n           * A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n           * It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n           * Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Composite\n           */\n\n          var Composite = {};\n\n          module.exports = Composite;\n\n          var Events = _dereq_('../core/Events');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Body = _dereq_('./Body');\n\n          (function() {\n            /**\n             * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properites section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} [options]\n             * @return {composite} A new composite\n             */\n            Composite.create = function(options) {\n              return Common.extend(\n                {\n                  id: Common.nextId(),\n                  type: 'composite',\n                  parent: null,\n                  isModified: false,\n                  bodies: [],\n                  constraints: [],\n                  composites: [],\n                  label: 'Composite',\n                  plugin: {},\n                },\n                options\n              );\n            };\n\n            /**\n             * Sets the composite's `isModified` flag.\n             * If `updateParents` is true, all parents will be set (default: false).\n             * If `updateChildren` is true, all children will be set (default: false).\n             * @method setModified\n             * @param {composite} composite\n             * @param {boolean} isModified\n             * @param {boolean} [updateParents=false]\n             * @param {boolean} [updateChildren=false]\n             */\n            Composite.setModified = function(\n              composite,\n              isModified,\n              updateParents,\n              updateChildren\n            ) {\n              composite.isModified = isModified;\n\n              if (updateParents && composite.parent) {\n                Composite.setModified(\n                  composite.parent,\n                  isModified,\n                  updateParents,\n                  updateChildren\n                );\n              }\n\n              if (updateChildren) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  var childComposite = composite.composites[i];\n                  Composite.setModified(\n                    childComposite,\n                    isModified,\n                    updateParents,\n                    updateChildren\n                  );\n                }\n              }\n            };\n\n            /**\n             * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n             * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n             * @method add\n             * @param {composite} composite\n             * @param {} object\n             * @return {composite} The original composite with the objects added\n             */\n            Composite.add = function(composite, object) {\n              var objects = [].concat(object);\n\n              Events.trigger(composite, 'beforeAdd', { object: object });\n\n              for (var i = 0; i < objects.length; i++) {\n                var obj = objects[i];\n\n                switch (obj.type) {\n                  case 'body':\n                    // skip adding compound parts\n                    if (obj.parent !== obj) {\n                      Common.warn(\n                        'Composite.add: skipped adding a compound body part (you must add its parent instead)'\n                      );\n                      break;\n                    }\n\n                    Composite.addBody(composite, obj);\n                    break;\n                  case 'constraint':\n                    Composite.addConstraint(composite, obj);\n                    break;\n                  case 'composite':\n                    Composite.addComposite(composite, obj);\n                    break;\n                  case 'mouseConstraint':\n                    Composite.addConstraint(composite, obj.constraint);\n                    break;\n                }\n              }\n\n              Events.trigger(composite, 'afterAdd', { object: object });\n\n              return composite;\n            };\n\n            /**\n             * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n             * Optionally searching its children recursively.\n             * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n             * @method remove\n             * @param {composite} composite\n             * @param {} object\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the objects removed\n             */\n            Composite.remove = function(composite, object, deep) {\n              var objects = [].concat(object);\n\n              Events.trigger(composite, 'beforeRemove', { object: object });\n\n              for (var i = 0; i < objects.length; i++) {\n                var obj = objects[i];\n\n                switch (obj.type) {\n                  case 'body':\n                    Composite.removeBody(composite, obj, deep);\n                    break;\n                  case 'constraint':\n                    Composite.removeConstraint(composite, obj, deep);\n                    break;\n                  case 'composite':\n                    Composite.removeComposite(composite, obj, deep);\n                    break;\n                  case 'mouseConstraint':\n                    Composite.removeConstraint(composite, obj.constraint);\n                    break;\n                }\n              }\n\n              Events.trigger(composite, 'afterRemove', { object: object });\n\n              return composite;\n            };\n\n            /**\n             * Adds a composite to the given composite.\n             * @private\n             * @method addComposite\n             * @param {composite} compositeA\n             * @param {composite} compositeB\n             * @return {composite} The original compositeA with the objects from compositeB added\n             */\n            Composite.addComposite = function(compositeA, compositeB) {\n              compositeA.composites.push(compositeB);\n              compositeB.parent = compositeA;\n              Composite.setModified(compositeA, true, true, false);\n              return compositeA;\n            };\n\n            /**\n             * Removes a composite from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeComposite\n             * @param {composite} compositeA\n             * @param {composite} compositeB\n             * @param {boolean} [deep=false]\n             * @return {composite} The original compositeA with the composite removed\n             */\n            Composite.removeComposite = function(compositeA, compositeB, deep) {\n              var position = Common.indexOf(compositeA.composites, compositeB);\n              if (position !== -1) {\n                Composite.removeCompositeAt(compositeA, position);\n                Composite.setModified(compositeA, true, true, false);\n              }\n\n              if (deep) {\n                for (var i = 0; i < compositeA.composites.length; i++) {\n                  Composite.removeComposite(\n                    compositeA.composites[i],\n                    compositeB,\n                    true\n                  );\n                }\n              }\n\n              return compositeA;\n            };\n\n            /**\n             * Removes a composite from the given composite.\n             * @private\n             * @method removeCompositeAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the composite removed\n             */\n            Composite.removeCompositeAt = function(composite, position) {\n              composite.composites.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Adds a body to the given composite.\n             * @private\n             * @method addBody\n             * @param {composite} composite\n             * @param {body} body\n             * @return {composite} The original composite with the body added\n             */\n            Composite.addBody = function(composite, body) {\n              composite.bodies.push(body);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeBody\n             * @param {composite} composite\n             * @param {body} body\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the body removed\n             */\n            Composite.removeBody = function(composite, body, deep) {\n              var position = Common.indexOf(composite.bodies, body);\n              if (position !== -1) {\n                Composite.removeBodyAt(composite, position);\n                Composite.setModified(composite, true, true, false);\n              }\n\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.removeBody(composite.composites[i], body, true);\n                }\n              }\n\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite.\n             * @private\n             * @method removeBodyAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the body removed\n             */\n            Composite.removeBodyAt = function(composite, position) {\n              composite.bodies.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Adds a constraint to the given composite.\n             * @private\n             * @method addConstraint\n             * @param {composite} composite\n             * @param {constraint} constraint\n             * @return {composite} The original composite with the constraint added\n             */\n            Composite.addConstraint = function(composite, constraint) {\n              composite.constraints.push(constraint);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes a constraint from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeConstraint\n             * @param {composite} composite\n             * @param {constraint} constraint\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the constraint removed\n             */\n            Composite.removeConstraint = function(composite, constraint, deep) {\n              var position = Common.indexOf(composite.constraints, constraint);\n              if (position !== -1) {\n                Composite.removeConstraintAt(composite, position);\n              }\n\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.removeConstraint(\n                    composite.composites[i],\n                    constraint,\n                    true\n                  );\n                }\n              }\n\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite.\n             * @private\n             * @method removeConstraintAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the constraint removed\n             */\n            Composite.removeConstraintAt = function(composite, position) {\n              composite.constraints.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes all bodies, constraints and composites from the given composite.\n             * Optionally clearing its children recursively.\n             * @method clear\n             * @param {composite} composite\n             * @param {boolean} keepStatic\n             * @param {boolean} [deep=false]\n             */\n            Composite.clear = function(composite, keepStatic, deep) {\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.clear(composite.composites[i], keepStatic, true);\n                }\n              }\n\n              if (keepStatic) {\n                composite.bodies = composite.bodies.filter(function(body) {\n                  return body.isStatic;\n                });\n              } else {\n                composite.bodies.length = 0;\n              }\n\n              composite.constraints.length = 0;\n              composite.composites.length = 0;\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Returns all bodies in the given composite, including all bodies in its children, recursively.\n             * @method allBodies\n             * @param {composite} composite\n             * @return {body[]} All the bodies\n             */\n            Composite.allBodies = function(composite) {\n              var bodies = [].concat(composite.bodies);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                bodies = bodies.concat(\n                  Composite.allBodies(composite.composites[i])\n                );\n\n              return bodies;\n            };\n\n            /**\n             * Returns all constraints in the given composite, including all constraints in its children, recursively.\n             * @method allConstraints\n             * @param {composite} composite\n             * @return {constraint[]} All the constraints\n             */\n            Composite.allConstraints = function(composite) {\n              var constraints = [].concat(composite.constraints);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                constraints = constraints.concat(\n                  Composite.allConstraints(composite.composites[i])\n                );\n\n              return constraints;\n            };\n\n            /**\n             * Returns all composites in the given composite, including all composites in its children, recursively.\n             * @method allComposites\n             * @param {composite} composite\n             * @return {composite[]} All the composites\n             */\n            Composite.allComposites = function(composite) {\n              var composites = [].concat(composite.composites);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                composites = composites.concat(\n                  Composite.allComposites(composite.composites[i])\n                );\n\n              return composites;\n            };\n\n            /**\n             * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n             * @method get\n             * @param {composite} composite\n             * @param {number} id\n             * @param {string} type\n             * @return {object} The requested object, if found\n             */\n            Composite.get = function(composite, id, type) {\n              var objects, object;\n\n              switch (type) {\n                case 'body':\n                  objects = Composite.allBodies(composite);\n                  break;\n                case 'constraint':\n                  objects = Composite.allConstraints(composite);\n                  break;\n                case 'composite':\n                  objects = Composite.allComposites(composite).concat(\n                    composite\n                  );\n                  break;\n              }\n\n              if (!objects) return null;\n\n              object = objects.filter(function(object) {\n                return object.id.toString() === id.toString();\n              });\n\n              return object.length === 0 ? null : object[0];\n            };\n\n            /**\n             * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n             * @method move\n             * @param {compositeA} compositeA\n             * @param {object[]} objects\n             * @param {compositeB} compositeB\n             * @return {composite} Returns compositeA\n             */\n            Composite.move = function(compositeA, objects, compositeB) {\n              Composite.remove(compositeA, objects);\n              Composite.add(compositeB, objects);\n              return compositeA;\n            };\n\n            /**\n             * Assigns new ids for all objects in the composite, recursively.\n             * @method rebase\n             * @param {composite} composite\n             * @return {composite} Returns composite\n             */\n            Composite.rebase = function(composite) {\n              var objects = Composite.allBodies(composite)\n                .concat(Composite.allConstraints(composite))\n                .concat(Composite.allComposites(composite));\n\n              for (var i = 0; i < objects.length; i++) {\n                objects[i].id = Common.nextId();\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Translates all children in the composite by a given vector relative to their current positions,\n             * without imparting any velocity.\n             * @method translate\n             * @param {composite} composite\n             * @param {vector} translation\n             * @param {bool} [recursive=true]\n             */\n            Composite.translate = function(composite, translation, recursive) {\n              var bodies = recursive\n                ? Composite.allBodies(composite)\n                : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                Body.translate(bodies[i], translation);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n             * @method rotate\n             * @param {composite} composite\n             * @param {number} rotation\n             * @param {vector} point\n             * @param {bool} [recursive=true]\n             */\n            Composite.rotate = function(composite, rotation, point, recursive) {\n              var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                bodies = recursive\n                  ? Composite.allBodies(composite)\n                  : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + (dx * cos - dy * sin),\n                  y: point.y + (dx * sin + dy * cos),\n                });\n\n                Body.rotate(body, rotation);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n             * @method scale\n             * @param {composite} composite\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} point\n             * @param {bool} [recursive=true]\n             */\n            Composite.scale = function(\n              composite,\n              scaleX,\n              scaleY,\n              point,\n              recursive\n            ) {\n              var bodies = recursive\n                ? Composite.allBodies(composite)\n                : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + dx * scaleX,\n                  y: point.y + dy * scaleY,\n                });\n\n                Body.scale(body, scaleX, scaleY);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Returns the union of the bounds of all of the composite's bodies.\n             * @method bounds\n             * @param {composite} composite The composite.\n             * @returns {bounds} The composite bounds.\n             */\n            Composite.bounds = function(composite) {\n              var bodies = Composite.allBodies(composite),\n                vertices = [];\n\n              for (var i = 0; i < bodies.length; i += 1) {\n                var body = bodies[i];\n                vertices.push(body.bounds.min, body.bounds.max);\n              }\n\n              return Bounds.create(vertices);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when a call to `Composite.add` is made, before objects have been added.\n             *\n             * @event beforeAdd\n             * @param {} event An event object\n             * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.add` is made, after objects have been added.\n             *\n             * @event afterAdd\n             * @param {} event An event object\n             * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.remove` is made, before objects have been removed.\n             *\n             * @event beforeRemove\n             * @param {} event An event object\n             * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.remove` is made, after objects have been removed.\n             *\n             * @event afterRemove\n             * @param {} event An event object\n             * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"composite\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage composites.\n             *\n             * @property label\n             * @type string\n             * @default \"Composite\"\n             */\n\n            /**\n             * A flag that specifies whether the composite has been modified during the current step.\n             * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n             * If you need to change it manually, you should use the `Composite.setModified` method.\n             *\n             * @property isModified\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n             *\n             * @property parent\n             * @type composite\n             * @default null\n             */\n\n            /**\n             * An array of `Body` that are _direct_ children of this composite.\n             * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n             *\n             * @property bodies\n             * @type body[]\n             * @default []\n             */\n\n            /**\n             * An array of `Constraint` that are _direct_ children of this composite.\n             * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n             *\n             * @property constraints\n             * @type constraint[]\n             * @default []\n             */\n\n            /**\n             * An array of `Composite` that are _direct_ children of this composite.\n             * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n             *\n             * @property composites\n             * @type composite[]\n             * @default []\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../geometry/Bounds': 26,\n          './Body': 1,\n        },\n      ],\n      3: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.World` module contains methods for creating and manipulating the world composite.\n           * A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n           * A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n           * It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n           * There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class World\n           * @extends Composite\n           */\n\n          var World = {};\n\n          module.exports = World;\n\n          var Composite = _dereq_('./Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @constructor\n             * @param {} options\n             * @return {world} A new world\n             */\n            World.create = function(options) {\n              var composite = Composite.create();\n\n              var defaults = {\n                label: 'World',\n                gravity: {\n                  x: 0,\n                  y: 1,\n                  scale: 0.001,\n                },\n                bounds: {\n                  min: { x: -Infinity, y: -Infinity },\n                  max: { x: Infinity, y: Infinity },\n                },\n              };\n\n              return Common.extend(composite, defaults, options);\n            };\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * The gravity to apply on the world.\n             *\n             * @property gravity\n             * @type object\n             */\n\n            /**\n             * The gravity x component.\n             *\n             * @property gravity.x\n             * @type object\n             * @default 0\n             */\n\n            /**\n             * The gravity y component.\n             *\n             * @property gravity.y\n             * @type object\n             * @default 1\n             */\n\n            /**\n             * The gravity scale factor.\n             *\n             * @property gravity.scale\n             * @type object\n             * @default 0.001\n             */\n\n            /**\n             * A `Bounds` object that defines the world bounds for collision detection.\n             *\n             * @property bounds\n             * @type bounds\n             * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n             */\n\n            // World is a Composite body\n            // see src/module/Outro.js for these aliases:\n\n            /**\n             * An alias for Composite.add\n             * @method add\n             * @param {world} world\n             * @param {} object\n             * @return {composite} The original world with the objects added\n             */\n\n            /**\n             * An alias for Composite.remove\n             * @method remove\n             * @param {world} world\n             * @param {} object\n             * @param {boolean} [deep=false]\n             * @return {composite} The original world with the objects removed\n             */\n\n            /**\n             * An alias for Composite.clear\n             * @method clear\n             * @param {world} world\n             * @param {boolean} keepStatic\n             */\n\n            /**\n             * An alias for Composite.addComposite\n             * @method addComposite\n             * @param {world} world\n             * @param {composite} composite\n             * @return {world} The original world with the objects from composite added\n             */\n\n            /**\n             * An alias for Composite.addBody\n             * @method addBody\n             * @param {world} world\n             * @param {body} body\n             * @return {world} The original world with the body added\n             */\n\n            /**\n             * An alias for Composite.addConstraint\n             * @method addConstraint\n             * @param {world} world\n             * @param {constraint} constraint\n             * @return {world} The original world with the constraint added\n             */\n          })();\n        },\n        {\n          '../constraint/Constraint': 12,\n          '../core/Common': 14,\n          './Composite': 2,\n        },\n      ],\n      4: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n           *\n           * @class Contact\n           */\n\n          var Contact = {};\n\n          module.exports = Contact;\n\n          (function() {\n            /**\n             * Creates a new contact.\n             * @method create\n             * @param {vertex} vertex\n             * @return {contact} A new contact\n             */\n            Contact.create = function(vertex) {\n              return {\n                id: Contact.id(vertex),\n                vertex: vertex,\n                normalImpulse: 0,\n                tangentImpulse: 0,\n              };\n            };\n\n            /**\n             * Generates a contact id.\n             * @method id\n             * @param {vertex} vertex\n             * @return {string} Unique contactID\n             */\n            Contact.id = function(vertex) {\n              return vertex.body.id + '_' + vertex.index;\n            };\n          })();\n        },\n        {},\n      ],\n      5: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n           *\n           * @class Detector\n           */\n\n          // TODO: speculative contacts\n\n          var Detector = {};\n\n          module.exports = Detector;\n\n          var SAT = _dereq_('./SAT');\n          var Pair = _dereq_('./Pair');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            /**\n             * Finds all collisions given a list of pairs.\n             * @method collisions\n             * @param {pair[]} broadphasePairs\n             * @param {engine} engine\n             * @return {array} collisions\n             */\n            Detector.collisions = function(broadphasePairs, engine) {\n              var collisions = [],\n                pairsTable = engine.pairs.table;\n\n              for (var i = 0; i < broadphasePairs.length; i++) {\n                var bodyA = broadphasePairs[i][0],\n                  bodyB = broadphasePairs[i][1];\n\n                if (\n                  (bodyA.isStatic || bodyA.isSleeping) &&\n                  (bodyB.isStatic || bodyB.isSleeping)\n                )\n                  continue;\n\n                if (\n                  !Detector.canCollide(\n                    bodyA.collisionFilter,\n                    bodyB.collisionFilter\n                  )\n                )\n                  continue;\n\n                // mid phase\n                if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                  for (\n                    var j = bodyA.parts.length > 1 ? 1 : 0;\n                    j < bodyA.parts.length;\n                    j++\n                  ) {\n                    var partA = bodyA.parts[j];\n\n                    for (\n                      var k = bodyB.parts.length > 1 ? 1 : 0;\n                      k < bodyB.parts.length;\n                      k++\n                    ) {\n                      var partB = bodyB.parts[k];\n\n                      if (\n                        (partA === bodyA && partB === bodyB) ||\n                        Bounds.overlaps(partA.bounds, partB.bounds)\n                      ) {\n                        // find a previous collision we could reuse\n                        var pairId = Pair.id(partA, partB),\n                          pair = pairsTable[pairId],\n                          previousCollision;\n\n                        if (pair && pair.isActive) {\n                          previousCollision = pair.collision;\n                        } else {\n                          previousCollision = null;\n                        }\n\n                        // narrow phase\n                        var collision = SAT.collides(\n                          partA,\n                          partB,\n                          previousCollision\n                        );\n\n                        if (collision.collided) {\n                          collisions.push(collision);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Returns `true` if both supplied collision filters will allow a collision to occur.\n             * See `body.collisionFilter` for more information.\n             * @method canCollide\n             * @param {} filterA\n             * @param {} filterB\n             * @return {bool} `true` if collision can occur\n             */\n            Detector.canCollide = function(filterA, filterB) {\n              if (filterA.group === filterB.group && filterA.group !== 0)\n                return filterA.group > 0;\n\n              return (\n                (filterA.mask & filterB.category) !== 0 &&\n                (filterB.mask & filterA.category) !== 0\n              );\n            };\n          })();\n        },\n        { '../geometry/Bounds': 26, './Pair': 7, './SAT': 11 },\n      ],\n      6: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n           *\n           * @class Grid\n           */\n\n          var Grid = {};\n\n          module.exports = Grid;\n\n          var Pair = _dereq_('./Pair');\n          var Detector = _dereq_('./Detector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new grid.\n             * @method create\n             * @param {} options\n             * @return {grid} A new grid\n             */\n            Grid.create = function(options) {\n              var defaults = {\n                controller: Grid,\n                detector: Detector.collisions,\n                buckets: {},\n                pairs: {},\n                pairsList: [],\n                bucketWidth: 48,\n                bucketHeight: 48,\n              };\n\n              return Common.extend(defaults, options);\n            };\n\n            /**\n             * The width of a single grid bucket.\n             *\n             * @property bucketWidth\n             * @type number\n             * @default 48\n             */\n\n            /**\n             * The height of a single grid bucket.\n             *\n             * @property bucketHeight\n             * @type number\n             * @default 48\n             */\n\n            /**\n             * Updates the grid.\n             * @method update\n             * @param {grid} grid\n             * @param {body[]} bodies\n             * @param {engine} engine\n             * @param {boolean} forceUpdate\n             */\n            Grid.update = function(grid, bodies, engine, forceUpdate) {\n              var i,\n                col,\n                row,\n                world = engine.world,\n                buckets = grid.buckets,\n                bucket,\n                bucketId,\n                gridChanged = false;\n\n              for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isSleeping && !forceUpdate) continue;\n\n                // don't update out of world bodies\n                if (\n                  body.bounds.max.x < world.bounds.min.x ||\n                  body.bounds.min.x > world.bounds.max.x ||\n                  body.bounds.max.y < world.bounds.min.y ||\n                  body.bounds.min.y > world.bounds.max.y\n                )\n                  continue;\n\n                var newRegion = Grid._getRegion(grid, body);\n\n                // if the body has changed grid region\n                if (\n                  !body.region ||\n                  newRegion.id !== body.region.id ||\n                  forceUpdate\n                ) {\n                  if (!body.region || forceUpdate) body.region = newRegion;\n\n                  var union = Grid._regionUnion(newRegion, body.region);\n\n                  // update grid buckets affected by region change\n                  // iterate over the union of both regions\n                  for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                      bucketId = Grid._getBucketId(col, row);\n                      bucket = buckets[bucketId];\n\n                      var isInsideNewRegion =\n                        col >= newRegion.startCol &&\n                        col <= newRegion.endCol &&\n                        row >= newRegion.startRow &&\n                        row <= newRegion.endRow;\n\n                      var isInsideOldRegion =\n                        col >= body.region.startCol &&\n                        col <= body.region.endCol &&\n                        row >= body.region.startRow &&\n                        row <= body.region.endRow;\n\n                      // remove from old region buckets\n                      if (!isInsideNewRegion && isInsideOldRegion) {\n                        if (isInsideOldRegion) {\n                          if (bucket)\n                            Grid._bucketRemoveBody(grid, bucket, body);\n                        }\n                      }\n\n                      // add to new region buckets\n                      if (\n                        body.region === newRegion ||\n                        (isInsideNewRegion && !isInsideOldRegion) ||\n                        forceUpdate\n                      ) {\n                        if (!bucket)\n                          bucket = Grid._createBucket(buckets, bucketId);\n                        Grid._bucketAddBody(grid, bucket, body);\n                      }\n                    }\n                  }\n\n                  // set the new region\n                  body.region = newRegion;\n\n                  // flag changes so we can update pairs\n                  gridChanged = true;\n                }\n              }\n\n              // update pairs list only if pairs changed (i.e. a body changed region)\n              if (gridChanged)\n                grid.pairsList = Grid._createActivePairsList(grid);\n            };\n\n            /**\n             * Clears the grid.\n             * @method clear\n             * @param {grid} grid\n             */\n            Grid.clear = function(grid) {\n              grid.buckets = {};\n              grid.pairs = {};\n              grid.pairsList = [];\n            };\n\n            /**\n             * Finds the union of two regions.\n             * @method _regionUnion\n             * @private\n             * @param {} regionA\n             * @param {} regionB\n             * @return {} region\n             */\n            Grid._regionUnion = function(regionA, regionB) {\n              var startCol = Math.min(regionA.startCol, regionB.startCol),\n                endCol = Math.max(regionA.endCol, regionB.endCol),\n                startRow = Math.min(regionA.startRow, regionB.startRow),\n                endRow = Math.max(regionA.endRow, regionB.endRow);\n\n              return Grid._createRegion(startCol, endCol, startRow, endRow);\n            };\n\n            /**\n             * Gets the region a given body falls in for a given grid.\n             * @method _getRegion\n             * @private\n             * @param {} grid\n             * @param {} body\n             * @return {} region\n             */\n            Grid._getRegion = function(grid, body) {\n              var bounds = body.bounds,\n                startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n                endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n                startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n                endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n              return Grid._createRegion(startCol, endCol, startRow, endRow);\n            };\n\n            /**\n             * Creates a region.\n             * @method _createRegion\n             * @private\n             * @param {} startCol\n             * @param {} endCol\n             * @param {} startRow\n             * @param {} endRow\n             * @return {} region\n             */\n            Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n              return {\n                id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n                startCol: startCol,\n                endCol: endCol,\n                startRow: startRow,\n                endRow: endRow,\n              };\n            };\n\n            /**\n             * Gets the bucket id at the given position.\n             * @method _getBucketId\n             * @private\n             * @param {} column\n             * @param {} row\n             * @return {string} bucket id\n             */\n            Grid._getBucketId = function(column, row) {\n              return 'C' + column + 'R' + row;\n            };\n\n            /**\n             * Creates a bucket.\n             * @method _createBucket\n             * @private\n             * @param {} buckets\n             * @param {} bucketId\n             * @return {} bucket\n             */\n            Grid._createBucket = function(buckets, bucketId) {\n              var bucket = (buckets[bucketId] = []);\n              return bucket;\n            };\n\n            /**\n             * Adds a body to a bucket.\n             * @method _bucketAddBody\n             * @private\n             * @param {} grid\n             * @param {} bucket\n             * @param {} body\n             */\n            Grid._bucketAddBody = function(grid, bucket, body) {\n              // add new pairs\n              for (var i = 0; i < bucket.length; i++) {\n                var bodyB = bucket[i];\n\n                if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                  continue;\n\n                // keep track of the number of buckets the pair exists in\n                // important for Grid.update to work\n                var pairId = Pair.id(body, bodyB),\n                  pair = grid.pairs[pairId];\n\n                if (pair) {\n                  pair[2] += 1;\n                } else {\n                  grid.pairs[pairId] = [body, bodyB, 1];\n                }\n              }\n\n              // add to bodies (after pairs, otherwise pairs with self)\n              bucket.push(body);\n            };\n\n            /**\n             * Removes a body from a bucket.\n             * @method _bucketRemoveBody\n             * @private\n             * @param {} grid\n             * @param {} bucket\n             * @param {} body\n             */\n            Grid._bucketRemoveBody = function(grid, bucket, body) {\n              // remove from bucket\n              bucket.splice(Common.indexOf(bucket, body), 1);\n\n              // update pair counts\n              for (var i = 0; i < bucket.length; i++) {\n                // keep track of the number of buckets the pair exists in\n                // important for _createActivePairsList to work\n                var bodyB = bucket[i],\n                  pairId = Pair.id(body, bodyB),\n                  pair = grid.pairs[pairId];\n\n                if (pair) pair[2] -= 1;\n              }\n            };\n\n            /**\n             * Generates a list of the active pairs in the grid.\n             * @method _createActivePairsList\n             * @private\n             * @param {} grid\n             * @return [] pairs\n             */\n            Grid._createActivePairsList = function(grid) {\n              var pairKeys,\n                pair,\n                pairs = [];\n\n              // grid.pairs is used as a hashmap\n              pairKeys = Common.keys(grid.pairs);\n\n              // iterate over grid.pairs\n              for (var k = 0; k < pairKeys.length; k++) {\n                pair = grid.pairs[pairKeys[k]];\n\n                // if pair exists in at least one bucket\n                // it is a pair that needs further collision testing so push it\n                if (pair[2] > 0) {\n                  pairs.push(pair);\n                } else {\n                  delete grid.pairs[pairKeys[k]];\n                }\n              }\n\n              return pairs;\n            };\n          })();\n        },\n        { '../core/Common': 14, './Detector': 5, './Pair': 7 },\n      ],\n      7: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n           *\n           * @class Pair\n           */\n\n          var Pair = {};\n\n          module.exports = Pair;\n\n          var Contact = _dereq_('./Contact');\n\n          (function() {\n            /**\n             * Creates a pair.\n             * @method create\n             * @param {collision} collision\n             * @param {number} timestamp\n             * @return {pair} A new pair\n             */\n            Pair.create = function(collision, timestamp) {\n              var bodyA = collision.bodyA,\n                bodyB = collision.bodyB,\n                parentA = collision.parentA,\n                parentB = collision.parentB;\n\n              var pair = {\n                id: Pair.id(bodyA, bodyB),\n                bodyA: bodyA,\n                bodyB: bodyB,\n                contacts: {},\n                activeContacts: [],\n                separation: 0,\n                isActive: true,\n                isSensor: bodyA.isSensor || bodyB.isSensor,\n                timeCreated: timestamp,\n                timeUpdated: timestamp,\n                inverseMass: parentA.inverseMass + parentB.inverseMass,\n                friction: Math.min(parentA.friction, parentB.friction),\n                frictionStatic: Math.max(\n                  parentA.frictionStatic,\n                  parentB.frictionStatic\n                ),\n                restitution: Math.max(parentA.restitution, parentB.restitution),\n                slop: Math.max(parentA.slop, parentB.slop),\n              };\n\n              Pair.update(pair, collision, timestamp);\n\n              return pair;\n            };\n\n            /**\n             * Updates a pair given a collision.\n             * @method update\n             * @param {pair} pair\n             * @param {collision} collision\n             * @param {number} timestamp\n             */\n            Pair.update = function(pair, collision, timestamp) {\n              var contacts = pair.contacts,\n                supports = collision.supports,\n                activeContacts = pair.activeContacts,\n                parentA = collision.parentA,\n                parentB = collision.parentB;\n\n              pair.collision = collision;\n              pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n              pair.friction = Math.min(parentA.friction, parentB.friction);\n              pair.frictionStatic = Math.max(\n                parentA.frictionStatic,\n                parentB.frictionStatic\n              );\n              pair.restitution = Math.max(\n                parentA.restitution,\n                parentB.restitution\n              );\n              pair.slop = Math.max(parentA.slop, parentB.slop);\n              activeContacts.length = 0;\n\n              if (collision.collided) {\n                for (var i = 0; i < supports.length; i++) {\n                  var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                  if (contact) {\n                    activeContacts.push(contact);\n                  } else {\n                    activeContacts.push(\n                      (contacts[contactId] = Contact.create(support))\n                    );\n                  }\n                }\n\n                pair.separation = collision.depth;\n                Pair.setActive(pair, true, timestamp);\n              } else {\n                if (pair.isActive === true)\n                  Pair.setActive(pair, false, timestamp);\n              }\n            };\n\n            /**\n             * Set a pair as active or inactive.\n             * @method setActive\n             * @param {pair} pair\n             * @param {bool} isActive\n             * @param {number} timestamp\n             */\n            Pair.setActive = function(pair, isActive, timestamp) {\n              if (isActive) {\n                pair.isActive = true;\n                pair.timeUpdated = timestamp;\n              } else {\n                pair.isActive = false;\n                pair.activeContacts.length = 0;\n              }\n            };\n\n            /**\n             * Get the id for the given pair.\n             * @method id\n             * @param {body} bodyA\n             * @param {body} bodyB\n             * @return {string} Unique pairId\n             */\n            Pair.id = function(bodyA, bodyB) {\n              if (bodyA.id < bodyB.id) {\n                return 'A' + bodyA.id + 'B' + bodyB.id;\n              } else {\n                return 'A' + bodyB.id + 'B' + bodyA.id;\n              }\n            };\n          })();\n        },\n        { './Contact': 4 },\n      ],\n      8: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n           *\n           * @class Pairs\n           */\n\n          var Pairs = {};\n\n          module.exports = Pairs;\n\n          var Pair = _dereq_('./Pair');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            Pairs._pairMaxIdleLife = 1000;\n\n            /**\n             * Creates a new pairs structure.\n             * @method create\n             * @param {object} options\n             * @return {pairs} A new pairs structure\n             */\n            Pairs.create = function(options) {\n              return Common.extend(\n                {\n                  table: {},\n                  list: [],\n                  collisionStart: [],\n                  collisionActive: [],\n                  collisionEnd: [],\n                },\n                options\n              );\n            };\n\n            /**\n             * Updates pairs given a list of collisions.\n             * @method update\n             * @param {object} pairs\n             * @param {collision[]} collisions\n             * @param {number} timestamp\n             */\n            Pairs.update = function(pairs, collisions, timestamp) {\n              var pairsList = pairs.list,\n                pairsTable = pairs.table,\n                collisionStart = pairs.collisionStart,\n                collisionEnd = pairs.collisionEnd,\n                collisionActive = pairs.collisionActive,\n                activePairIds = [],\n                collision,\n                pairId,\n                pair,\n                i;\n\n              // clear collision state arrays, but maintain old reference\n              collisionStart.length = 0;\n              collisionEnd.length = 0;\n              collisionActive.length = 0;\n\n              for (i = 0; i < collisions.length; i++) {\n                collision = collisions[i];\n\n                if (collision.collided) {\n                  pairId = Pair.id(collision.bodyA, collision.bodyB);\n                  activePairIds.push(pairId);\n\n                  pair = pairsTable[pairId];\n\n                  if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                      // pair exists and is active\n                      collisionActive.push(pair);\n                    } else {\n                      // pair exists but was inactive, so a collision has just started again\n                      collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                  } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                  }\n                }\n              }\n\n              // deactivate previously active pairs that are now inactive\n              for (i = 0; i < pairsList.length; i++) {\n                pair = pairsList[i];\n                if (\n                  pair.isActive &&\n                  Common.indexOf(activePairIds, pair.id) === -1\n                ) {\n                  Pair.setActive(pair, false, timestamp);\n                  collisionEnd.push(pair);\n                }\n              }\n            };\n\n            /**\n             * Finds and removes pairs that have been inactive for a set amount of time.\n             * @method removeOld\n             * @param {object} pairs\n             * @param {number} timestamp\n             */\n            Pairs.removeOld = function(pairs, timestamp) {\n              var pairsList = pairs.list,\n                pairsTable = pairs.table,\n                indexesToRemove = [],\n                pair,\n                collision,\n                pairIndex,\n                i;\n\n              for (i = 0; i < pairsList.length; i++) {\n                pair = pairsList[i];\n                collision = pair.collision;\n\n                // never remove sleeping pairs\n                if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                  pair.timeUpdated = timestamp;\n                  continue;\n                }\n\n                // if pair is inactive for too long, mark it to be removed\n                if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                  indexesToRemove.push(i);\n                }\n              }\n\n              // remove marked pairs\n              for (i = 0; i < indexesToRemove.length; i++) {\n                pairIndex = indexesToRemove[i] - i;\n                pair = pairsList[pairIndex];\n                delete pairsTable[pair.id];\n                pairsList.splice(pairIndex, 1);\n              }\n            };\n\n            /**\n             * Clears the given pairs structure.\n             * @method clear\n             * @param {pairs} pairs\n             * @return {pairs} pairs\n             */\n            Pairs.clear = function(pairs) {\n              pairs.table = {};\n              pairs.list.length = 0;\n              pairs.collisionStart.length = 0;\n              pairs.collisionActive.length = 0;\n              pairs.collisionEnd.length = 0;\n              return pairs;\n            };\n          })();\n        },\n        { '../core/Common': 14, './Pair': 7 },\n      ],\n      9: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Query` module contains methods for performing collision queries.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Query\n           */\n\n          var Query = {};\n\n          module.exports = Query;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var SAT = _dereq_('./SAT');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Bodies = _dereq_('../factory/Bodies');\n          var Vertices = _dereq_('../geometry/Vertices');\n\n          (function() {\n            /**\n             * Returns a list of collisions between `body` and `bodies`.\n             * @method collides\n             * @param {body} body\n             * @param {body[]} bodies\n             * @return {object[]} Collisions\n             */\n            Query.collides = function(body, bodies) {\n              var collisions = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var bodyA = bodies[i];\n\n                if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                  for (\n                    var j = bodyA.parts.length === 1 ? 0 : 1;\n                    j < bodyA.parts.length;\n                    j++\n                  ) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                      var collision = SAT.collides(part, body);\n\n                      if (collision.collided) {\n                        collisions.push(collision);\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n             * @method ray\n             * @param {body[]} bodies\n             * @param {vector} startPoint\n             * @param {vector} endPoint\n             * @param {number} [rayWidth]\n             * @return {object[]} Collisions\n             */\n            Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n              rayWidth = rayWidth || 1e-100;\n\n              var rayAngle = Vector.angle(startPoint, endPoint),\n                rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n                rayX = (endPoint.x + startPoint.x) * 0.5,\n                rayY = (endPoint.y + startPoint.y) * 0.5,\n                ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {\n                  angle: rayAngle,\n                }),\n                collisions = Query.collides(ray, bodies);\n\n              for (var i = 0; i < collisions.length; i += 1) {\n                var collision = collisions[i];\n                collision.body = collision.bodyB = collision.bodyA;\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n             * @method region\n             * @param {body[]} bodies\n             * @param {bounds} bounds\n             * @param {bool} [outside=false]\n             * @return {body[]} The bodies matching the query\n             */\n            Query.region = function(bodies, bounds, outside) {\n              var result = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  overlaps = Bounds.overlaps(body.bounds, bounds);\n                if ((overlaps && !outside) || (!overlaps && outside))\n                  result.push(body);\n              }\n\n              return result;\n            };\n\n            /**\n             * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n             * @method point\n             * @param {body[]} bodies\n             * @param {vector} point\n             * @return {body[]} The bodies matching the query\n             */\n            Query.point = function(bodies, point) {\n              var result = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (Bounds.contains(body.bounds, point)) {\n                  for (\n                    var j = body.parts.length === 1 ? 0 : 1;\n                    j < body.parts.length;\n                    j++\n                  ) {\n                    var part = body.parts[j];\n\n                    if (\n                      Bounds.contains(part.bounds, point) &&\n                      Vertices.contains(part.vertices, point)\n                    ) {\n                      result.push(body);\n                      break;\n                    }\n                  }\n                }\n              }\n\n              return result;\n            };\n          })();\n        },\n        {\n          '../factory/Bodies': 23,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          './SAT': 11,\n        },\n      ],\n      10: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Resolver` module contains methods for resolving collision pairs.\n           *\n           * @class Resolver\n           */\n\n          var Resolver = {};\n\n          module.exports = Resolver;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            Resolver._restingThresh = 4;\n            Resolver._restingThreshTangent = 6;\n            Resolver._positionDampen = 0.9;\n            Resolver._positionWarming = 0.8;\n            Resolver._frictionNormalMultiplier = 5;\n\n            /**\n             * Prepare pairs for position solving.\n             * @method preSolvePosition\n             * @param {pair[]} pairs\n             */\n            Resolver.preSolvePosition = function(pairs) {\n              var i, pair, activeCount;\n\n              // find total contacts on each body\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                activeCount = pair.activeContacts.length;\n                pair.collision.parentA.totalContacts += activeCount;\n                pair.collision.parentB.totalContacts += activeCount;\n              }\n            };\n\n            /**\n             * Find a solution for pair positions.\n             * @method solvePosition\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Resolver.solvePosition = function(pairs, timeScale) {\n              var i,\n                pair,\n                collision,\n                bodyA,\n                bodyB,\n                normal,\n                bodyBtoA,\n                contactShare,\n                positionImpulse,\n                contactCount = {},\n                tempA = Vector._temp[0],\n                tempB = Vector._temp[1],\n                tempC = Vector._temp[2],\n                tempD = Vector._temp[3];\n\n              // find impulses required to resolve penetration\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n\n                // get current separation between body edges involved in collision\n                bodyBtoA = Vector.sub(\n                  Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                  Vector.add(\n                    bodyA.positionImpulse,\n                    Vector.sub(bodyB.position, collision.penetration, tempB),\n                    tempC\n                  ),\n                  tempD\n                );\n\n                pair.separation = Vector.dot(normal, bodyBtoA);\n              }\n\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n                positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n                if (bodyA.isStatic || bodyB.isStatic) positionImpulse *= 2;\n\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                  contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                  bodyA.positionImpulse.x +=\n                    normal.x * positionImpulse * contactShare;\n                  bodyA.positionImpulse.y +=\n                    normal.y * positionImpulse * contactShare;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                  contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                  bodyB.positionImpulse.x -=\n                    normal.x * positionImpulse * contactShare;\n                  bodyB.positionImpulse.y -=\n                    normal.y * positionImpulse * contactShare;\n                }\n              }\n            };\n\n            /**\n             * Apply position resolution.\n             * @method postSolvePosition\n             * @param {body[]} bodies\n             */\n            Resolver.postSolvePosition = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                // reset contact count\n                body.totalContacts = 0;\n\n                if (\n                  body.positionImpulse.x !== 0 ||\n                  body.positionImpulse.y !== 0\n                ) {\n                  // update body geometry\n                  for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                  }\n\n                  // move the body without changing velocity\n                  body.positionPrev.x += body.positionImpulse.x;\n                  body.positionPrev.y += body.positionImpulse.y;\n\n                  if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                  } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                  }\n                }\n              }\n            };\n\n            /**\n             * Prepare pairs for velocity solving.\n             * @method preSolveVelocity\n             * @param {pair[]} pairs\n             */\n            Resolver.preSolveVelocity = function(pairs) {\n              var i,\n                j,\n                pair,\n                contacts,\n                collision,\n                bodyA,\n                bodyB,\n                normal,\n                tangent,\n                contact,\n                contactVertex,\n                normalImpulse,\n                tangentImpulse,\n                offset,\n                impulse = Vector._temp[0],\n                tempA = Vector._temp[1];\n\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                contacts = pair.activeContacts;\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n                tangent = collision.tangent;\n\n                // resolve each contact\n                for (j = 0; j < contacts.length; j++) {\n                  contact = contacts[j];\n                  contactVertex = contact.vertex;\n                  normalImpulse = contact.normalImpulse;\n                  tangentImpulse = contact.tangentImpulse;\n\n                  if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x =\n                      normal.x * normalImpulse + tangent.x * tangentImpulse;\n                    impulse.y =\n                      normal.y * normalImpulse + tangent.y * tangentImpulse;\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                      offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                      bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                      bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                      bodyA.anglePrev +=\n                        Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                      offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                      bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                      bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                      bodyB.anglePrev -=\n                        Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                  }\n                }\n              }\n            };\n\n            /**\n             * Find a solution for pair velocities.\n             * @method solveVelocity\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Resolver.solveVelocity = function(pairs, timeScale) {\n              var timeScaleSquared = timeScale * timeScale,\n                impulse = Vector._temp[0],\n                tempA = Vector._temp[1],\n                tempB = Vector._temp[2],\n                tempC = Vector._temp[3],\n                tempD = Vector._temp[4],\n                tempE = Vector._temp[5];\n\n              for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                var collision = pair.collision,\n                  bodyA = collision.parentA,\n                  bodyB = collision.parentB,\n                  normal = collision.normal,\n                  tangent = collision.tangent,\n                  contacts = pair.activeContacts,\n                  contactShare = 1 / contacts.length;\n\n                // update body velocities\n                bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n                bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n                bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n                bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n                bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n                bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n                // resolve each contact\n                for (var j = 0; j < contacts.length; j++) {\n                  var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(\n                      bodyA.velocity,\n                      Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity),\n                      tempC\n                    ),\n                    velocityPointB = Vector.add(\n                      bodyB.velocity,\n                      Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity),\n                      tempD\n                    ),\n                    relativeVelocity = Vector.sub(\n                      velocityPointA,\n                      velocityPointB,\n                      tempE\n                    ),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                  var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                  // raw impulses\n                  var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce =\n                      Common.clamp(pair.separation + normalVelocity, 0, 1) *\n                      Resolver._frictionNormalMultiplier;\n\n                  // coulomb friction\n                  var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                  if (\n                    tangentSpeed >\n                    pair.friction *\n                      pair.frictionStatic *\n                      normalForce *\n                      timeScaleSquared\n                  ) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                      pair.friction *\n                        tangentVelocityDirection *\n                        timeScaleSquared,\n                      -maxFriction,\n                      maxFriction\n                    );\n                  }\n\n                  // modify impulses accounting for mass, inertia and offset\n                  var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share =\n                      contactShare /\n                      (bodyA.inverseMass +\n                        bodyB.inverseMass +\n                        bodyA.inverseInertia * oAcN * oAcN +\n                        bodyB.inverseInertia * oBcN * oBcN);\n\n                  normalImpulse *= share;\n                  tangentImpulse *= share;\n\n                  // handle high velocity and resting collisions separately\n                  if (\n                    normalVelocity < 0 &&\n                    normalVelocity * normalVelocity >\n                      Resolver._restingThresh * timeScaleSquared\n                  ) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                  } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(\n                      contact.normalImpulse + normalImpulse,\n                      0\n                    );\n                    normalImpulse =\n                      contact.normalImpulse - contactNormalImpulse;\n                  }\n\n                  // handle high velocity and resting collisions separately\n                  if (\n                    tangentVelocity * tangentVelocity >\n                    Resolver._restingThreshTangent * timeScaleSquared\n                  ) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                  } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(\n                      contact.tangentImpulse + tangentImpulse,\n                      -maxFriction,\n                      maxFriction\n                    );\n                    tangentImpulse =\n                      contact.tangentImpulse - contactTangentImpulse;\n                  }\n\n                  // total impulse from contact\n                  impulse.x =\n                    normal.x * normalImpulse + tangent.x * tangentImpulse;\n                  impulse.y =\n                    normal.y * normalImpulse + tangent.y * tangentImpulse;\n\n                  // apply impulse from contact\n                  if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev +=\n                      Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                  }\n\n                  if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -=\n                      Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                  }\n                }\n              }\n            };\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      11: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n           *\n           * @class SAT\n           */\n\n          // TODO: true circles and curves\n\n          var SAT = {};\n\n          module.exports = SAT;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n\n          (function() {\n            /**\n             * Detect collision between two bodies using the Separating Axis Theorem.\n             * @method collides\n             * @param {body} bodyA\n             * @param {body} bodyB\n             * @param {collision} previousCollision\n             * @return {collision} collision\n             */\n            SAT.collides = function(bodyA, bodyB, previousCollision) {\n              var overlapAB,\n                overlapBA,\n                minOverlap,\n                collision,\n                canReusePrevCol = false;\n\n              if (previousCollision) {\n                // estimate total motion\n                var parentA = bodyA.parent,\n                  parentB = bodyB.parent,\n                  motion =\n                    parentA.speed * parentA.speed +\n                    parentA.angularSpeed * parentA.angularSpeed +\n                    parentB.speed * parentB.speed +\n                    parentB.angularSpeed * parentB.angularSpeed;\n\n                // we may be able to (partially) reuse collision result\n                // but only safe if collision was resting\n                canReusePrevCol =\n                  previousCollision &&\n                  previousCollision.collided &&\n                  motion < 0.2;\n\n                // reuse collision object\n                collision = previousCollision;\n              } else {\n                collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n              }\n\n              if (previousCollision && canReusePrevCol) {\n                // if we can reuse the collision result\n                // we only need to test the previously found axis\n                var axisBodyA = collision.axisBody,\n                  axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                  axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n                minOverlap = SAT._overlapAxes(\n                  axisBodyA.vertices,\n                  axisBodyB.vertices,\n                  axes\n                );\n                collision.reused = true;\n\n                if (minOverlap.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n              } else {\n                // if we can't reuse a result, perform a full SAT test\n\n                overlapAB = SAT._overlapAxes(\n                  bodyA.vertices,\n                  bodyB.vertices,\n                  bodyA.axes\n                );\n\n                if (overlapAB.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n\n                overlapBA = SAT._overlapAxes(\n                  bodyB.vertices,\n                  bodyA.vertices,\n                  bodyB.axes\n                );\n\n                if (overlapBA.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n\n                if (overlapAB.overlap < overlapBA.overlap) {\n                  minOverlap = overlapAB;\n                  collision.axisBody = bodyA;\n                } else {\n                  minOverlap = overlapBA;\n                  collision.axisBody = bodyB;\n                }\n\n                // important for reuse later\n                collision.axisNumber = minOverlap.axisNumber;\n              }\n\n              collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n              collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n              collision.collided = true;\n              collision.depth = minOverlap.overlap;\n              collision.parentA = collision.bodyA.parent;\n              collision.parentB = collision.bodyB.parent;\n\n              bodyA = collision.bodyA;\n              bodyB = collision.bodyB;\n\n              // ensure normal is facing away from bodyA\n              if (\n                Vector.dot(\n                  minOverlap.axis,\n                  Vector.sub(bodyB.position, bodyA.position)\n                ) < 0\n              ) {\n                collision.normal = {\n                  x: minOverlap.axis.x,\n                  y: minOverlap.axis.y,\n                };\n              } else {\n                collision.normal = {\n                  x: -minOverlap.axis.x,\n                  y: -minOverlap.axis.y,\n                };\n              }\n\n              collision.tangent = Vector.perp(collision.normal);\n\n              collision.penetration = collision.penetration || {};\n              collision.penetration.x = collision.normal.x * collision.depth;\n              collision.penetration.y = collision.normal.y * collision.depth;\n\n              // find support points, there is always either exactly one or two\n              var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n                supports = [];\n\n              // find the supports from bodyB that are inside bodyA\n              if (Vertices.contains(bodyA.vertices, verticesB[0]))\n                supports.push(verticesB[0]);\n\n              if (Vertices.contains(bodyA.vertices, verticesB[1]))\n                supports.push(verticesB[1]);\n\n              // find the supports from bodyA that are inside bodyB\n              if (supports.length < 2) {\n                var verticesA = SAT._findSupports(\n                  bodyB,\n                  bodyA,\n                  Vector.neg(collision.normal)\n                );\n\n                if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                  supports.push(verticesA[0]);\n\n                if (\n                  supports.length < 2 &&\n                  Vertices.contains(bodyB.vertices, verticesA[1])\n                )\n                  supports.push(verticesA[1]);\n              }\n\n              // account for the edge case of overlapping but no vertex containment\n              if (supports.length < 1) supports = [verticesB[0]];\n\n              collision.supports = supports;\n\n              return collision;\n            };\n\n            /**\n             * Find the overlap between two sets of vertices.\n             * @method _overlapAxes\n             * @private\n             * @param {} verticesA\n             * @param {} verticesB\n             * @param {} axes\n             * @return result\n             */\n            SAT._overlapAxes = function(verticesA, verticesB, axes) {\n              var projectionA = Vector._temp[0],\n                projectionB = Vector._temp[1],\n                result = { overlap: Number.MAX_VALUE },\n                overlap,\n                axis;\n\n              for (var i = 0; i < axes.length; i++) {\n                axis = axes[i];\n\n                SAT._projectToAxis(projectionA, verticesA, axis);\n                SAT._projectToAxis(projectionB, verticesB, axis);\n\n                overlap = Math.min(\n                  projectionA.max - projectionB.min,\n                  projectionB.max - projectionA.min\n                );\n\n                if (overlap <= 0) {\n                  result.overlap = overlap;\n                  return result;\n                }\n\n                if (overlap < result.overlap) {\n                  result.overlap = overlap;\n                  result.axis = axis;\n                  result.axisNumber = i;\n                }\n              }\n\n              return result;\n            };\n\n            /**\n             * Projects vertices on an axis and returns an interval.\n             * @method _projectToAxis\n             * @private\n             * @param {} projection\n             * @param {} vertices\n             * @param {} axis\n             */\n            SAT._projectToAxis = function(projection, vertices, axis) {\n              var min = Vector.dot(vertices[0], axis),\n                max = min;\n\n              for (var i = 1; i < vertices.length; i += 1) {\n                var dot = Vector.dot(vertices[i], axis);\n\n                if (dot > max) {\n                  max = dot;\n                } else if (dot < min) {\n                  min = dot;\n                }\n              }\n\n              projection.min = min;\n              projection.max = max;\n            };\n\n            /**\n             * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n             * @method _findSupports\n             * @private\n             * @param {} bodyA\n             * @param {} bodyB\n             * @param {} normal\n             * @return [vector]\n             */\n            SAT._findSupports = function(bodyA, bodyB, normal) {\n              var nearestDistance = Number.MAX_VALUE,\n                vertexToBody = Vector._temp[0],\n                vertices = bodyB.vertices,\n                bodyAPosition = bodyA.position,\n                distance,\n                vertex,\n                vertexA,\n                vertexB;\n\n              // find closest vertex on bodyB\n              for (var i = 0; i < vertices.length; i++) {\n                vertex = vertices[i];\n                vertexToBody.x = vertex.x - bodyAPosition.x;\n                vertexToBody.y = vertex.y - bodyAPosition.y;\n                distance = -Vector.dot(normal, vertexToBody);\n\n                if (distance < nearestDistance) {\n                  nearestDistance = distance;\n                  vertexA = vertex;\n                }\n              }\n\n              // find next closest vertex using the two connected to it\n              var prevIndex =\n                vertexA.index - 1 >= 0\n                  ? vertexA.index - 1\n                  : vertices.length - 1;\n              vertex = vertices[prevIndex];\n              vertexToBody.x = vertex.x - bodyAPosition.x;\n              vertexToBody.y = vertex.y - bodyAPosition.y;\n              nearestDistance = -Vector.dot(normal, vertexToBody);\n              vertexB = vertex;\n\n              var nextIndex = (vertexA.index + 1) % vertices.length;\n              vertex = vertices[nextIndex];\n              vertexToBody.x = vertex.x - bodyAPosition.x;\n              vertexToBody.y = vertex.y - bodyAPosition.y;\n              distance = -Vector.dot(normal, vertexToBody);\n              if (distance < nearestDistance) {\n                vertexB = vertex;\n              }\n\n              return [vertexA, vertexB];\n            };\n          })();\n        },\n        { '../geometry/Vector': 28, '../geometry/Vertices': 29 },\n      ],\n      12: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n           * Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n           * The stiffness of constraints can be modified to create springs or elastic.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Constraint\n           */\n\n          var Constraint = {};\n\n          module.exports = Constraint;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Axes = _dereq_('../geometry/Axes');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            Constraint._warming = 0.4;\n            Constraint._torqueDampen = 1;\n            Constraint._minLength = 0.000001;\n\n            /**\n             * Creates a new constraint.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n             * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n             * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} options\n             * @return {constraint} constraint\n             */\n            Constraint.create = function(options) {\n              var constraint = options;\n\n              // if bodies defined but no points, use body centre\n              if (constraint.bodyA && !constraint.pointA)\n                constraint.pointA = { x: 0, y: 0 };\n              if (constraint.bodyB && !constraint.pointB)\n                constraint.pointB = { x: 0, y: 0 };\n\n              // calculate static length using initial world space points\n              var initialPointA = constraint.bodyA\n                  ? Vector.add(constraint.bodyA.position, constraint.pointA)\n                  : constraint.pointA,\n                initialPointB = constraint.bodyB\n                  ? Vector.add(constraint.bodyB.position, constraint.pointB)\n                  : constraint.pointB,\n                length = Vector.magnitude(\n                  Vector.sub(initialPointA, initialPointB)\n                );\n\n              constraint.length =\n                typeof constraint.length !== 'undefined'\n                  ? constraint.length\n                  : length;\n\n              // option defaults\n              constraint.id = constraint.id || Common.nextId();\n              constraint.label = constraint.label || 'Constraint';\n              constraint.type = 'constraint';\n              constraint.stiffness =\n                constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n              constraint.damping = constraint.damping || 0;\n              constraint.angularStiffness = constraint.angularStiffness || 0;\n              constraint.angleA = constraint.bodyA\n                ? constraint.bodyA.angle\n                : constraint.angleA;\n              constraint.angleB = constraint.bodyB\n                ? constraint.bodyB.angle\n                : constraint.angleB;\n              constraint.plugin = {};\n\n              // render\n              var render = {\n                visible: true,\n                lineWidth: 2,\n                strokeStyle: '#ffffff',\n                type: 'line',\n                anchors: true,\n              };\n\n              if (constraint.length === 0 && constraint.stiffness > 0.1) {\n                render.type = 'pin';\n                render.anchors = false;\n              } else if (constraint.stiffness < 0.9) {\n                render.type = 'spring';\n              }\n\n              constraint.render = Common.extend(render, constraint.render);\n\n              return constraint;\n            };\n\n            /**\n             * Prepares for solving by constraint warming.\n             * @private\n             * @method preSolveAll\n             * @param {body[]} bodies\n             */\n            Constraint.preSolveAll = function(bodies) {\n              for (var i = 0; i < bodies.length; i += 1) {\n                var body = bodies[i],\n                  impulse = body.constraintImpulse;\n\n                if (\n                  body.isStatic ||\n                  (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)\n                ) {\n                  continue;\n                }\n\n                body.position.x += impulse.x;\n                body.position.y += impulse.y;\n                body.angle += impulse.angle;\n              }\n            };\n\n            /**\n             * Solves all constraints in a list of collisions.\n             * @private\n             * @method solveAll\n             * @param {constraint[]} constraints\n             * @param {number} timeScale\n             */\n            Constraint.solveAll = function(constraints, timeScale) {\n              // Solve fixed constraints first.\n              for (var i = 0; i < constraints.length; i += 1) {\n                var constraint = constraints[i],\n                  fixedA =\n                    !constraint.bodyA ||\n                    (constraint.bodyA && constraint.bodyA.isStatic),\n                  fixedB =\n                    !constraint.bodyB ||\n                    (constraint.bodyB && constraint.bodyB.isStatic);\n\n                if (fixedA || fixedB) {\n                  Constraint.solve(constraints[i], timeScale);\n                }\n              }\n\n              // Solve free constraints last.\n              for (i = 0; i < constraints.length; i += 1) {\n                constraint = constraints[i];\n                fixedA =\n                  !constraint.bodyA ||\n                  (constraint.bodyA && constraint.bodyA.isStatic);\n                fixedB =\n                  !constraint.bodyB ||\n                  (constraint.bodyB && constraint.bodyB.isStatic);\n\n                if (!fixedA && !fixedB) {\n                  Constraint.solve(constraints[i], timeScale);\n                }\n              }\n            };\n\n            /**\n             * Solves a distance constraint with Gauss-Siedel method.\n             * @private\n             * @method solve\n             * @param {constraint} constraint\n             * @param {number} timeScale\n             */\n            Constraint.solve = function(constraint, timeScale) {\n              var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                pointA = constraint.pointA,\n                pointB = constraint.pointB;\n\n              if (!bodyA && !bodyB) return;\n\n              // update reference angle\n              if (bodyA && !bodyA.isStatic) {\n                Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n                constraint.angleA = bodyA.angle;\n              }\n\n              // update reference angle\n              if (bodyB && !bodyB.isStatic) {\n                Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n                constraint.angleB = bodyB.angle;\n              }\n\n              var pointAWorld = pointA,\n                pointBWorld = pointB;\n\n              if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n              if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n              if (!pointAWorld || !pointBWorld) return;\n\n              var delta = Vector.sub(pointAWorld, pointBWorld),\n                currentLength = Vector.magnitude(delta);\n\n              // prevent singularity\n              if (currentLength < Constraint._minLength) {\n                currentLength = Constraint._minLength;\n              }\n\n              // solve distance constraint with Gauss-Siedel method\n              var difference =\n                  (currentLength - constraint.length) / currentLength,\n                stiffness =\n                  constraint.stiffness < 1\n                    ? constraint.stiffness * timeScale\n                    : constraint.stiffness,\n                force = Vector.mult(delta, difference * stiffness),\n                massTotal =\n                  (bodyA ? bodyA.inverseMass : 0) +\n                  (bodyB ? bodyB.inverseMass : 0),\n                inertiaTotal =\n                  (bodyA ? bodyA.inverseInertia : 0) +\n                  (bodyB ? bodyB.inverseInertia : 0),\n                resistanceTotal = massTotal + inertiaTotal,\n                torque,\n                share,\n                normal,\n                normalVelocity,\n                relativeVelocity;\n\n              if (constraint.damping) {\n                var zero = Vector.create();\n                normal = Vector.div(delta, currentLength);\n\n                relativeVelocity = Vector.sub(\n                  (bodyB && Vector.sub(bodyB.position, bodyB.positionPrev)) ||\n                    zero,\n                  (bodyA && Vector.sub(bodyA.position, bodyA.positionPrev)) ||\n                    zero\n                );\n\n                normalVelocity = Vector.dot(normal, relativeVelocity);\n              }\n\n              if (bodyA && !bodyA.isStatic) {\n                share = bodyA.inverseMass / massTotal;\n\n                // keep track of applied impulses for post solving\n                bodyA.constraintImpulse.x -= force.x * share;\n                bodyA.constraintImpulse.y -= force.y * share;\n\n                // apply forces\n                bodyA.position.x -= force.x * share;\n                bodyA.position.y -= force.y * share;\n\n                // apply damping\n                if (constraint.damping) {\n                  bodyA.positionPrev.x -=\n                    constraint.damping * normal.x * normalVelocity * share;\n                  bodyA.positionPrev.y -=\n                    constraint.damping * normal.y * normalVelocity * share;\n                }\n\n                // apply torque\n                torque =\n                  Vector.cross(pointA, force) /\n                  resistanceTotal *\n                  Constraint._torqueDampen *\n                  bodyA.inverseInertia *\n                  (1 - constraint.angularStiffness);\n                bodyA.constraintImpulse.angle -= torque;\n                bodyA.angle -= torque;\n              }\n\n              if (bodyB && !bodyB.isStatic) {\n                share = bodyB.inverseMass / massTotal;\n\n                // keep track of applied impulses for post solving\n                bodyB.constraintImpulse.x += force.x * share;\n                bodyB.constraintImpulse.y += force.y * share;\n\n                // apply forces\n                bodyB.position.x += force.x * share;\n                bodyB.position.y += force.y * share;\n\n                // apply damping\n                if (constraint.damping) {\n                  bodyB.positionPrev.x +=\n                    constraint.damping * normal.x * normalVelocity * share;\n                  bodyB.positionPrev.y +=\n                    constraint.damping * normal.y * normalVelocity * share;\n                }\n\n                // apply torque\n                torque =\n                  Vector.cross(pointB, force) /\n                  resistanceTotal *\n                  Constraint._torqueDampen *\n                  bodyB.inverseInertia *\n                  (1 - constraint.angularStiffness);\n                bodyB.constraintImpulse.angle += torque;\n                bodyB.angle += torque;\n              }\n            };\n\n            /**\n             * Performs body updates required after solving constraints.\n             * @private\n             * @method postSolveAll\n             * @param {body[]} bodies\n             */\n            Constraint.postSolveAll = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  impulse = body.constraintImpulse;\n\n                if (\n                  body.isStatic ||\n                  (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)\n                ) {\n                  continue;\n                }\n\n                Sleeping.set(body, false);\n\n                // update geometry and reset\n                for (var j = 0; j < body.parts.length; j++) {\n                  var part = body.parts[j];\n\n                  Vertices.translate(part.vertices, impulse);\n\n                  if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                  }\n\n                  if (impulse.angle !== 0) {\n                    Vertices.rotate(\n                      part.vertices,\n                      impulse.angle,\n                      body.position\n                    );\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                      Vector.rotateAbout(\n                        part.position,\n                        impulse.angle,\n                        body.position,\n                        part.position\n                      );\n                    }\n                  }\n\n                  Bounds.update(part.bounds, part.vertices, body.velocity);\n                }\n\n                // dampen the cached impulse for warming next step\n                impulse.angle *= Constraint._warming;\n                impulse.x *= Constraint._warming;\n                impulse.y *= Constraint._warming;\n              }\n            };\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"constraint\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage bodies.\n             *\n             * @property label\n             * @type string\n             * @default \"Constraint\"\n             */\n\n            /**\n             * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n             *\n             * @property render\n             * @type object\n             */\n\n            /**\n             * A flag that indicates if the constraint should be rendered.\n             *\n             * @property render.visible\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * A `Number` that defines the line width to use when rendering the constraint outline.\n             * A value of `0` means no outline will be rendered.\n             *\n             * @property render.lineWidth\n             * @type number\n             * @default 2\n             */\n\n            /**\n             * A `String` that defines the stroke style to use when rendering the constraint outline.\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.strokeStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * A `String` that defines the constraint rendering type.\n             * The possible values are 'line', 'pin', 'spring'.\n             * An appropriate render type will be automatically chosen unless one is given in options.\n             *\n             * @property render.type\n             * @type string\n             * @default 'line'\n             */\n\n            /**\n             * A `Boolean` that defines if the constraint's anchor points should be rendered.\n             *\n             * @property render.anchors\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * The first possible `Body` that this constraint is attached to.\n             *\n             * @property bodyA\n             * @type body\n             * @default null\n             */\n\n            /**\n             * The second possible `Body` that this constraint is attached to.\n             *\n             * @property bodyB\n             * @type body\n             * @default null\n             */\n\n            /**\n             * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n             *\n             * @property pointA\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n             *\n             * @property pointB\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n             * A value of `1` means the constraint should be very stiff.\n             * A value of `0.2` means the constraint acts like a soft spring.\n             *\n             * @property stiffness\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that specifies the damping of the constraint,\n             * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n             * Damping will only be apparent when the constraint also has a very low `stiffness`.\n             * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n             * A value of `0` means the constraint will apply no damping.\n             *\n             * @property damping\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that specifies the target resting length of the constraint.\n             * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n             *\n             * @property length\n             * @type number\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Sleeping': 22,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      13: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n           * Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class MouseConstraint\n           */\n\n          var MouseConstraint = {};\n\n          module.exports = MouseConstraint;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Mouse = _dereq_('../core/Mouse');\n          var Events = _dereq_('../core/Events');\n          var Detector = _dereq_('../collision/Detector');\n          var Constraint = _dereq_('./Constraint');\n          var Composite = _dereq_('../body/Composite');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            /**\n             * Creates a new mouse constraint.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {engine} engine\n             * @param {} options\n             * @return {MouseConstraint} A new MouseConstraint\n             */\n            MouseConstraint.create = function(engine, options) {\n              var mouse =\n                (engine ? engine.mouse : null) ||\n                (options ? options.mouse : null);\n\n              if (!mouse) {\n                if (engine && engine.render && engine.render.canvas) {\n                  mouse = Mouse.create(engine.render.canvas);\n                } else if (options && options.element) {\n                  mouse = Mouse.create(options.element);\n                } else {\n                  mouse = Mouse.create();\n                  Common.warn(\n                    'MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected'\n                  );\n                }\n              }\n\n              var constraint = Constraint.create({\n                label: 'Mouse Constraint',\n                pointA: mouse.position,\n                pointB: { x: 0, y: 0 },\n                length: 0.01,\n                stiffness: 0.1,\n                angularStiffness: 1,\n                render: {\n                  strokeStyle: '#90EE90',\n                  lineWidth: 3,\n                },\n              });\n\n              var defaults = {\n                type: 'mouseConstraint',\n                mouse: mouse,\n                element: null,\n                body: null,\n                constraint: constraint,\n                collisionFilter: {\n                  category: 0x0001,\n                  mask: 0xffffffff,\n                  group: 0,\n                },\n              };\n\n              var mouseConstraint = Common.extend(defaults, options);\n\n              Events.on(engine, 'beforeUpdate', function() {\n                var allBodies = Composite.allBodies(engine.world);\n                MouseConstraint.update(mouseConstraint, allBodies);\n                MouseConstraint._triggerEvents(mouseConstraint);\n              });\n\n              return mouseConstraint;\n            };\n\n            /**\n             * Updates the given mouse constraint.\n             * @private\n             * @method update\n             * @param {MouseConstraint} mouseConstraint\n             * @param {body[]} bodies\n             */\n            MouseConstraint.update = function(mouseConstraint, bodies) {\n              var mouse = mouseConstraint.mouse,\n                constraint = mouseConstraint.constraint,\n                body = mouseConstraint.body;\n\n              if (mouse.button === 0) {\n                if (!constraint.bodyB) {\n                  for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (\n                      Bounds.contains(body.bounds, mouse.position) &&\n                      Detector.canCollide(\n                        body.collisionFilter,\n                        mouseConstraint.collisionFilter\n                      )\n                    ) {\n                      for (\n                        var j = body.parts.length > 1 ? 1 : 0;\n                        j < body.parts.length;\n                        j++\n                      ) {\n                        var part = body.parts[j];\n                        if (Vertices.contains(part.vertices, mouse.position)) {\n                          constraint.pointA = mouse.position;\n                          constraint.bodyB = mouseConstraint.body = body;\n                          constraint.pointB = {\n                            x: mouse.position.x - body.position.x,\n                            y: mouse.position.y - body.position.y,\n                          };\n                          constraint.angleB = body.angle;\n\n                          Sleeping.set(body, false);\n                          Events.trigger(mouseConstraint, 'startdrag', {\n                            mouse: mouse,\n                            body: body,\n                          });\n\n                          break;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  Sleeping.set(constraint.bodyB, false);\n                  constraint.pointA = mouse.position;\n                }\n              } else {\n                constraint.bodyB = mouseConstraint.body = null;\n                constraint.pointB = null;\n\n                if (body)\n                  Events.trigger(mouseConstraint, 'enddrag', {\n                    mouse: mouse,\n                    body: body,\n                  });\n              }\n            };\n\n            /**\n             * Triggers mouse constraint events.\n             * @method _triggerEvents\n             * @private\n             * @param {mouse} mouseConstraint\n             */\n            MouseConstraint._triggerEvents = function(mouseConstraint) {\n              var mouse = mouseConstraint.mouse,\n                mouseEvents = mouse.sourceEvents;\n\n              if (mouseEvents.mousemove)\n                Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n              if (mouseEvents.mousedown)\n                Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n              if (mouseEvents.mouseup)\n                Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n              // reset the mouse state ready for the next step\n              Mouse.clearSourceEvents(mouse);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when the mouse has moved (or a touch moves) during the last step\n             *\n             * @event mousemove\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the mouse is down (or a touch has started) during the last step\n             *\n             * @event mousedown\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the mouse is up (or a touch has ended) during the last step\n             *\n             * @event mouseup\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the user starts dragging a body\n             *\n             * @event startdrag\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {body} event.body The body being dragged\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the user ends dragging a body\n             *\n             * @event enddrag\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {body} event.body The body that has stopped being dragged\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"constraint\"\n             * @readOnly\n             */\n\n            /**\n             * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n             *\n             * @property mouse\n             * @type mouse\n             * @default mouse\n             */\n\n            /**\n             * The `Body` that is currently being moved by the user, or `null` if no body.\n             *\n             * @property body\n             * @type body\n             * @default null\n             */\n\n            /**\n             * The `Constraint` object that is used to move the body during interaction.\n             *\n             * @property constraint\n             * @type constraint\n             */\n\n            /**\n             * An `Object` that specifies the collision filter properties.\n             * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter\n             * @type object\n             */\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../collision/Detector': 5,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../core/Mouse': 19,\n          '../core/Sleeping': 22,\n          '../geometry/Bounds': 26,\n          '../geometry/Vertices': 29,\n          './Constraint': 12,\n        },\n      ],\n      14: [\n        function(_dereq_, module, exports) {\n          (function(global) {\n            /**\n             * The `Matter.Common` module contains utility functions that are common to all modules.\n             *\n             * @class Common\n             */\n\n            var Common = {};\n\n            module.exports = Common;\n\n            (function() {\n              Common._nextId = 0;\n              Common._seed = 0;\n              Common._nowStartTime = +new Date();\n\n              /**\n               * Extends the object in the first argument using the object in the second argument.\n               * @method extend\n               * @param {} obj\n               * @param {boolean} deep\n               * @return {} obj extended\n               */\n              Common.extend = function(obj, deep) {\n                var argsStart, args, deepClone;\n\n                if (typeof deep === 'boolean') {\n                  argsStart = 2;\n                  deepClone = deep;\n                } else {\n                  argsStart = 1;\n                  deepClone = true;\n                }\n\n                for (var i = argsStart; i < arguments.length; i++) {\n                  var source = arguments[i];\n\n                  if (source) {\n                    for (var prop in source) {\n                      if (\n                        deepClone &&\n                        source[prop] &&\n                        source[prop].constructor === Object\n                      ) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                          obj[prop] = obj[prop] || {};\n                          Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                          obj[prop] = source[prop];\n                        }\n                      } else {\n                        obj[prop] = source[prop];\n                      }\n                    }\n                  }\n                }\n\n                return obj;\n              };\n\n              /**\n               * Creates a new clone of the object, if deep is true references will also be cloned.\n               * @method clone\n               * @param {} obj\n               * @param {bool} deep\n               * @return {} obj cloned\n               */\n              Common.clone = function(obj, deep) {\n                return Common.extend({}, deep, obj);\n              };\n\n              /**\n               * Returns the list of keys for the given object.\n               * @method keys\n               * @param {} obj\n               * @return {string[]} keys\n               */\n              Common.keys = function(obj) {\n                if (Object.keys) return Object.keys(obj);\n\n                // avoid hasOwnProperty for performance\n                var keys = [];\n                for (var key in obj) keys.push(key);\n                return keys;\n              };\n\n              /**\n               * Returns the list of values for the given object.\n               * @method values\n               * @param {} obj\n               * @return {array} Array of the objects property values\n               */\n              Common.values = function(obj) {\n                var values = [];\n\n                if (Object.keys) {\n                  var keys = Object.keys(obj);\n                  for (var i = 0; i < keys.length; i++) {\n                    values.push(obj[keys[i]]);\n                  }\n                  return values;\n                }\n\n                // avoid hasOwnProperty for performance\n                for (var key in obj) values.push(obj[key]);\n                return values;\n              };\n\n              /**\n               * Gets a value from `base` relative to the `path` string.\n               * @method get\n               * @param {} obj The base object\n               * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n               * @param {number} [begin] Path slice begin\n               * @param {number} [end] Path slice end\n               * @return {} The object at the given path\n               */\n              Common.get = function(obj, path, begin, end) {\n                path = path.split('.').slice(begin, end);\n\n                for (var i = 0; i < path.length; i += 1) {\n                  obj = obj[path[i]];\n                }\n\n                return obj;\n              };\n\n              /**\n               * Sets a value on `base` relative to the given `path` string.\n               * @method set\n               * @param {} obj The base object\n               * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n               * @param {} val The value to set\n               * @param {number} [begin] Path slice begin\n               * @param {number} [end] Path slice end\n               * @return {} Pass through `val` for chaining\n               */\n              Common.set = function(obj, path, val, begin, end) {\n                var parts = path.split('.').slice(begin, end);\n                Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n                return val;\n              };\n\n              /**\n               * Shuffles the given array in-place.\n               * The function uses a seeded random generator.\n               * @method shuffle\n               * @param {array} array\n               * @return {array} array shuffled randomly\n               */\n              Common.shuffle = function(array) {\n                for (var i = array.length - 1; i > 0; i--) {\n                  var j = Math.floor(Common.random() * (i + 1));\n                  var temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n                return array;\n              };\n\n              /**\n               * Randomly chooses a value from a list with equal probability.\n               * The function uses a seeded random generator.\n               * @method choose\n               * @param {array} choices\n               * @return {object} A random choice object from the array\n               */\n              Common.choose = function(choices) {\n                return choices[Math.floor(Common.random() * choices.length)];\n              };\n\n              /**\n               * Returns true if the object is a HTMLElement, otherwise false.\n               * @method isElement\n               * @param {object} obj\n               * @return {boolean} True if the object is a HTMLElement, otherwise false\n               */\n              Common.isElement = function(obj) {\n                if (typeof HTMLElement !== 'undefined') {\n                  return obj instanceof HTMLElement;\n                }\n\n                return !!(obj && obj.nodeType && obj.nodeName);\n              };\n\n              /**\n               * Returns true if the object is an array.\n               * @method isArray\n               * @param {object} obj\n               * @return {boolean} True if the object is an array, otherwise false\n               */\n              Common.isArray = function(obj) {\n                return Object.prototype.toString.call(obj) === '[object Array]';\n              };\n\n              /**\n               * Returns true if the object is a function.\n               * @method isFunction\n               * @param {object} obj\n               * @return {boolean} True if the object is a function, otherwise false\n               */\n              Common.isFunction = function(obj) {\n                return typeof obj === 'function';\n              };\n\n              /**\n               * Returns true if the object is a plain object.\n               * @method isPlainObject\n               * @param {object} obj\n               * @return {boolean} True if the object is a plain object, otherwise false\n               */\n              Common.isPlainObject = function(obj) {\n                return typeof obj === 'object' && obj.constructor === Object;\n              };\n\n              /**\n               * Returns true if the object is a string.\n               * @method isString\n               * @param {object} obj\n               * @return {boolean} True if the object is a string, otherwise false\n               */\n              Common.isString = function(obj) {\n                return toString.call(obj) === '[object String]';\n              };\n\n              /**\n               * Returns the given value clamped between a minimum and maximum value.\n               * @method clamp\n               * @param {number} value\n               * @param {number} min\n               * @param {number} max\n               * @return {number} The value clamped between min and max inclusive\n               */\n              Common.clamp = function(value, min, max) {\n                if (value < min) return min;\n                if (value > max) return max;\n                return value;\n              };\n\n              /**\n               * Returns the sign of the given value.\n               * @method sign\n               * @param {number} value\n               * @return {number} -1 if negative, +1 if 0 or positive\n               */\n              Common.sign = function(value) {\n                return value < 0 ? -1 : 1;\n              };\n\n              /**\n               * Returns the current timestamp since the time origin (e.g. from page load).\n               * The result will be high-resolution including decimal places if available.\n               * @method now\n               * @return {number} the current timestamp\n               */\n              Common.now = function() {\n                if (window.performance) {\n                  if (window.performance.now) {\n                    return window.performance.now();\n                  } else if (window.performance.webkitNow) {\n                    return window.performance.webkitNow();\n                  }\n                }\n\n                return new Date() - Common._nowStartTime;\n              };\n\n              /**\n               * Returns a random value between a minimum and a maximum value inclusive.\n               * The function uses a seeded random generator.\n               * @method random\n               * @param {number} min\n               * @param {number} max\n               * @return {number} A random number between min and max inclusive\n               */\n              Common.random = function(min, max) {\n                min = typeof min !== 'undefined' ? min : 0;\n                max = typeof max !== 'undefined' ? max : 1;\n                return min + _seededRandom() * (max - min);\n              };\n\n              var _seededRandom = function() {\n                // https://en.wikipedia.org/wiki/Linear_congruential_generator\n                Common._seed = (Common._seed * 9301 + 49297) % 233280;\n                return Common._seed / 233280;\n              };\n\n              /**\n               * Converts a CSS hex colour string into an integer.\n               * @method colorToNumber\n               * @param {string} colorString\n               * @return {number} An integer representing the CSS hex string\n               */\n              Common.colorToNumber = function(colorString) {\n                colorString = colorString.replace('#', '');\n\n                if (colorString.length == 3) {\n                  colorString =\n                    colorString.charAt(0) +\n                    colorString.charAt(0) +\n                    colorString.charAt(1) +\n                    colorString.charAt(1) +\n                    colorString.charAt(2) +\n                    colorString.charAt(2);\n                }\n\n                return parseInt(colorString, 16);\n              };\n\n              /**\n               * The console logging level to use, where each level includes all levels above and excludes the levels below.\n               * The default level is 'debug' which shows all console messages.\n               *\n               * Possible level values are:\n               * - 0 = None\n               * - 1 = Debug\n               * - 2 = Info\n               * - 3 = Warn\n               * - 4 = Error\n               * @property Common.logLevel\n               * @type {Number}\n               * @default 1\n               */\n              Common.logLevel = 1;\n\n              /**\n               * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method log\n               * @param ...objs {} The objects to log.\n               */\n              Common.log = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n                  console.log.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method info\n               * @param ...objs {} The objects to log.\n               */\n              Common.info = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n                  console.info.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method warn\n               * @param ...objs {} The objects to log.\n               */\n              Common.warn = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n                  console.warn.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Returns the next unique sequential ID.\n               * @method nextId\n               * @return {Number} Unique sequential ID\n               */\n              Common.nextId = function() {\n                return Common._nextId++;\n              };\n\n              /**\n               * A cross browser compatible indexOf implementation.\n               * @method indexOf\n               * @param {array} haystack\n               * @param {object} needle\n               * @return {number} The position of needle in haystack, otherwise -1.\n               */\n              Common.indexOf = function(haystack, needle) {\n                if (haystack.indexOf) return haystack.indexOf(needle);\n\n                for (var i = 0; i < haystack.length; i++) {\n                  if (haystack[i] === needle) return i;\n                }\n\n                return -1;\n              };\n\n              /**\n               * A cross browser compatible array map implementation.\n               * @method map\n               * @param {array} list\n               * @param {function} func\n               * @return {array} Values from list transformed by func.\n               */\n              Common.map = function(list, func) {\n                if (list.map) {\n                  return list.map(func);\n                }\n\n                var mapped = [];\n\n                for (var i = 0; i < list.length; i += 1) {\n                  mapped.push(func(list[i]));\n                }\n\n                return mapped;\n              };\n\n              /**\n               * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n               * Circular dependencies are allowed.\n               * @method topologicalSort\n               * @param {object} graph\n               * @return {array} Partially ordered set of vertices in topological order.\n               */\n              Common.topologicalSort = function(graph) {\n                // https://github.com/mgechev/javascript-algorithms\n                // Copyright (c) Minko Gechev (MIT license)\n                // Modifications: tidy formatting and naming\n                var result = [],\n                  visited = [],\n                  temp = [];\n\n                for (var node in graph) {\n                  if (!visited[node] && !temp[node]) {\n                    Common._topologicalSort(node, visited, temp, graph, result);\n                  }\n                }\n\n                return result;\n              };\n\n              Common._topologicalSort = function(\n                node,\n                visited,\n                temp,\n                graph,\n                result\n              ) {\n                var neighbors = graph[node] || [];\n                temp[node] = true;\n\n                for (var i = 0; i < neighbors.length; i += 1) {\n                  var neighbor = neighbors[i];\n\n                  if (temp[neighbor]) {\n                    // skip circular dependencies\n                    continue;\n                  }\n\n                  if (!visited[neighbor]) {\n                    Common._topologicalSort(\n                      neighbor,\n                      visited,\n                      temp,\n                      graph,\n                      result\n                    );\n                  }\n                }\n\n                temp[node] = false;\n                visited[node] = true;\n\n                result.push(node);\n              };\n\n              /**\n               * Takes _n_ functions as arguments and returns a new function that calls them in order.\n               * The arguments applied when calling the new function will also be applied to every function passed.\n               * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n               * Therefore if a passed function does not return a value, the previously returned value is maintained.\n               * After all passed functions have been called the new function returns the last returned value (if any).\n               * If any of the passed functions are a chain, then the chain will be flattened.\n               * @method chain\n               * @param ...funcs {function} The functions to chain.\n               * @return {function} A new function that calls the passed functions in order.\n               */\n              Common.chain = function() {\n                var funcs = [];\n\n                for (var i = 0; i < arguments.length; i += 1) {\n                  var func = arguments[i];\n\n                  if (func._chained) {\n                    // flatten already chained functions\n                    funcs.push.apply(funcs, func._chained);\n                  } else {\n                    funcs.push(func);\n                  }\n                }\n\n                var chain = function() {\n                  // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n                  var lastResult,\n                    args = new Array(arguments.length);\n\n                  for (var i = 0, l = arguments.length; i < l; i++) {\n                    args[i] = arguments[i];\n                  }\n\n                  for (i = 0; i < funcs.length; i += 1) {\n                    var result = funcs[i].apply(lastResult, args);\n\n                    if (typeof result !== 'undefined') {\n                      lastResult = result;\n                    }\n                  }\n\n                  return lastResult;\n                };\n\n                chain._chained = funcs;\n\n                return chain;\n              };\n\n              /**\n               * Chains a function to excute before the original function on the given `path` relative to `base`.\n               * See also docs for `Common.chain`.\n               * @method chainPathBefore\n               * @param {} base The base object\n               * @param {string} path The path relative to `base`\n               * @param {function} func The function to chain before the original\n               * @return {function} The chained function that replaced the original\n               */\n              Common.chainPathBefore = function(base, path, func) {\n                return Common.set(\n                  base,\n                  path,\n                  Common.chain(func, Common.get(base, path))\n                );\n              };\n\n              /**\n               * Chains a function to excute after the original function on the given `path` relative to `base`.\n               * See also docs for `Common.chain`.\n               * @method chainPathAfter\n               * @param {} base The base object\n               * @param {string} path The path relative to `base`\n               * @param {function} func The function to chain after the original\n               * @return {function} The chained function that replaced the original\n               */\n              Common.chainPathAfter = function(base, path, func) {\n                return Common.set(\n                  base,\n                  path,\n                  Common.chain(Common.get(base, path), func)\n                );\n              };\n\n              /**\n               * Used to require external libraries outside of the bundle.\n               * It first looks for the `globalName` on the environment's global namespace.\n               * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n               * @private\n               * @method _requireGlobal\n               * @param {string} globalName The global module name\n               * @param {string} moduleName The fallback CommonJS module name\n               * @return {} The loaded module\n               */\n              Common._requireGlobal = function(globalName, moduleName) {\n                var obj =\n                  typeof window !== 'undefined'\n                    ? window[globalName]\n                    : typeof global !== 'undefined'\n                      ? global[globalName]\n                      : null;\n                return obj || _dereq_(moduleName);\n              };\n            })();\n          }.call(\n            this,\n            typeof global !== 'undefined'\n              ? global\n              : typeof self !== 'undefined'\n                ? self\n                : typeof window !== 'undefined'\n                  ? window\n                  : {}\n          ));\n        },\n        {},\n      ],\n      15: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Engine` module contains methods for creating and manipulating engines.\n           * An engine is a controller that manages updating the simulation of the world.\n           * See `Matter.Runner` for an optional game loop utility.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Engine\n           */\n\n          var Engine = {};\n\n          module.exports = Engine;\n\n          var World = _dereq_('../body/World');\n          var Sleeping = _dereq_('./Sleeping');\n          var Resolver = _dereq_('../collision/Resolver');\n          var Render = _dereq_('../render/Render');\n          var Pairs = _dereq_('../collision/Pairs');\n          var Metrics = _dereq_('./Metrics');\n          var Grid = _dereq_('../collision/Grid');\n          var Events = _dereq_('./Events');\n          var Composite = _dereq_('../body/Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('./Common');\n          var Body = _dereq_('../body/Body');\n\n          (function() {\n            /**\n             * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {object} [options]\n             * @return {engine} engine\n             */\n            Engine.create = function(element, options) {\n              // options may be passed as the first (and only) argument\n              options = Common.isElement(element) ? options : element;\n              element = Common.isElement(element) ? element : null;\n              options = options || {};\n\n              if (element || options.render) {\n                Common.warn(\n                  'Engine.create: engine.render is deprecated (see docs)'\n                );\n              }\n\n              var defaults = {\n                positionIterations: 6,\n                velocityIterations: 4,\n                constraintIterations: 2,\n                enableSleeping: false,\n                events: [],\n                plugin: {},\n                timing: {\n                  timestamp: 0,\n                  timeScale: 1,\n                },\n                broadphase: {\n                  controller: Grid,\n                },\n              };\n\n              var engine = Common.extend(defaults, options);\n\n              // @deprecated\n              if (element || engine.render) {\n                var renderDefaults = {\n                  element: element,\n                  controller: Render,\n                };\n\n                engine.render = Common.extend(renderDefaults, engine.render);\n              }\n\n              // @deprecated\n              if (engine.render && engine.render.controller) {\n                engine.render = engine.render.controller.create(engine.render);\n              }\n\n              // @deprecated\n              if (engine.render) {\n                engine.render.engine = engine;\n              }\n\n              engine.world = options.world || World.create(engine.world);\n              engine.pairs = Pairs.create();\n              engine.broadphase = engine.broadphase.controller.create(\n                engine.broadphase\n              );\n              engine.metrics = engine.metrics || { extended: false };\n\n              return engine;\n            };\n\n            /**\n             * Moves the simulation forward in time by `delta` ms.\n             * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n             * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n             * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n             * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n             * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n             *\n             * Triggers `beforeUpdate` and `afterUpdate` events.\n             * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n             * @method update\n             * @param {engine} engine\n             * @param {number} [delta=16.666]\n             * @param {number} [correction=1]\n             */\n            Engine.update = function(engine, delta, correction) {\n              delta = delta || 1000 / 60;\n              correction = correction || 1;\n\n              var world = engine.world,\n                timing = engine.timing,\n                broadphase = engine.broadphase,\n                broadphasePairs = [],\n                i;\n\n              // increment timestamp\n              timing.timestamp += delta * timing.timeScale;\n\n              // create an event object\n              var event = {\n                timestamp: timing.timestamp,\n              };\n\n              Events.trigger(engine, 'beforeUpdate', event);\n\n              // get lists of all bodies and constraints, no matter what composites they are in\n              var allBodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world);\n\n              // if sleeping enabled, call the sleeping controller\n              if (engine.enableSleeping)\n                Sleeping.update(allBodies, timing.timeScale);\n\n              // applies gravity to all bodies\n              Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n              // update all body position and rotation by integration\n              Engine._bodiesUpdate(\n                allBodies,\n                delta,\n                timing.timeScale,\n                correction,\n                world.bounds\n              );\n\n              // update all constraints (first pass)\n              Constraint.preSolveAll(allBodies);\n              for (i = 0; i < engine.constraintIterations; i++) {\n                Constraint.solveAll(allConstraints, timing.timeScale);\n              }\n              Constraint.postSolveAll(allBodies);\n\n              // broadphase pass: find potential collision pairs\n              if (broadphase.controller) {\n                // if world is dirty, we must flush the whole grid\n                if (world.isModified) broadphase.controller.clear(broadphase);\n\n                // update the grid buckets based on current bodies\n                broadphase.controller.update(\n                  broadphase,\n                  allBodies,\n                  engine,\n                  world.isModified\n                );\n                broadphasePairs = broadphase.pairsList;\n              } else {\n                // if no broadphase set, we just pass all bodies\n                broadphasePairs = allBodies;\n              }\n\n              // clear all composite modified flags\n              if (world.isModified) {\n                Composite.setModified(world, false, false, true);\n              }\n\n              // narrowphase pass: find actual collisions, then create or update collision pairs\n              var collisions = broadphase.detector(broadphasePairs, engine);\n\n              // update collision pairs\n              var pairs = engine.pairs,\n                timestamp = timing.timestamp;\n              Pairs.update(pairs, collisions, timestamp);\n              Pairs.removeOld(pairs, timestamp);\n\n              // wake up bodies involved in collisions\n              if (engine.enableSleeping)\n                Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n              // trigger collision events\n              if (pairs.collisionStart.length > 0)\n                Events.trigger(engine, 'collisionStart', {\n                  pairs: pairs.collisionStart,\n                });\n\n              // iteratively resolve position between collisions\n              Resolver.preSolvePosition(pairs.list);\n              for (i = 0; i < engine.positionIterations; i++) {\n                Resolver.solvePosition(pairs.list, timing.timeScale);\n              }\n              Resolver.postSolvePosition(allBodies);\n\n              // update all constraints (second pass)\n              Constraint.preSolveAll(allBodies);\n              for (i = 0; i < engine.constraintIterations; i++) {\n                Constraint.solveAll(allConstraints, timing.timeScale);\n              }\n              Constraint.postSolveAll(allBodies);\n\n              // iteratively resolve velocity between collisions\n              Resolver.preSolveVelocity(pairs.list);\n              for (i = 0; i < engine.velocityIterations; i++) {\n                Resolver.solveVelocity(pairs.list, timing.timeScale);\n              }\n\n              // trigger collision events\n              if (pairs.collisionActive.length > 0)\n                Events.trigger(engine, 'collisionActive', {\n                  pairs: pairs.collisionActive,\n                });\n\n              if (pairs.collisionEnd.length > 0)\n                Events.trigger(engine, 'collisionEnd', {\n                  pairs: pairs.collisionEnd,\n                });\n\n              // clear force buffers\n              Engine._bodiesClearForces(allBodies);\n\n              Events.trigger(engine, 'afterUpdate', event);\n\n              return engine;\n            };\n\n            /**\n             * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n             * @method merge\n             * @param {engine} engineA\n             * @param {engine} engineB\n             */\n            Engine.merge = function(engineA, engineB) {\n              Common.extend(engineA, engineB);\n\n              if (engineB.world) {\n                engineA.world = engineB.world;\n\n                Engine.clear(engineA);\n\n                var bodies = Composite.allBodies(engineA.world);\n\n                for (var i = 0; i < bodies.length; i++) {\n                  var body = bodies[i];\n                  Sleeping.set(body, false);\n                  body.id = Common.nextId();\n                }\n              }\n            };\n\n            /**\n             * Clears the engine including the world, pairs and broadphase.\n             * @method clear\n             * @param {engine} engine\n             */\n            Engine.clear = function(engine) {\n              var world = engine.world;\n\n              Pairs.clear(engine.pairs);\n\n              var broadphase = engine.broadphase;\n              if (broadphase.controller) {\n                var bodies = Composite.allBodies(world);\n                broadphase.controller.clear(broadphase);\n                broadphase.controller.update(broadphase, bodies, engine, true);\n              }\n            };\n\n            /**\n             * Zeroes the `body.force` and `body.torque` force buffers.\n             * @method _bodiesClearForces\n             * @private\n             * @param {body[]} bodies\n             */\n            Engine._bodiesClearForces = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                // reset force buffers\n                body.force.x = 0;\n                body.force.y = 0;\n                body.torque = 0;\n              }\n            };\n\n            /**\n             * Applys a mass dependant force to all given bodies.\n             * @method _bodiesApplyGravity\n             * @private\n             * @param {body[]} bodies\n             * @param {vector} gravity\n             */\n            Engine._bodiesApplyGravity = function(bodies, gravity) {\n              var gravityScale =\n                typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n              if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n                return;\n              }\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isStatic || body.isSleeping) continue;\n\n                // apply gravity\n                body.force.y += body.mass * gravity.y * gravityScale;\n                body.force.x += body.mass * gravity.x * gravityScale;\n              }\n            };\n\n            /**\n             * Applys `Body.update` to all given `bodies`.\n             * @method _bodiesUpdate\n             * @private\n             * @param {body[]} bodies\n             * @param {number} deltaTime\n             * The amount of time elapsed between updates\n             * @param {number} timeScale\n             * @param {number} correction\n             * The Verlet correction factor (deltaTime / lastDeltaTime)\n             * @param {bounds} worldBounds\n             */\n            Engine._bodiesUpdate = function(\n              bodies,\n              deltaTime,\n              timeScale,\n              correction,\n              worldBounds\n            ) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isStatic || body.isSleeping) continue;\n\n                Body.update(body, deltaTime, timeScale, correction);\n              }\n            };\n\n            /**\n             * An alias for `Runner.run`, see `Matter.Runner` for more information.\n             * @method run\n             * @param {engine} engine\n             */\n\n            /**\n             * Fired just before an update\n             *\n             * @event beforeUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update and all collision events\n             *\n             * @event afterUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n             *\n             * @event collisionStart\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n             *\n             * @event collisionActive\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n             *\n             * @event collisionEnd\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` that specifies the number of position iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             *\n             * @property positionIterations\n             * @type number\n             * @default 6\n             */\n\n            /**\n             * An integer `Number` that specifies the number of velocity iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             *\n             * @property velocityIterations\n             * @type number\n             * @default 4\n             */\n\n            /**\n             * An integer `Number` that specifies the number of constraint iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             * The default value of `2` is usually very adequate.\n             *\n             * @property constraintIterations\n             * @type number\n             * @default 2\n             */\n\n            /**\n             * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n             * Sleeping can improve stability and performance, but often at the expense of accuracy.\n             *\n             * @property enableSleeping\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * An `Object` containing properties regarding the timing systems of the engine.\n             *\n             * @property timing\n             * @type object\n             */\n\n            /**\n             * A `Number` that specifies the global scaling factor of time for all bodies.\n             * A value of `0` freezes the simulation.\n             * A value of `0.1` gives a slow-motion effect.\n             * A value of `1.2` gives a speed-up effect.\n             *\n             * @property timing.timeScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n             * It is incremented on every `Engine.update` by the given `delta` argument.\n             *\n             * @property timing.timestamp\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n             * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n             *\n             * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n             * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n             *\n             * @property render\n             * @type render\n             * @deprecated see Demo.js for an example of creating a renderer\n             * @default a Matter.Render instance\n             */\n\n            /**\n             * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n             *\n             * @property broadphase\n             * @type grid\n             * @default a Matter.Grid instance\n             */\n\n            /**\n             * A `World` composite object that will contain all simulated bodies and constraints.\n             *\n             * @property world\n             * @type world\n             * @default a Matter.World instance\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../body/World': 3,\n          '../collision/Grid': 6,\n          '../collision/Pairs': 8,\n          '../collision/Resolver': 10,\n          '../constraint/Constraint': 12,\n          '../render/Render': 31,\n          './Common': 14,\n          './Events': 16,\n          './Metrics': 18,\n          './Sleeping': 22,\n        },\n      ],\n      16: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Events` module contains methods to fire and listen to events on other objects.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Events\n           */\n\n          var Events = {};\n\n          module.exports = Events;\n\n          var Common = _dereq_('./Common');\n\n          (function() {\n            /**\n             * Subscribes a callback function to the given object's `eventName`.\n             * @method on\n             * @param {} object\n             * @param {string} eventNames\n             * @param {function} callback\n             */\n            Events.on = function(object, eventNames, callback) {\n              var names = eventNames.split(' '),\n                name;\n\n              for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                object.events = object.events || {};\n                object.events[name] = object.events[name] || [];\n                object.events[name].push(callback);\n              }\n\n              return callback;\n            };\n\n            /**\n             * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n             * @method off\n             * @param {} object\n             * @param {string} eventNames\n             * @param {function} callback\n             */\n            Events.off = function(object, eventNames, callback) {\n              if (!eventNames) {\n                object.events = {};\n                return;\n              }\n\n              // handle Events.off(object, callback)\n              if (typeof eventNames === 'function') {\n                callback = eventNames;\n                eventNames = Common.keys(object.events).join(' ');\n              }\n\n              var names = eventNames.split(' ');\n\n              for (var i = 0; i < names.length; i++) {\n                var callbacks = object.events[names[i]],\n                  newCallbacks = [];\n\n                if (callback && callbacks) {\n                  for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                      newCallbacks.push(callbacks[j]);\n                  }\n                }\n\n                object.events[names[i]] = newCallbacks;\n              }\n            };\n\n            /**\n             * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n             * @method trigger\n             * @param {} object\n             * @param {string} eventNames\n             * @param {} event\n             */\n            Events.trigger = function(object, eventNames, event) {\n              var names, name, callbacks, eventClone;\n\n              if (object.events) {\n                if (!event) event = {};\n\n                names = eventNames.split(' ');\n\n                for (var i = 0; i < names.length; i++) {\n                  name = names[i];\n                  callbacks = object.events[name];\n\n                  if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                      callbacks[j].apply(object, [eventClone]);\n                    }\n                  }\n                }\n              }\n            };\n          })();\n        },\n        { './Common': 14 },\n      ],\n      17: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n           *\n           * @class Matter\n           */\n\n          var Matter = {};\n\n          module.exports = Matter;\n\n          var Plugin = _dereq_('./Plugin');\n          var Common = _dereq_('./Common');\n\n          (function() {\n            /**\n             * The library name.\n             * @property name\n             * @readOnly\n             * @type {String}\n             */\n            Matter.name = 'matter-js';\n\n            /**\n             * The library version.\n             * @property version\n             * @readOnly\n             * @type {String}\n             */\n            Matter.version = '0.14.2';\n\n            /**\n             * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n             * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n             * @property uses\n             * @type {Array}\n             */\n            Matter.uses = [];\n\n            /**\n             * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n             * @property used\n             * @readOnly\n             * @type {Array}\n             */\n            Matter.used = [];\n\n            /**\n             * Installs the given plugins on the `Matter` namespace.\n             * This is a short-hand for `Plugin.use`, see it for more information.\n             * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n             * Avoid calling this function multiple times unless you intend to manually control installation order.\n             * @method use\n             * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n             */\n            Matter.use = function() {\n              Plugin.use(Matter, Array.prototype.slice.call(arguments));\n            };\n\n            /**\n             * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n             * See also docs for `Common.chain`.\n             * @method before\n             * @param {string} path The path relative to `Matter`\n             * @param {function} func The function to chain before the original\n             * @return {function} The chained function that replaced the original\n             */\n            Matter.before = function(path, func) {\n              path = path.replace(/^Matter./, '');\n              return Common.chainPathBefore(Matter, path, func);\n            };\n\n            /**\n             * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n             * See also docs for `Common.chain`.\n             * @method after\n             * @param {string} path The path relative to `Matter`\n             * @param {function} func The function to chain after the original\n             * @return {function} The chained function that replaced the original\n             */\n            Matter.after = function(path, func) {\n              path = path.replace(/^Matter./, '');\n              return Common.chainPathAfter(Matter, path, func);\n            };\n          })();\n        },\n        { './Common': 14, './Plugin': 20 },\n      ],\n      18: [\n        function(_dereq_, module, exports) {},\n        { '../body/Composite': 2, './Common': 14 },\n      ],\n      19: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n           *\n           * @class Mouse\n           */\n\n          var Mouse = {};\n\n          module.exports = Mouse;\n\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a mouse input.\n             * @method create\n             * @param {HTMLElement} element\n             * @return {mouse} A new mouse\n             */\n            Mouse.create = function(element) {\n              var mouse = {};\n\n              if (!element) {\n                Common.log(\n                  'Mouse.create: element was undefined, defaulting to document.body',\n                  'warn'\n                );\n              }\n\n              mouse.element = element || document.body;\n              mouse.absolute = { x: 0, y: 0 };\n              mouse.position = { x: 0, y: 0 };\n              mouse.mousedownPosition = { x: 0, y: 0 };\n              mouse.mouseupPosition = { x: 0, y: 0 };\n              mouse.offset = { x: 0, y: 0 };\n              mouse.scale = { x: 1, y: 1 };\n              mouse.wheelDelta = 0;\n              mouse.button = -1;\n              mouse.pixelRatio =\n                mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n              mouse.sourceEvents = {\n                mousemove: null,\n                mousedown: null,\n                mouseup: null,\n                mousewheel: null,\n              };\n\n              mouse.mousemove = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  mouse.button = 0;\n                  event.preventDefault();\n                }\n\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.sourceEvents.mousemove = event;\n              };\n\n              mouse.mousedown = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  mouse.button = 0;\n                  event.preventDefault();\n                } else {\n                  mouse.button = event.button;\n                }\n\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.mousedownPosition.x = mouse.position.x;\n                mouse.mousedownPosition.y = mouse.position.y;\n                mouse.sourceEvents.mousedown = event;\n              };\n\n              mouse.mouseup = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  event.preventDefault();\n                }\n\n                mouse.button = -1;\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.mouseupPosition.x = mouse.position.x;\n                mouse.mouseupPosition.y = mouse.position.y;\n                mouse.sourceEvents.mouseup = event;\n              };\n\n              mouse.mousewheel = function(event) {\n                mouse.wheelDelta = Math.max(\n                  -1,\n                  Math.min(1, event.wheelDelta || -event.detail)\n                );\n                event.preventDefault();\n              };\n\n              Mouse.setElement(mouse, mouse.element);\n\n              return mouse;\n            };\n\n            /**\n             * Sets the element the mouse is bound to (and relative to).\n             * @method setElement\n             * @param {mouse} mouse\n             * @param {HTMLElement} element\n             */\n            Mouse.setElement = function(mouse, element) {\n              mouse.element = element;\n\n              element.addEventListener('mousemove', mouse.mousemove);\n              element.addEventListener('mousedown', mouse.mousedown);\n              element.addEventListener('mouseup', mouse.mouseup);\n\n              element.addEventListener('mousewheel', mouse.mousewheel);\n              element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n              element.addEventListener('touchmove', mouse.mousemove);\n              element.addEventListener('touchstart', mouse.mousedown);\n              element.addEventListener('touchend', mouse.mouseup);\n            };\n\n            /**\n             * Clears all captured source events.\n             * @method clearSourceEvents\n             * @param {mouse} mouse\n             */\n            Mouse.clearSourceEvents = function(mouse) {\n              mouse.sourceEvents.mousemove = null;\n              mouse.sourceEvents.mousedown = null;\n              mouse.sourceEvents.mouseup = null;\n              mouse.sourceEvents.mousewheel = null;\n              mouse.wheelDelta = 0;\n            };\n\n            /**\n             * Sets the mouse position offset.\n             * @method setOffset\n             * @param {mouse} mouse\n             * @param {vector} offset\n             */\n            Mouse.setOffset = function(mouse, offset) {\n              mouse.offset.x = offset.x;\n              mouse.offset.y = offset.y;\n              mouse.position.x =\n                mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n              mouse.position.y =\n                mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            };\n\n            /**\n             * Sets the mouse position scale.\n             * @method setScale\n             * @param {mouse} mouse\n             * @param {vector} scale\n             */\n            Mouse.setScale = function(mouse, scale) {\n              mouse.scale.x = scale.x;\n              mouse.scale.y = scale.y;\n              mouse.position.x =\n                mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n              mouse.position.y =\n                mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            };\n\n            /**\n             * Gets the mouse position relative to an element given a screen pixel ratio.\n             * @method _getRelativeMousePosition\n             * @private\n             * @param {} event\n             * @param {} element\n             * @param {number} pixelRatio\n             * @return {}\n             */\n            Mouse._getRelativeMousePosition = function(\n              event,\n              element,\n              pixelRatio\n            ) {\n              var elementBounds = element.getBoundingClientRect(),\n                rootNode =\n                  document.documentElement ||\n                  document.body.parentNode ||\n                  document.body,\n                scrollX =\n                  window.pageXOffset !== undefined\n                    ? window.pageXOffset\n                    : rootNode.scrollLeft,\n                scrollY =\n                  window.pageYOffset !== undefined\n                    ? window.pageYOffset\n                    : rootNode.scrollTop,\n                touches = event.changedTouches,\n                x,\n                y;\n\n              if (touches) {\n                x = touches[0].pageX - elementBounds.left - scrollX;\n                y = touches[0].pageY - elementBounds.top - scrollY;\n              } else {\n                x = event.pageX - elementBounds.left - scrollX;\n                y = event.pageY - elementBounds.top - scrollY;\n              }\n\n              return {\n                x:\n                  x /\n                  (element.clientWidth /\n                    (element.width || element.clientWidth) *\n                    pixelRatio),\n                y:\n                  y /\n                  (element.clientHeight /\n                    (element.height || element.clientHeight) *\n                    pixelRatio),\n              };\n            };\n          })();\n        },\n        { '../core/Common': 14 },\n      ],\n      20: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n           *\n           * @class Plugin\n           */\n\n          var Plugin = {};\n\n          module.exports = Plugin;\n\n          var Common = _dereq_('./Common');\n\n          (function() {\n            Plugin._registry = {};\n\n            /**\n             * Registers a plugin object so it can be resolved later by name.\n             * @method register\n             * @param plugin {} The plugin to register.\n             * @return {object} The plugin.\n             */\n            Plugin.register = function(plugin) {\n              if (!Plugin.isPlugin(plugin)) {\n                Common.warn(\n                  'Plugin.register:',\n                  Plugin.toString(plugin),\n                  'does not implement all required fields.'\n                );\n              }\n\n              if (plugin.name in Plugin._registry) {\n                var registered = Plugin._registry[plugin.name],\n                  pluginVersion = Plugin.versionParse(plugin.version).number,\n                  registeredVersion = Plugin.versionParse(registered.version)\n                    .number;\n\n                if (pluginVersion > registeredVersion) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(registered),\n                    'was upgraded to',\n                    Plugin.toString(plugin)\n                  );\n                  Plugin._registry[plugin.name] = plugin;\n                } else if (pluginVersion < registeredVersion) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(registered),\n                    'can not be downgraded to',\n                    Plugin.toString(plugin)\n                  );\n                } else if (plugin !== registered) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(plugin),\n                    'is already registered to different plugin object'\n                  );\n                }\n              } else {\n                Plugin._registry[plugin.name] = plugin;\n              }\n\n              return plugin;\n            };\n\n            /**\n             * Resolves a dependency to a plugin object from the registry if it exists.\n             * The `dependency` may contain a version, but only the name matters when resolving.\n             * @method resolve\n             * @param dependency {string} The dependency.\n             * @return {object} The plugin if resolved, otherwise `undefined`.\n             */\n            Plugin.resolve = function(dependency) {\n              return Plugin._registry[Plugin.dependencyParse(dependency).name];\n            };\n\n            /**\n             * Returns a pretty printed plugin name and version.\n             * @method toString\n             * @param plugin {} The plugin.\n             * @return {string} Pretty printed plugin name and version.\n             */\n            Plugin.toString = function(plugin) {\n              return typeof plugin === 'string'\n                ? plugin\n                : (plugin.name || 'anonymous') +\n                    '@' +\n                    (plugin.version || plugin.range || '0.0.0');\n            };\n\n            /**\n             * Returns `true` if the object meets the minimum standard to be considered a plugin.\n             * This means it must define the following properties:\n             * - `name`\n             * - `version`\n             * - `install`\n             * @method isPlugin\n             * @param obj {} The obj to test.\n             * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n             */\n            Plugin.isPlugin = function(obj) {\n              return obj && obj.name && obj.version && obj.install;\n            };\n\n            /**\n             * Returns `true` if a plugin with the given `name` been installed on `module`.\n             * @method isUsed\n             * @param module {} The module.\n             * @param name {string} The plugin name.\n             * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n             */\n            Plugin.isUsed = function(module, name) {\n              return module.used.indexOf(name) > -1;\n            };\n\n            /**\n             * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n             * If `plugin.for` is not specified then it is assumed to be applicable.\n             * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n             * @method isFor\n             * @param plugin {} The plugin.\n             * @param module {} The module.\n             * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n             */\n            Plugin.isFor = function(plugin, module) {\n              var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n              return (\n                !plugin.for ||\n                (module.name === parsed.name &&\n                  Plugin.versionSatisfies(module.version, parsed.range))\n              );\n            };\n\n            /**\n             * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n             * For installing plugins on `Matter` see the convenience function `Matter.use`.\n             * Plugins may be specified either by their name or a reference to the plugin object.\n             * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n             * Order is important, a topological sort is performed to find the best resulting order of installation.\n             * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n             * This function logs the resulting status of each dependency in the console, along with any warnings.\n             * - A green tick ✅ indicates a dependency was resolved and installed.\n             * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n             * - A red cross ❌ indicates a dependency could not be resolved.\n             * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n             * @method use\n             * @param module {} The module install plugins on.\n             * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n             */\n            Plugin.use = function(module, plugins) {\n              module.uses = (module.uses || []).concat(plugins || []);\n\n              if (module.uses.length === 0) {\n                Common.warn(\n                  'Plugin.use:',\n                  Plugin.toString(module),\n                  'does not specify any dependencies to install.'\n                );\n                return;\n              }\n\n              var dependencies = Plugin.dependencies(module),\n                sortedDependencies = Common.topologicalSort(dependencies),\n                status = [];\n\n              for (var i = 0; i < sortedDependencies.length; i += 1) {\n                if (sortedDependencies[i] === module.name) {\n                  continue;\n                }\n\n                var plugin = Plugin.resolve(sortedDependencies[i]);\n\n                if (!plugin) {\n                  status.push('❌ ' + sortedDependencies[i]);\n                  continue;\n                }\n\n                if (Plugin.isUsed(module, plugin.name)) {\n                  continue;\n                }\n\n                if (!Plugin.isFor(plugin, module)) {\n                  Common.warn(\n                    'Plugin.use:',\n                    Plugin.toString(plugin),\n                    'is for',\n                    plugin.for,\n                    'but installed on',\n                    Plugin.toString(module) + '.'\n                  );\n                  plugin._warned = true;\n                }\n\n                if (plugin.install) {\n                  plugin.install(module);\n                } else {\n                  Common.warn(\n                    'Plugin.use:',\n                    Plugin.toString(plugin),\n                    'does not specify an install function.'\n                  );\n                  plugin._warned = true;\n                }\n\n                if (plugin._warned) {\n                  status.push('🔶 ' + Plugin.toString(plugin));\n                  delete plugin._warned;\n                } else {\n                  status.push('✅ ' + Plugin.toString(plugin));\n                }\n\n                module.used.push(plugin.name);\n              }\n\n              if (status.length > 0) {\n                Common.info(status.join('  '));\n              }\n            };\n\n            /**\n             * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n             * @method dependencies\n             * @param module {} The module.\n             * @return {object} A dependency graph.\n             */\n            Plugin.dependencies = function(module, tracked) {\n              var parsedBase = Plugin.dependencyParse(module),\n                name = parsedBase.name;\n\n              tracked = tracked || {};\n\n              if (name in tracked) {\n                return;\n              }\n\n              module = Plugin.resolve(module) || module;\n\n              tracked[name] = Common.map(module.uses || [], function(\n                dependency\n              ) {\n                if (Plugin.isPlugin(dependency)) {\n                  Plugin.register(dependency);\n                }\n\n                var parsed = Plugin.dependencyParse(dependency),\n                  resolved = Plugin.resolve(dependency);\n\n                if (\n                  resolved &&\n                  !Plugin.versionSatisfies(resolved.version, parsed.range)\n                ) {\n                  Common.warn(\n                    'Plugin.dependencies:',\n                    Plugin.toString(resolved),\n                    'does not satisfy',\n                    Plugin.toString(parsed),\n                    'used by',\n                    Plugin.toString(parsedBase) + '.'\n                  );\n\n                  resolved._warned = true;\n                  module._warned = true;\n                } else if (!resolved) {\n                  Common.warn(\n                    'Plugin.dependencies:',\n                    Plugin.toString(dependency),\n                    'used by',\n                    Plugin.toString(parsedBase),\n                    'could not be resolved.'\n                  );\n\n                  module._warned = true;\n                }\n\n                return parsed.name;\n              });\n\n              for (var i = 0; i < tracked[name].length; i += 1) {\n                Plugin.dependencies(tracked[name][i], tracked);\n              }\n\n              return tracked;\n            };\n\n            /**\n             * Parses a dependency string into its components.\n             * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n             * See documentation for `Plugin.versionParse` for a description of the format.\n             * This function can also handle dependencies that are already resolved (e.g. a module object).\n             * @method dependencyParse\n             * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n             * @return {object} The dependency parsed into its components.\n             */\n            Plugin.dependencyParse = function(dependency) {\n              if (Common.isString(dependency)) {\n                var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n                if (!pattern.test(dependency)) {\n                  Common.warn(\n                    'Plugin.dependencyParse:',\n                    dependency,\n                    'is not a valid dependency string.'\n                  );\n                }\n\n                return {\n                  name: dependency.split('@')[0],\n                  range: dependency.split('@')[1] || '*',\n                };\n              }\n\n              return {\n                name: dependency.name,\n                range: dependency.range || dependency.version,\n              };\n            };\n\n            /**\n             * Parses a version string into its components.\n             * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n             * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n             * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n             * Only the following range types are supported:\n             * - Tilde ranges e.g. `~1.2.3`\n             * - Caret ranges e.g. `^1.2.3`\n             * - Exact version e.g. `1.2.3`\n             * - Any version `*`\n             * @method versionParse\n             * @param range {string} The version string.\n             * @return {object} The version range parsed into its components.\n             */\n            Plugin.versionParse = function(range) {\n              var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n              if (!pattern.test(range)) {\n                Common.warn(\n                  'Plugin.versionParse:',\n                  range,\n                  'is not a valid version or range.'\n                );\n              }\n\n              var identifiers = range.split('-');\n              range = identifiers[0];\n\n              var isRange = isNaN(Number(range[0])),\n                version = isRange ? range.substr(1) : range,\n                parts = Common.map(version.split('.'), function(part) {\n                  return Number(part);\n                });\n\n              return {\n                isRange: isRange,\n                version: version,\n                range: range,\n                operator: isRange ? range[0] : '',\n                parts: parts,\n                prerelease: identifiers[1],\n                number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2],\n              };\n            };\n\n            /**\n             * Returns `true` if `version` satisfies the given `range`.\n             * See documentation for `Plugin.versionParse` for a description of the format.\n             * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n             * @method versionSatisfies\n             * @param version {string} The version string.\n             * @param range {string} The range string.\n             * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n             */\n            Plugin.versionSatisfies = function(version, range) {\n              range = range || '*';\n\n              var rangeParsed = Plugin.versionParse(range),\n                rangeParts = rangeParsed.parts,\n                versionParsed = Plugin.versionParse(version),\n                versionParts = versionParsed.parts;\n\n              if (rangeParsed.isRange) {\n                if (rangeParsed.operator === '*' || version === '*') {\n                  return true;\n                }\n\n                if (rangeParsed.operator === '~') {\n                  return (\n                    versionParts[0] === rangeParts[0] &&\n                    versionParts[1] === rangeParts[1] &&\n                    versionParts[2] >= rangeParts[2]\n                  );\n                }\n\n                if (rangeParsed.operator === '^') {\n                  if (rangeParts[0] > 0) {\n                    return (\n                      versionParts[0] === rangeParts[0] &&\n                      versionParsed.number >= rangeParsed.number\n                    );\n                  }\n\n                  if (rangeParts[1] > 0) {\n                    return (\n                      versionParts[1] === rangeParts[1] &&\n                      versionParts[2] >= rangeParts[2]\n                    );\n                  }\n\n                  return versionParts[2] === rangeParts[2];\n                }\n              }\n\n              return version === range || version === '*';\n            };\n          })();\n        },\n        { './Common': 14 },\n      ],\n      21: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Runner` module is an optional utility which provides a game loop,\n           * that handles continuously updating a `Matter.Engine` for you within a browser.\n           * It is intended for development and debugging purposes, but may also be suitable for simple games.\n           * If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n           * Instead just call `Engine.update(engine, delta)` in your own loop.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Runner\n           */\n\n          var Runner = {};\n\n          module.exports = Runner;\n\n          var Events = _dereq_('./Events');\n          var Engine = _dereq_('./Engine');\n          var Common = _dereq_('./Common');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame;\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            if (!_requestAnimationFrame) {\n              var _frameTimeout;\n\n              _requestAnimationFrame = function(callback) {\n                _frameTimeout = setTimeout(function() {\n                  callback(Common.now());\n                }, 1000 / 60);\n              };\n\n              _cancelAnimationFrame = function() {\n                clearTimeout(_frameTimeout);\n              };\n            }\n\n            /**\n             * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * @method create\n             * @param {} options\n             */\n            Runner.create = function(options) {\n              var defaults = {\n                fps: 60,\n                correction: 1,\n                deltaSampleSize: 60,\n                counterTimestamp: 0,\n                frameCounter: 0,\n                deltaHistory: [],\n                timePrev: null,\n                timeScalePrev: 1,\n                frameRequestId: null,\n                isFixed: false,\n                enabled: true,\n              };\n\n              var runner = Common.extend(defaults, options);\n\n              runner.delta = runner.delta || 1000 / runner.fps;\n              runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n              runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n              runner.fps = 1000 / runner.delta;\n\n              return runner;\n            };\n\n            /**\n             * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n             * @method run\n             * @param {engine} engine\n             */\n            Runner.run = function(runner, engine) {\n              // create runner if engine is first argument\n              if (typeof runner.positionIterations !== 'undefined') {\n                engine = runner;\n                runner = Runner.create();\n              }\n\n              (function render(time) {\n                runner.frameRequestId = _requestAnimationFrame(render);\n\n                if (time && runner.enabled) {\n                  Runner.tick(runner, engine, time);\n                }\n              })();\n\n              return runner;\n            };\n\n            /**\n             * A game loop utility that updates the engine and renderer by one step (a 'tick').\n             * Features delta smoothing, time correction and fixed or dynamic timing.\n             * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n             * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n             * @method tick\n             * @param {runner} runner\n             * @param {engine} engine\n             * @param {number} time\n             */\n            Runner.tick = function(runner, engine, time) {\n              var timing = engine.timing,\n                correction = 1,\n                delta;\n\n              // create an event object\n              var event = {\n                timestamp: timing.timestamp,\n              };\n\n              Events.trigger(runner, 'beforeTick', event);\n              Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n              if (runner.isFixed) {\n                // fixed timestep\n                delta = runner.delta;\n              } else {\n                // dynamic timestep based on wall clock between calls\n                delta = time - runner.timePrev || runner.delta;\n                runner.timePrev = time;\n\n                // optimistically filter delta over a few frames, to improve stability\n                runner.deltaHistory.push(delta);\n                runner.deltaHistory = runner.deltaHistory.slice(\n                  -runner.deltaSampleSize\n                );\n                delta = Math.min.apply(null, runner.deltaHistory);\n\n                // limit delta\n                delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n                delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n                // correction for delta\n                correction = delta / runner.delta;\n\n                // update engine timing object\n                runner.delta = delta;\n              }\n\n              // time correction for time scaling\n              if (runner.timeScalePrev !== 0)\n                correction *= timing.timeScale / runner.timeScalePrev;\n\n              if (timing.timeScale === 0) correction = 0;\n\n              runner.timeScalePrev = timing.timeScale;\n              runner.correction = correction;\n\n              // fps counter\n              runner.frameCounter += 1;\n              if (time - runner.counterTimestamp >= 1000) {\n                runner.fps =\n                  runner.frameCounter *\n                  ((time - runner.counterTimestamp) / 1000);\n                runner.counterTimestamp = time;\n                runner.frameCounter = 0;\n              }\n\n              Events.trigger(runner, 'tick', event);\n              Events.trigger(engine, 'tick', event); // @deprecated\n\n              // if world has been modified, clear the render scene graph\n              if (\n                engine.world.isModified &&\n                engine.render &&\n                engine.render.controller &&\n                engine.render.controller.clear\n              ) {\n                engine.render.controller.clear(engine.render); // @deprecated\n              }\n\n              // update\n              Events.trigger(runner, 'beforeUpdate', event);\n              Engine.update(engine, delta, correction);\n              Events.trigger(runner, 'afterUpdate', event);\n\n              // render\n              // @deprecated\n              if (engine.render && engine.render.controller) {\n                Events.trigger(runner, 'beforeRender', event);\n                Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n                engine.render.controller.world(engine.render);\n\n                Events.trigger(runner, 'afterRender', event);\n                Events.trigger(engine, 'afterRender', event); // @deprecated\n              }\n\n              Events.trigger(runner, 'afterTick', event);\n              Events.trigger(engine, 'afterTick', event); // @deprecated\n            };\n\n            /**\n             * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n             * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n             * @method stop\n             * @param {runner} runner\n             */\n            Runner.stop = function(runner) {\n              _cancelAnimationFrame(runner.frameRequestId);\n            };\n\n            /**\n             * Alias for `Runner.run`.\n             * @method start\n             * @param {runner} runner\n             * @param {engine} engine\n             */\n            Runner.start = function(runner, engine) {\n              Runner.run(runner, engine);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired at the start of a tick, before any updates to the engine or timing\n             *\n             * @event beforeTick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine timing updated, but just before update\n             *\n             * @event tick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired at the end of a tick, after engine update and after rendering\n             *\n             * @event afterTick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired before update\n             *\n             * @event beforeUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after update\n             *\n             * @event afterUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired before rendering\n             *\n             * @event beforeRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             * @deprecated\n             */\n\n            /**\n             * Fired after rendering\n             *\n             * @event afterRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             * @deprecated\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A flag that specifies whether the runner is running or not.\n             *\n             * @property enabled\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n             * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n             * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n             *\n             * @property isFixed\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Number` that specifies the time step between updates in milliseconds.\n             * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n             * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n             *\n             * @property delta\n             * @type number\n             * @default 1000 / 60\n             */\n          })();\n        },\n        { './Common': 14, './Engine': 15, './Events': 16 },\n      ],\n      22: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n           *\n           * @class Sleeping\n           */\n\n          var Sleeping = {};\n\n          module.exports = Sleeping;\n\n          var Events = _dereq_('./Events');\n\n          (function() {\n            Sleeping._motionWakeThreshold = 0.18;\n            Sleeping._motionSleepThreshold = 0.08;\n            Sleeping._minBias = 0.9;\n\n            /**\n             * Puts bodies to sleep or wakes them up depending on their motion.\n             * @method update\n             * @param {body[]} bodies\n             * @param {number} timeScale\n             */\n            Sleeping.update = function(bodies, timeScale) {\n              var timeFactor = timeScale * timeScale * timeScale;\n\n              // update bodies sleeping status\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  motion =\n                    body.speed * body.speed +\n                    body.angularSpeed * body.angularSpeed;\n\n                // wake up bodies if they have a force applied\n                if (body.force.x !== 0 || body.force.y !== 0) {\n                  Sleeping.set(body, false);\n                  continue;\n                }\n\n                var minMotion = Math.min(body.motion, motion),\n                  maxMotion = Math.max(body.motion, motion);\n\n                // biased average motion estimation between frames\n                body.motion =\n                  Sleeping._minBias * minMotion +\n                  (1 - Sleeping._minBias) * maxMotion;\n\n                if (\n                  body.sleepThreshold > 0 &&\n                  body.motion < Sleeping._motionSleepThreshold * timeFactor\n                ) {\n                  body.sleepCounter += 1;\n\n                  if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n                } else if (body.sleepCounter > 0) {\n                  body.sleepCounter -= 1;\n                }\n              }\n            };\n\n            /**\n             * Given a set of colliding pairs, wakes the sleeping bodies involved.\n             * @method afterCollisions\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Sleeping.afterCollisions = function(pairs, timeScale) {\n              var timeFactor = timeScale * timeScale * timeScale;\n\n              // wake up bodies involved in collisions\n              for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n\n                // don't wake inactive pairs\n                if (!pair.isActive) continue;\n\n                var collision = pair.collision,\n                  bodyA = collision.bodyA.parent,\n                  bodyB = collision.bodyB.parent;\n\n                // don't wake if at least one body is static\n                if (\n                  (bodyA.isSleeping && bodyB.isSleeping) ||\n                  bodyA.isStatic ||\n                  bodyB.isStatic\n                )\n                  continue;\n\n                if (bodyA.isSleeping || bodyB.isSleeping) {\n                  var sleepingBody =\n                      bodyA.isSleeping && !bodyA.isStatic ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                  if (\n                    !sleepingBody.isStatic &&\n                    movingBody.motion >\n                      Sleeping._motionWakeThreshold * timeFactor\n                  ) {\n                    Sleeping.set(sleepingBody, false);\n                  }\n                }\n              }\n            };\n\n            /**\n             * Set a body as sleeping or awake.\n             * @method set\n             * @param {body} body\n             * @param {boolean} isSleeping\n             */\n            Sleeping.set = function(body, isSleeping) {\n              var wasSleeping = body.isSleeping;\n\n              if (isSleeping) {\n                body.isSleeping = true;\n                body.sleepCounter = body.sleepThreshold;\n\n                body.positionImpulse.x = 0;\n                body.positionImpulse.y = 0;\n\n                body.positionPrev.x = body.position.x;\n                body.positionPrev.y = body.position.y;\n\n                body.anglePrev = body.angle;\n                body.speed = 0;\n                body.angularSpeed = 0;\n                body.motion = 0;\n\n                if (!wasSleeping) {\n                  Events.trigger(body, 'sleepStart');\n                }\n              } else {\n                body.isSleeping = false;\n                body.sleepCounter = 0;\n\n                if (wasSleeping) {\n                  Events.trigger(body, 'sleepEnd');\n                }\n              }\n            };\n          })();\n        },\n        { './Events': 16 },\n      ],\n      23: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Bodies` module contains factory methods for creating rigid body models\n           * with commonly used body configurations (such as rectangles, circles and other polygons).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Bodies\n           */\n\n          // TODO: true circle bodies\n\n          var Bodies = {};\n\n          module.exports = Bodies;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Common = _dereq_('../core/Common');\n          var Body = _dereq_('../body/Body');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Vector = _dereq_('../geometry/Vector');\n          var decomp;\n\n          (function() {\n            /**\n             * Creates a new rigid body model with a rectangle hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method rectangle\n             * @param {number} x\n             * @param {number} y\n             * @param {number} width\n             * @param {number} height\n             * @param {object} [options]\n             * @return {body} A new rectangle body\n             */\n            Bodies.rectangle = function(x, y, width, height, options) {\n              options = options || {};\n\n              var rectangle = {\n                label: 'Rectangle Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(\n                  'L 0 0 L ' +\n                    width +\n                    ' 0 L ' +\n                    width +\n                    ' ' +\n                    height +\n                    ' L 0 ' +\n                    height\n                ),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                rectangle.vertices = Vertices.chamfer(\n                  rectangle.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, rectangle, options));\n            };\n\n            /**\n             * Creates a new rigid body model with a trapezoid hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method trapezoid\n             * @param {number} x\n             * @param {number} y\n             * @param {number} width\n             * @param {number} height\n             * @param {number} slope\n             * @param {object} [options]\n             * @return {body} A new trapezoid body\n             */\n            Bodies.trapezoid = function(x, y, width, height, slope, options) {\n              options = options || {};\n\n              slope *= 0.5;\n              var roof = (1 - slope * 2) * width;\n\n              var x1 = width * slope,\n                x2 = x1 + roof,\n                x3 = x2 + x1,\n                verticesPath;\n\n              if (slope < 0.5) {\n                verticesPath =\n                  'L 0 0 L ' +\n                  x1 +\n                  ' ' +\n                  -height +\n                  ' L ' +\n                  x2 +\n                  ' ' +\n                  -height +\n                  ' L ' +\n                  x3 +\n                  ' 0';\n              } else {\n                verticesPath =\n                  'L 0 0 L ' + x2 + ' ' + -height + ' L ' + x3 + ' 0';\n              }\n\n              var trapezoid = {\n                label: 'Trapezoid Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(verticesPath),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                trapezoid.vertices = Vertices.chamfer(\n                  trapezoid.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, trapezoid, options));\n            };\n\n            /**\n             * Creates a new rigid body model with a circle hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method circle\n             * @param {number} x\n             * @param {number} y\n             * @param {number} radius\n             * @param {object} [options]\n             * @param {number} [maxSides]\n             * @return {body} A new circle body\n             */\n            Bodies.circle = function(x, y, radius, options, maxSides) {\n              options = options || {};\n\n              var circle = {\n                label: 'Circle Body',\n                circleRadius: radius,\n              };\n\n              // approximate circles with polygons until true circles implemented in SAT\n              maxSides = maxSides || 25;\n              var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n              // optimisation: always use even number of sides (half the number of unique axes)\n              if (sides % 2 === 1) sides += 1;\n\n              return Bodies.polygon(\n                x,\n                y,\n                sides,\n                radius,\n                Common.extend({}, circle, options)\n              );\n            };\n\n            /**\n             * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method polygon\n             * @param {number} x\n             * @param {number} y\n             * @param {number} sides\n             * @param {number} radius\n             * @param {object} [options]\n             * @return {body} A new regular polygon body\n             */\n            Bodies.polygon = function(x, y, sides, radius, options) {\n              options = options || {};\n\n              if (sides < 3) return Bodies.circle(x, y, radius, options);\n\n              var theta = 2 * Math.PI / sides,\n                path = '',\n                offset = theta * 0.5;\n\n              for (var i = 0; i < sides; i += 1) {\n                var angle = offset + i * theta,\n                  xx = Math.cos(angle) * radius,\n                  yy = Math.sin(angle) * radius;\n\n                path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n              }\n\n              var polygon = {\n                label: 'Polygon Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(path),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                polygon.vertices = Vertices.chamfer(\n                  polygon.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, polygon, options));\n            };\n\n            /**\n             * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n             * If the vertices are convex, they will pass through as supplied.\n             * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n             * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n             * By default the decomposition will discard collinear edges (to improve performance).\n             * It can also optionally discard any parts that have an area less than `minimumArea`.\n             * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n             * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method fromVertices\n             * @param {number} x\n             * @param {number} y\n             * @param [[vector]] vertexSets\n             * @param {object} [options]\n             * @param {bool} [flagInternal=false]\n             * @param {number} [removeCollinear=0.01]\n             * @param {number} [minimumArea=10]\n             * @return {body}\n             */\n            Bodies.fromVertices = function(\n              x,\n              y,\n              vertexSets,\n              options,\n              flagInternal,\n              removeCollinear,\n              minimumArea\n            ) {\n              if (!decomp) {\n                decomp = Common._requireGlobal('decomp', 'poly-decomp');\n              }\n\n              var body, parts, isConvex, vertices, i, j, k, v, z;\n\n              options = options || {};\n              parts = [];\n\n              flagInternal =\n                typeof flagInternal !== 'undefined' ? flagInternal : false;\n              removeCollinear =\n                typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n              minimumArea =\n                typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n              if (!decomp) {\n                Common.warn(\n                  'Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.'\n                );\n              }\n\n              // ensure vertexSets is an array of arrays\n              if (!Common.isArray(vertexSets[0])) {\n                vertexSets = [vertexSets];\n              }\n\n              for (v = 0; v < vertexSets.length; v += 1) {\n                vertices = vertexSets[v];\n                isConvex = Vertices.isConvex(vertices);\n\n                if (isConvex || !decomp) {\n                  if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                  } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                  }\n\n                  parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices,\n                  });\n                } else {\n                  // initialise a decomposition\n                  var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                  });\n\n                  // vertices are concave and simple, we can decompose into parts\n                  decomp.makeCCW(concave);\n                  if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                  // use the quick decomposition algorithm (Bayazit)\n                  var decomposed = decomp.quickDecomp(concave);\n\n                  // for each decomposed chunk\n                  for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                      return {\n                        x: vertices[0],\n                        y: vertices[1],\n                      };\n                    });\n\n                    // skip small chunks\n                    if (\n                      minimumArea > 0 &&\n                      Vertices.area(chunkVertices) < minimumArea\n                    )\n                      continue;\n\n                    // create a compound part\n                    parts.push({\n                      position: Vertices.centre(chunkVertices),\n                      vertices: chunkVertices,\n                    });\n                  }\n                }\n              }\n\n              // create body parts\n              for (i = 0; i < parts.length; i++) {\n                parts[i] = Body.create(Common.extend(parts[i], options));\n              }\n\n              // flag internal edges (coincident part edges)\n              if (flagInternal) {\n                var coincident_max_dist = 5;\n\n                for (i = 0; i < parts.length; i++) {\n                  var partA = parts[i];\n\n                  for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                      var pav = partA.vertices,\n                        pbv = partB.vertices;\n\n                      // iterate vertices of both parts\n                      for (k = 0; k < partA.vertices.length; k++) {\n                        for (z = 0; z < partB.vertices.length; z++) {\n                          // find distances between the vertices\n                          var da = Vector.magnitudeSquared(\n                              Vector.sub(pav[(k + 1) % pav.length], pbv[z])\n                            ),\n                            db = Vector.magnitudeSquared(\n                              Vector.sub(pav[k], pbv[(z + 1) % pbv.length])\n                            );\n\n                          // if both vertices are very close, consider the edge concident (internal)\n                          if (\n                            da < coincident_max_dist &&\n                            db < coincident_max_dist\n                          ) {\n                            pav[k].isInternal = true;\n                            pbv[z].isInternal = true;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (parts.length > 1) {\n                // create the parent body to be returned, that contains generated compound parts\n                body = Body.create(\n                  Common.extend({ parts: parts.slice(0) }, options)\n                );\n                Body.setPosition(body, { x: x, y: y });\n\n                return body;\n              } else {\n                return parts[0];\n              }\n            };\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../core/Common': 14,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      24: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Composites` module contains factory methods for creating composite bodies\n           * with commonly used configurations (such as stacks and chains).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Composites\n           */\n\n          var Composites = {};\n\n          module.exports = Composites;\n\n          var Composite = _dereq_('../body/Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('../core/Common');\n          var Body = _dereq_('../body/Body');\n          var Bodies = _dereq_('./Bodies');\n\n          (function() {\n            /**\n             * Create a new composite containing bodies created in the callback in a grid arrangement.\n             * This function uses the body's bounds to prevent overlaps.\n             * @method stack\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {function} callback\n             * @return {composite} A new composite containing objects created in the callback\n             */\n            Composites.stack = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              callback\n            ) {\n              var stack = Composite.create({ label: 'Stack' }),\n                x = xx,\n                y = yy,\n                lastBody,\n                i = 0;\n\n              for (var row = 0; row < rows; row++) {\n                var maxHeight = 0;\n\n                for (var column = 0; column < columns; column++) {\n                  var body = callback(x, y, column, row, lastBody, i);\n\n                  if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                      bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight) maxHeight = bodyHeight;\n\n                    Body.translate(body, {\n                      x: bodyWidth * 0.5,\n                      y: bodyHeight * 0.5,\n                    });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                  } else {\n                    x += columnGap;\n                  }\n                }\n\n                y += maxHeight + rowGap;\n                x = xx;\n              }\n\n              return stack;\n            };\n\n            /**\n             * Chains all bodies in the given composite together using constraints.\n             * @method chain\n             * @param {composite} composite\n             * @param {number} xOffsetA\n             * @param {number} yOffsetA\n             * @param {number} xOffsetB\n             * @param {number} yOffsetB\n             * @param {object} options\n             * @return {composite} A new composite containing objects chained together with constraints\n             */\n            Composites.chain = function(\n              composite,\n              xOffsetA,\n              yOffsetA,\n              xOffsetB,\n              yOffsetB,\n              options\n            ) {\n              var bodies = composite.bodies;\n\n              for (var i = 1; i < bodies.length; i++) {\n                var bodyA = bodies[i - 1],\n                  bodyB = bodies[i],\n                  bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                  bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                  bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                  bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n                var defaults = {\n                  bodyA: bodyA,\n                  pointA: {\n                    x: bodyAWidth * xOffsetA,\n                    y: bodyAHeight * yOffsetA,\n                  },\n                  bodyB: bodyB,\n                  pointB: {\n                    x: bodyBWidth * xOffsetB,\n                    y: bodyBHeight * yOffsetB,\n                  },\n                };\n\n                var constraint = Common.extend(defaults, options);\n\n                Composite.addConstraint(\n                  composite,\n                  Constraint.create(constraint)\n                );\n              }\n\n              composite.label += ' Chain';\n\n              return composite;\n            };\n\n            /**\n             * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n             * @method mesh\n             * @param {composite} composite\n             * @param {number} columns\n             * @param {number} rows\n             * @param {boolean} crossBrace\n             * @param {object} options\n             * @return {composite} The composite containing objects meshed together with constraints\n             */\n            Composites.mesh = function(\n              composite,\n              columns,\n              rows,\n              crossBrace,\n              options\n            ) {\n              var bodies = composite.bodies,\n                row,\n                col,\n                bodyA,\n                bodyB,\n                bodyC;\n\n              for (row = 0; row < rows; row++) {\n                for (col = 1; col < columns; col++) {\n                  bodyA = bodies[col - 1 + row * columns];\n                  bodyB = bodies[col + row * columns];\n                  Composite.addConstraint(\n                    composite,\n                    Constraint.create(\n                      Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)\n                    )\n                  );\n                }\n\n                if (row > 0) {\n                  for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + (row - 1) * columns];\n                    bodyB = bodies[col + row * columns];\n                    Composite.addConstraint(\n                      composite,\n                      Constraint.create(\n                        Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)\n                      )\n                    );\n\n                    if (crossBrace && col > 0) {\n                      bodyC = bodies[col - 1 + (row - 1) * columns];\n                      Composite.addConstraint(\n                        composite,\n                        Constraint.create(\n                          Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)\n                        )\n                      );\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                      bodyC = bodies[col + 1 + (row - 1) * columns];\n                      Composite.addConstraint(\n                        composite,\n                        Constraint.create(\n                          Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)\n                        )\n                      );\n                    }\n                  }\n                }\n              }\n\n              composite.label += ' Mesh';\n\n              return composite;\n            };\n\n            /**\n             * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n             * This function uses the body's bounds to prevent overlaps.\n             * @method pyramid\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {function} callback\n             * @return {composite} A new composite containing objects created in the callback\n             */\n            Composites.pyramid = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              callback\n            ) {\n              return Composites.stack(\n                xx,\n                yy,\n                columns,\n                rows,\n                columnGap,\n                rowGap,\n                function(x, y, column, row, lastBody, i) {\n                  var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                    lastBodyWidth = lastBody\n                      ? lastBody.bounds.max.x - lastBody.bounds.min.x\n                      : 0;\n\n                  if (row > actualRows) return;\n\n                  // reverse row order\n                  row = actualRows - row;\n\n                  var start = row,\n                    end = columns - 1 - row;\n\n                  if (column < start || column > end) return;\n\n                  // retroactively fix the first body's position, since width was unknown\n                  if (i === 1) {\n                    Body.translate(lastBody, {\n                      x:\n                        (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth,\n                      y: 0,\n                    });\n                  }\n\n                  var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n                  return callback(\n                    xx + xOffset + column * columnGap,\n                    y,\n                    column,\n                    row,\n                    lastBody,\n                    i\n                  );\n                }\n              );\n            };\n\n            /**\n             * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n             * @method newtonsCradle\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} number\n             * @param {number} size\n             * @param {number} length\n             * @return {composite} A new composite newtonsCradle body\n             */\n            Composites.newtonsCradle = function(xx, yy, number, size, length) {\n              var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n              for (var i = 0; i < number; i++) {\n                var separation = 1.9,\n                  circle = Bodies.circle(\n                    xx + i * (size * separation),\n                    yy + length,\n                    size,\n                    {\n                      inertia: Infinity,\n                      restitution: 1,\n                      friction: 0,\n                      frictionAir: 0.0001,\n                      slop: 1,\n                    }\n                  ),\n                  constraint = Constraint.create({\n                    pointA: { x: xx + i * (size * separation), y: yy },\n                    bodyB: circle,\n                  });\n\n                Composite.addBody(newtonsCradle, circle);\n                Composite.addConstraint(newtonsCradle, constraint);\n              }\n\n              return newtonsCradle;\n            };\n\n            /**\n             * Creates a composite with simple car setup of bodies and constraints.\n             * @method car\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} width\n             * @param {number} height\n             * @param {number} wheelSize\n             * @return {composite} A new composite car body\n             */\n            Composites.car = function(xx, yy, width, height, wheelSize) {\n              var group = Body.nextGroup(true),\n                wheelBase = 20,\n                wheelAOffset = -width * 0.5 + wheelBase,\n                wheelBOffset = width * 0.5 - wheelBase,\n                wheelYOffset = 0;\n\n              var car = Composite.create({ label: 'Car' }),\n                body = Bodies.rectangle(xx, yy, width, height, {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  chamfer: {\n                    radius: height * 0.5,\n                  },\n                  density: 0.0002,\n                });\n\n              var wheelA = Bodies.circle(\n                xx + wheelAOffset,\n                yy + wheelYOffset,\n                wheelSize,\n                {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  friction: 0.8,\n                }\n              );\n\n              var wheelB = Bodies.circle(\n                xx + wheelBOffset,\n                yy + wheelYOffset,\n                wheelSize,\n                {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  friction: 0.8,\n                }\n              );\n\n              var axelA = Constraint.create({\n                bodyB: body,\n                pointB: { x: wheelAOffset, y: wheelYOffset },\n                bodyA: wheelA,\n                stiffness: 1,\n                length: 0,\n              });\n\n              var axelB = Constraint.create({\n                bodyB: body,\n                pointB: { x: wheelBOffset, y: wheelYOffset },\n                bodyA: wheelB,\n                stiffness: 1,\n                length: 0,\n              });\n\n              Composite.addBody(car, body);\n              Composite.addBody(car, wheelA);\n              Composite.addBody(car, wheelB);\n              Composite.addConstraint(car, axelA);\n              Composite.addConstraint(car, axelB);\n\n              return car;\n            };\n\n            /**\n             * Creates a simple soft body like object.\n             * @method softBody\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {boolean} crossBrace\n             * @param {number} particleRadius\n             * @param {} particleOptions\n             * @param {} constraintOptions\n             * @return {composite} A new composite softBody\n             */\n            Composites.softBody = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              crossBrace,\n              particleRadius,\n              particleOptions,\n              constraintOptions\n            ) {\n              particleOptions = Common.extend(\n                { inertia: Infinity },\n                particleOptions\n              );\n              constraintOptions = Common.extend(\n                { stiffness: 0.2, render: { type: 'line', anchors: false } },\n                constraintOptions\n              );\n\n              var softBody = Composites.stack(\n                xx,\n                yy,\n                columns,\n                rows,\n                columnGap,\n                rowGap,\n                function(x, y) {\n                  return Bodies.circle(x, y, particleRadius, particleOptions);\n                }\n              );\n\n              Composites.mesh(\n                softBody,\n                columns,\n                rows,\n                crossBrace,\n                constraintOptions\n              );\n\n              softBody.label = 'Soft Body';\n\n              return softBody;\n            };\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../constraint/Constraint': 12,\n          '../core/Common': 14,\n          './Bodies': 23,\n        },\n      ],\n      25: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n           *\n           * @class Axes\n           */\n\n          var Axes = {};\n\n          module.exports = Axes;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new set of axes from the given vertices.\n             * @method fromVertices\n             * @param {vertices} vertices\n             * @return {axes} A new axes from the given vertices\n             */\n            Axes.fromVertices = function(vertices) {\n              var axes = {};\n\n              // find the unique axes, using edge normal gradients\n              for (var i = 0; i < vertices.length; i++) {\n                var j = (i + 1) % vertices.length,\n                  normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x,\n                  }),\n                  gradient = normal.y === 0 ? Infinity : normal.x / normal.y;\n\n                // limit precision\n                gradient = gradient.toFixed(3).toString();\n                axes[gradient] = normal;\n              }\n\n              return Common.values(axes);\n            };\n\n            /**\n             * Rotates a set of axes by the given angle.\n             * @method rotate\n             * @param {axes} axes\n             * @param {number} angle\n             */\n            Axes.rotate = function(axes, angle) {\n              if (angle === 0) return;\n\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n\n              for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i],\n                  xx;\n                xx = axis.x * cos - axis.y * sin;\n                axis.y = axis.x * sin + axis.y * cos;\n                axis.x = xx;\n              }\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Vector': 28 },\n      ],\n      26: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n           *\n           * @class Bounds\n           */\n\n          var Bounds = {};\n\n          module.exports = Bounds;\n\n          (function() {\n            /**\n             * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n             * @method create\n             * @param {vertices} vertices\n             * @return {bounds} A new bounds object\n             */\n            Bounds.create = function(vertices) {\n              var bounds = {\n                min: { x: 0, y: 0 },\n                max: { x: 0, y: 0 },\n              };\n\n              if (vertices) Bounds.update(bounds, vertices);\n\n              return bounds;\n            };\n\n            /**\n             * Updates bounds using the given vertices and extends the bounds given a velocity.\n             * @method update\n             * @param {bounds} bounds\n             * @param {vertices} vertices\n             * @param {vector} velocity\n             */\n            Bounds.update = function(bounds, vertices, velocity) {\n              bounds.min.x = Infinity;\n              bounds.max.x = -Infinity;\n              bounds.min.y = Infinity;\n              bounds.max.y = -Infinity;\n\n              for (var i = 0; i < vertices.length; i++) {\n                var vertex = vertices[i];\n                if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n                if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n                if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n                if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n              }\n\n              if (velocity) {\n                if (velocity.x > 0) {\n                  bounds.max.x += velocity.x;\n                } else {\n                  bounds.min.x += velocity.x;\n                }\n\n                if (velocity.y > 0) {\n                  bounds.max.y += velocity.y;\n                } else {\n                  bounds.min.y += velocity.y;\n                }\n              }\n            };\n\n            /**\n             * Returns true if the bounds contains the given point.\n             * @method contains\n             * @param {bounds} bounds\n             * @param {vector} point\n             * @return {boolean} True if the bounds contain the point, otherwise false\n             */\n            Bounds.contains = function(bounds, point) {\n              return (\n                point.x >= bounds.min.x &&\n                point.x <= bounds.max.x &&\n                point.y >= bounds.min.y &&\n                point.y <= bounds.max.y\n              );\n            };\n\n            /**\n             * Returns true if the two bounds intersect.\n             * @method overlaps\n             * @param {bounds} boundsA\n             * @param {bounds} boundsB\n             * @return {boolean} True if the bounds overlap, otherwise false\n             */\n            Bounds.overlaps = function(boundsA, boundsB) {\n              return (\n                boundsA.min.x <= boundsB.max.x &&\n                boundsA.max.x >= boundsB.min.x &&\n                boundsA.max.y >= boundsB.min.y &&\n                boundsA.min.y <= boundsB.max.y\n              );\n            };\n\n            /**\n             * Translates the bounds by the given vector.\n             * @method translate\n             * @param {bounds} bounds\n             * @param {vector} vector\n             */\n            Bounds.translate = function(bounds, vector) {\n              bounds.min.x += vector.x;\n              bounds.max.x += vector.x;\n              bounds.min.y += vector.y;\n              bounds.max.y += vector.y;\n            };\n\n            /**\n             * Shifts the bounds to the given position.\n             * @method shift\n             * @param {bounds} bounds\n             * @param {vector} position\n             */\n            Bounds.shift = function(bounds, position) {\n              var deltaX = bounds.max.x - bounds.min.x,\n                deltaY = bounds.max.y - bounds.min.y;\n\n              bounds.min.x = position.x;\n              bounds.max.x = position.x + deltaX;\n              bounds.min.y = position.y;\n              bounds.max.y = position.y + deltaY;\n            };\n          })();\n        },\n        {},\n      ],\n      27: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n           *\n           * To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Svg\n           */\n\n          var Svg = {};\n\n          module.exports = Svg;\n\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Converts an SVG path into an array of vector points.\n             * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n             * See `Bodies.fromVertices` which provides support for this.\n             * Note that this function is not guaranteed to support complex paths (such as those with holes).\n             * You must load the `pathseg.js` polyfill on newer browsers.\n             * @method pathToVertices\n             * @param {SVGPathElement} path\n             * @param {Number} [sampleLength=15]\n             * @return {Vector[]} points\n             */\n            Svg.pathToVertices = function(path, sampleLength) {\n              if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n                Common.warn(\n                  'Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.'\n                );\n              }\n\n              // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n              var i,\n                il,\n                total,\n                point,\n                segment,\n                segments,\n                segmentsQueue,\n                lastSegment,\n                lastPoint,\n                segmentIndex,\n                points = [],\n                lx,\n                ly,\n                length = 0,\n                x = 0,\n                y = 0;\n\n              sampleLength = sampleLength || 15;\n\n              var addPoint = function(px, py, pathSegType) {\n                // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n                var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n                // when the last point doesn't equal the current point add the current point\n                if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                  if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                  } else {\n                    lx = 0;\n                    ly = 0;\n                  }\n\n                  var point = {\n                    x: lx + px,\n                    y: ly + py,\n                  };\n\n                  // set last point\n                  if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                  }\n\n                  points.push(point);\n\n                  x = lx + px;\n                  y = ly + py;\n                }\n              };\n\n              var addSegmentPoint = function(segment) {\n                var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n                // skip path ends\n                if (segType === 'Z') return;\n\n                // map segment to x and y\n                switch (segType) {\n                  case 'M':\n                  case 'L':\n                  case 'T':\n                  case 'C':\n                  case 'S':\n                  case 'Q':\n                    x = segment.x;\n                    y = segment.y;\n                    break;\n                  case 'H':\n                    x = segment.x;\n                    break;\n                  case 'V':\n                    y = segment.y;\n                    break;\n                }\n\n                addPoint(x, y, segment.pathSegType);\n              };\n\n              // ensure path is absolute\n              Svg._svgPathToAbsolute(path);\n\n              // get total length\n              total = path.getTotalLength();\n\n              // queue segments\n              segments = [];\n              for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n                segments.push(path.pathSegList.getItem(i));\n\n              segmentsQueue = segments.concat();\n\n              // sample through path\n              while (length < total) {\n                // get segment at position\n                segmentIndex = path.getPathSegAtLength(length);\n                segment = segments[segmentIndex];\n\n                // new segment\n                if (segment != lastSegment) {\n                  while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                  lastSegment = segment;\n                }\n\n                // add points in between when curving\n                // TODO: adaptive sampling\n                switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n                  case 'C':\n                  case 'T':\n                  case 'S':\n                  case 'Q':\n                  case 'A':\n                    point = path.getPointAtLength(length);\n                    addPoint(point.x, point.y, 0);\n                    break;\n                }\n\n                // increment by sample value\n                length += sampleLength;\n              }\n\n              // add remaining segments not passed by sampling\n              for (i = 0, il = segmentsQueue.length; i < il; ++i)\n                addSegmentPoint(segmentsQueue[i]);\n\n              return points;\n            };\n\n            Svg._svgPathToAbsolute = function(path) {\n              // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n              // Copyright (c) Gavin Kistner\n              // http://phrogz.net/js/_ReuseLicense.txt\n              // Modifications: tidy formatting and naming\n              var x0,\n                y0,\n                x1,\n                y1,\n                x2,\n                y2,\n                segs = path.pathSegList,\n                x = 0,\n                y = 0,\n                len = segs.numberOfItems;\n\n              for (var i = 0; i < len; ++i) {\n                var seg = segs.getItem(i),\n                  segType = seg.pathSegTypeAsLetter;\n\n                if (/[MLHVCSQTA]/.test(segType)) {\n                  if ('x' in seg) x = seg.x;\n                  if ('y' in seg) y = seg.y;\n                } else {\n                  if ('x1' in seg) x1 = x + seg.x1;\n                  if ('x2' in seg) x2 = x + seg.x2;\n                  if ('y1' in seg) y1 = y + seg.y1;\n                  if ('y2' in seg) y2 = y + seg.y2;\n                  if ('x' in seg) x += seg.x;\n                  if ('y' in seg) y += seg.y;\n\n                  switch (segType) {\n                    case 'm':\n                      segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                      break;\n                    case 'l':\n                      segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                      break;\n                    case 'h':\n                      segs.replaceItem(\n                        path.createSVGPathSegLinetoHorizontalAbs(x),\n                        i\n                      );\n                      break;\n                    case 'v':\n                      segs.replaceItem(\n                        path.createSVGPathSegLinetoVerticalAbs(y),\n                        i\n                      );\n                      break;\n                    case 'c':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoCubicAbs(\n                          x,\n                          y,\n                          x1,\n                          y1,\n                          x2,\n                          y2\n                        ),\n                        i\n                      );\n                      break;\n                    case 's':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoCubicSmoothAbs(\n                          x,\n                          y,\n                          x2,\n                          y2\n                        ),\n                        i\n                      );\n                      break;\n                    case 'q':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1),\n                        i\n                      );\n                      break;\n                    case 't':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y),\n                        i\n                      );\n                      break;\n                    case 'a':\n                      segs.replaceItem(\n                        path.createSVGPathSegArcAbs(\n                          x,\n                          y,\n                          seg.r1,\n                          seg.r2,\n                          seg.angle,\n                          seg.largeArcFlag,\n                          seg.sweepFlag\n                        ),\n                        i\n                      );\n                      break;\n                    case 'z':\n                    case 'Z':\n                      x = x0;\n                      y = y0;\n                      break;\n                  }\n                }\n\n                if (segType == 'M' || segType == 'm') {\n                  x0 = x;\n                  y0 = y;\n                }\n              }\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Bounds': 26 },\n      ],\n      28: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Vector` module contains methods for creating and manipulating vectors.\n           * Vectors are the basis of all the geometry related operations in the engine.\n           * A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Vector\n           */\n\n          // TODO: consider params for reusing vector objects\n\n          var Vector = {};\n\n          module.exports = Vector;\n\n          (function() {\n            /**\n             * Creates a new vector.\n             * @method create\n             * @param {number} x\n             * @param {number} y\n             * @return {vector} A new vector\n             */\n            Vector.create = function(x, y) {\n              return { x: x || 0, y: y || 0 };\n            };\n\n            /**\n             * Returns a new vector with `x` and `y` copied from the given `vector`.\n             * @method clone\n             * @param {vector} vector\n             * @return {vector} A new cloned vector\n             */\n            Vector.clone = function(vector) {\n              return { x: vector.x, y: vector.y };\n            };\n\n            /**\n             * Returns the magnitude (length) of a vector.\n             * @method magnitude\n             * @param {vector} vector\n             * @return {number} The magnitude of the vector\n             */\n            Vector.magnitude = function(vector) {\n              return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n            };\n\n            /**\n             * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n             * @method magnitudeSquared\n             * @param {vector} vector\n             * @return {number} The squared magnitude of the vector\n             */\n            Vector.magnitudeSquared = function(vector) {\n              return vector.x * vector.x + vector.y * vector.y;\n            };\n\n            /**\n             * Rotates the vector about (0, 0) by specified angle.\n             * @method rotate\n             * @param {vector} vector\n             * @param {number} angle\n             * @param {vector} [output]\n             * @return {vector} The vector rotated about (0, 0)\n             */\n            Vector.rotate = function(vector, angle, output) {\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n              if (!output) output = {};\n              var x = vector.x * cos - vector.y * sin;\n              output.y = vector.x * sin + vector.y * cos;\n              output.x = x;\n              return output;\n            };\n\n            /**\n             * Rotates the vector about a specified point by specified angle.\n             * @method rotateAbout\n             * @param {vector} vector\n             * @param {number} angle\n             * @param {vector} point\n             * @param {vector} [output]\n             * @return {vector} A new vector rotated about the point\n             */\n            Vector.rotateAbout = function(vector, angle, point, output) {\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n              if (!output) output = {};\n              var x =\n                point.x +\n                ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n              output.y =\n                point.y +\n                ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n              output.x = x;\n              return output;\n            };\n\n            /**\n             * Normalises a vector (such that its magnitude is `1`).\n             * @method normalise\n             * @param {vector} vector\n             * @return {vector} A new vector normalised\n             */\n            Vector.normalise = function(vector) {\n              var magnitude = Vector.magnitude(vector);\n              if (magnitude === 0) return { x: 0, y: 0 };\n              return { x: vector.x / magnitude, y: vector.y / magnitude };\n            };\n\n            /**\n             * Returns the dot-product of two vectors.\n             * @method dot\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The dot product of the two vectors\n             */\n            Vector.dot = function(vectorA, vectorB) {\n              return vectorA.x * vectorB.x + vectorA.y * vectorB.y;\n            };\n\n            /**\n             * Returns the cross-product of two vectors.\n             * @method cross\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The cross product of the two vectors\n             */\n            Vector.cross = function(vectorA, vectorB) {\n              return vectorA.x * vectorB.y - vectorA.y * vectorB.x;\n            };\n\n            /**\n             * Returns the cross-product of three vectors.\n             * @method cross3\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} vectorC\n             * @return {number} The cross product of the three vectors\n             */\n            Vector.cross3 = function(vectorA, vectorB, vectorC) {\n              return (\n                (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) -\n                (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x)\n              );\n            };\n\n            /**\n             * Adds the two vectors.\n             * @method add\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} [output]\n             * @return {vector} A new vector of vectorA and vectorB added\n             */\n            Vector.add = function(vectorA, vectorB, output) {\n              if (!output) output = {};\n              output.x = vectorA.x + vectorB.x;\n              output.y = vectorA.y + vectorB.y;\n              return output;\n            };\n\n            /**\n             * Subtracts the two vectors.\n             * @method sub\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} [output]\n             * @return {vector} A new vector of vectorA and vectorB subtracted\n             */\n            Vector.sub = function(vectorA, vectorB, output) {\n              if (!output) output = {};\n              output.x = vectorA.x - vectorB.x;\n              output.y = vectorA.y - vectorB.y;\n              return output;\n            };\n\n            /**\n             * Multiplies a vector and a scalar.\n             * @method mult\n             * @param {vector} vector\n             * @param {number} scalar\n             * @return {vector} A new vector multiplied by scalar\n             */\n            Vector.mult = function(vector, scalar) {\n              return { x: vector.x * scalar, y: vector.y * scalar };\n            };\n\n            /**\n             * Divides a vector and a scalar.\n             * @method div\n             * @param {vector} vector\n             * @param {number} scalar\n             * @return {vector} A new vector divided by scalar\n             */\n            Vector.div = function(vector, scalar) {\n              return { x: vector.x / scalar, y: vector.y / scalar };\n            };\n\n            /**\n             * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n             * @method perp\n             * @param {vector} vector\n             * @param {bool} [negate=false]\n             * @return {vector} The perpendicular vector\n             */\n            Vector.perp = function(vector, negate) {\n              negate = negate === true ? -1 : 1;\n              return { x: negate * -vector.y, y: negate * vector.x };\n            };\n\n            /**\n             * Negates both components of a vector such that it points in the opposite direction.\n             * @method neg\n             * @param {vector} vector\n             * @return {vector} The negated vector\n             */\n            Vector.neg = function(vector) {\n              return { x: -vector.x, y: -vector.y };\n            };\n\n            /**\n             * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n             * @method angle\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The angle in radians\n             */\n            Vector.angle = function(vectorA, vectorB) {\n              return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n            };\n\n            /**\n             * Temporary vector pool (not thread-safe).\n             * @property _temp\n             * @type {vector[]}\n             * @private\n             */\n            Vector._temp = [\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n            ];\n          })();\n        },\n        {},\n      ],\n      29: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n           * A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n           * A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Vertices\n           */\n\n          var Vertices = {};\n\n          module.exports = Vertices;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new set of `Matter.Body` compatible vertices.\n             * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n             *\n             *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n             *\n             * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n             * but with some additional references required for efficient collision detection routines.\n             *\n             * Vertices must be specified in clockwise order.\n             *\n             * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n             *\n             * @method create\n             * @param {vector[]} points\n             * @param {body} body\n             */\n            Vertices.create = function(points, body) {\n              var vertices = [];\n\n              for (var i = 0; i < points.length; i++) {\n                var point = points[i],\n                  vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false,\n                  };\n\n                vertices.push(vertex);\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n             * into a `Matter.Vertices` object for the given `Matter.Body`.\n             * For parsing SVG paths, see `Svg.pathToVertices`.\n             * @method fromPath\n             * @param {string} path\n             * @param {body} body\n             * @return {vertices} vertices\n             */\n            Vertices.fromPath = function(path, body) {\n              var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/gi,\n                points = [];\n\n              path.replace(pathPattern, function(match, x, y) {\n                points.push({ x: parseFloat(x), y: parseFloat(y) });\n              });\n\n              return Vertices.create(points, body);\n            };\n\n            /**\n             * Returns the centre (centroid) of the set of vertices.\n             * @method centre\n             * @param {vertices} vertices\n             * @return {vector} The centre point\n             */\n            Vertices.centre = function(vertices) {\n              var area = Vertices.area(vertices, true),\n                centre = { x: 0, y: 0 },\n                cross,\n                temp,\n                j;\n\n              for (var i = 0; i < vertices.length; i++) {\n                j = (i + 1) % vertices.length;\n                cross = Vector.cross(vertices[i], vertices[j]);\n                temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n                centre = Vector.add(centre, temp);\n              }\n\n              return Vector.div(centre, 6 * area);\n            };\n\n            /**\n             * Returns the average (mean) of the set of vertices.\n             * @method mean\n             * @param {vertices} vertices\n             * @return {vector} The average point\n             */\n            Vertices.mean = function(vertices) {\n              var average = { x: 0, y: 0 };\n\n              for (var i = 0; i < vertices.length; i++) {\n                average.x += vertices[i].x;\n                average.y += vertices[i].y;\n              }\n\n              return Vector.div(average, vertices.length);\n            };\n\n            /**\n             * Returns the area of the set of vertices.\n             * @method area\n             * @param {vertices} vertices\n             * @param {bool} signed\n             * @return {number} The area\n             */\n            Vertices.area = function(vertices, signed) {\n              var area = 0,\n                j = vertices.length - 1;\n\n              for (var i = 0; i < vertices.length; i++) {\n                area +=\n                  (vertices[j].x - vertices[i].x) *\n                  (vertices[j].y + vertices[i].y);\n                j = i;\n              }\n\n              if (signed) return area / 2;\n\n              return Math.abs(area) / 2;\n            };\n\n            /**\n             * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n             * @method inertia\n             * @param {vertices} vertices\n             * @param {number} mass\n             * @return {number} The polygon's moment of inertia\n             */\n            Vertices.inertia = function(vertices, mass) {\n              var numerator = 0,\n                denominator = 0,\n                v = vertices,\n                cross,\n                j;\n\n              // find the polygon's moment of inertia, using second moment of area\n              // from equations at http://www.physicsforums.com/showthread.php?t=25293\n              for (var n = 0; n < v.length; n++) {\n                j = (n + 1) % v.length;\n                cross = Math.abs(Vector.cross(v[j], v[n]));\n                numerator +=\n                  cross *\n                  (Vector.dot(v[j], v[j]) +\n                    Vector.dot(v[j], v[n]) +\n                    Vector.dot(v[n], v[n]));\n                denominator += cross;\n              }\n\n              return mass / 6 * (numerator / denominator);\n            };\n\n            /**\n             * Translates the set of vertices in-place.\n             * @method translate\n             * @param {vertices} vertices\n             * @param {vector} vector\n             * @param {number} scalar\n             */\n            Vertices.translate = function(vertices, vector, scalar) {\n              var i;\n              if (scalar) {\n                for (i = 0; i < vertices.length; i++) {\n                  vertices[i].x += vector.x * scalar;\n                  vertices[i].y += vector.y * scalar;\n                }\n              } else {\n                for (i = 0; i < vertices.length; i++) {\n                  vertices[i].x += vector.x;\n                  vertices[i].y += vector.y;\n                }\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Rotates the set of vertices in-place.\n             * @method rotate\n             * @param {vertices} vertices\n             * @param {number} angle\n             * @param {vector} point\n             */\n            Vertices.rotate = function(vertices, angle, point) {\n              if (angle === 0) return;\n\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n\n              for (var i = 0; i < vertices.length; i++) {\n                var vertice = vertices[i],\n                  dx = vertice.x - point.x,\n                  dy = vertice.y - point.y;\n\n                vertice.x = point.x + (dx * cos - dy * sin);\n                vertice.y = point.y + (dx * sin + dy * cos);\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Returns `true` if the `point` is inside the set of `vertices`.\n             * @method contains\n             * @param {vertices} vertices\n             * @param {vector} point\n             * @return {boolean} True if the vertices contains point, otherwise false\n             */\n            Vertices.contains = function(vertices, point) {\n              for (var i = 0; i < vertices.length; i++) {\n                var vertice = vertices[i],\n                  nextVertice = vertices[(i + 1) % vertices.length];\n                if (\n                  (point.x - vertice.x) * (nextVertice.y - vertice.y) +\n                    (point.y - vertice.y) * (vertice.x - nextVertice.x) >\n                  0\n                ) {\n                  return false;\n                }\n              }\n\n              return true;\n            };\n\n            /**\n             * Scales the vertices from a point (default is centre) in-place.\n             * @method scale\n             * @param {vertices} vertices\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} point\n             */\n            Vertices.scale = function(vertices, scaleX, scaleY, point) {\n              if (scaleX === 1 && scaleY === 1) return vertices;\n\n              point = point || Vertices.centre(vertices);\n\n              var vertex, delta;\n\n              for (var i = 0; i < vertices.length; i++) {\n                vertex = vertices[i];\n                delta = Vector.sub(vertex, point);\n                vertices[i].x = point.x + delta.x * scaleX;\n                vertices[i].y = point.y + delta.y * scaleY;\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n             * The radius parameter is a single number or an array to specify the radius for each vertex.\n             * @method chamfer\n             * @param {vertices} vertices\n             * @param {number[]} radius\n             * @param {number} quality\n             * @param {number} qualityMin\n             * @param {number} qualityMax\n             */\n            Vertices.chamfer = function(\n              vertices,\n              radius,\n              quality,\n              qualityMin,\n              qualityMax\n            ) {\n              if (typeof radius === 'number') {\n                radius = [radius];\n              } else {\n                radius = radius || [8];\n              }\n\n              // quality defaults to -1, which is auto\n              quality = typeof quality !== 'undefined' ? quality : -1;\n              qualityMin = qualityMin || 2;\n              qualityMax = qualityMax || 14;\n\n              var newVertices = [];\n\n              for (var i = 0; i < vertices.length; i++) {\n                var prevVertex =\n                    vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                  vertex = vertices[i],\n                  nextVertex = vertices[(i + 1) % vertices.length],\n                  currentRadius =\n                    radius[i < radius.length ? i : radius.length - 1];\n\n                if (currentRadius === 0) {\n                  newVertices.push(vertex);\n                  continue;\n                }\n\n                var prevNormal = Vector.normalise({\n                  x: vertex.y - prevVertex.y,\n                  y: prevVertex.x - vertex.x,\n                });\n\n                var nextNormal = Vector.normalise({\n                  x: nextVertex.y - vertex.y,\n                  y: vertex.x - nextVertex.x,\n                });\n\n                var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                  radiusVector = Vector.mult(\n                    Common.clone(prevNormal),\n                    currentRadius\n                  ),\n                  midNormal = Vector.normalise(\n                    Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)\n                  ),\n                  scaledVertex = Vector.sub(\n                    vertex,\n                    Vector.mult(midNormal, diagonalRadius)\n                  );\n\n                var precision = quality;\n\n                if (quality === -1) {\n                  // automatically decide precision\n                  precision = Math.pow(currentRadius, 0.32) * 1.75;\n                }\n\n                precision = Common.clamp(precision, qualityMin, qualityMax);\n\n                // use an even value for precision, more likely to reduce axes by using symmetry\n                if (precision % 2 === 1) precision += 1;\n\n                var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                  theta = alpha / precision;\n\n                for (var j = 0; j < precision; j++) {\n                  newVertices.push(\n                    Vector.add(\n                      Vector.rotate(radiusVector, theta * j),\n                      scaledVertex\n                    )\n                  );\n                }\n              }\n\n              return newVertices;\n            };\n\n            /**\n             * Sorts the input vertices into clockwise order in place.\n             * @method clockwiseSort\n             * @param {vertices} vertices\n             * @return {vertices} vertices\n             */\n            Vertices.clockwiseSort = function(vertices) {\n              var centre = Vertices.mean(vertices);\n\n              vertices.sort(function(vertexA, vertexB) {\n                return (\n                  Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB)\n                );\n              });\n\n              return vertices;\n            };\n\n            /**\n             * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n             * @method isConvex\n             * @param {vertices} vertices\n             * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n             */\n            Vertices.isConvex = function(vertices) {\n              // http://paulbourke.net/geometry/polygonmesh/\n              // Copyright (c) Paul Bourke (use permitted)\n\n              var flag = 0,\n                n = vertices.length,\n                i,\n                j,\n                k,\n                z;\n\n              if (n < 3) return null;\n\n              for (i = 0; i < n; i++) {\n                j = (i + 1) % n;\n                k = (i + 2) % n;\n                z =\n                  (vertices[j].x - vertices[i].x) *\n                  (vertices[k].y - vertices[j].y);\n                z -=\n                  (vertices[j].y - vertices[i].y) *\n                  (vertices[k].x - vertices[j].x);\n\n                if (z < 0) {\n                  flag |= 1;\n                } else if (z > 0) {\n                  flag |= 2;\n                }\n\n                if (flag === 3) {\n                  return false;\n                }\n              }\n\n              if (flag !== 0) {\n                return true;\n              } else {\n                return null;\n              }\n            };\n\n            /**\n             * Returns the convex hull of the input vertices as a new array of points.\n             * @method hull\n             * @param {vertices} vertices\n             * @return [vertex] vertices\n             */\n            Vertices.hull = function(vertices) {\n              // http://geomalgorithms.com/a10-_hull-1.html\n\n              var upper = [],\n                lower = [],\n                vertex,\n                i;\n\n              // sort vertices on x-axis (y-axis for ties)\n              vertices = vertices.slice(0);\n              vertices.sort(function(vertexA, vertexB) {\n                var dx = vertexA.x - vertexB.x;\n                return dx !== 0 ? dx : vertexA.y - vertexB.y;\n              });\n\n              // build lower hull\n              for (i = 0; i < vertices.length; i += 1) {\n                vertex = vertices[i];\n\n                while (\n                  lower.length >= 2 &&\n                  Vector.cross3(\n                    lower[lower.length - 2],\n                    lower[lower.length - 1],\n                    vertex\n                  ) <= 0\n                ) {\n                  lower.pop();\n                }\n\n                lower.push(vertex);\n              }\n\n              // build upper hull\n              for (i = vertices.length - 1; i >= 0; i -= 1) {\n                vertex = vertices[i];\n\n                while (\n                  upper.length >= 2 &&\n                  Vector.cross3(\n                    upper[upper.length - 2],\n                    upper[upper.length - 1],\n                    vertex\n                  ) <= 0\n                ) {\n                  upper.pop();\n                }\n\n                upper.push(vertex);\n              }\n\n              // concatenation of the lower and upper hulls gives the convex hull\n              // omit last points because they are repeated at the beginning of the other list\n              upper.pop();\n              lower.pop();\n\n              return upper.concat(lower);\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Vector': 28 },\n      ],\n      30: [\n        function(_dereq_, module, exports) {\n          var Matter = (module.exports = _dereq_('../core/Matter'));\n\n          Matter.Body = _dereq_('../body/Body');\n          Matter.Composite = _dereq_('../body/Composite');\n          Matter.World = _dereq_('../body/World');\n\n          Matter.Contact = _dereq_('../collision/Contact');\n          Matter.Detector = _dereq_('../collision/Detector');\n          Matter.Grid = _dereq_('../collision/Grid');\n          Matter.Pairs = _dereq_('../collision/Pairs');\n          Matter.Pair = _dereq_('../collision/Pair');\n          Matter.Query = _dereq_('../collision/Query');\n          Matter.Resolver = _dereq_('../collision/Resolver');\n          Matter.SAT = _dereq_('../collision/SAT');\n\n          Matter.Constraint = _dereq_('../constraint/Constraint');\n          Matter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\n          Matter.Common = _dereq_('../core/Common');\n          Matter.Engine = _dereq_('../core/Engine');\n          Matter.Events = _dereq_('../core/Events');\n          Matter.Mouse = _dereq_('../core/Mouse');\n          Matter.Runner = _dereq_('../core/Runner');\n          Matter.Sleeping = _dereq_('../core/Sleeping');\n          Matter.Plugin = _dereq_('../core/Plugin');\n\n          Matter.Bodies = _dereq_('../factory/Bodies');\n          Matter.Composites = _dereq_('../factory/Composites');\n\n          Matter.Axes = _dereq_('../geometry/Axes');\n          Matter.Bounds = _dereq_('../geometry/Bounds');\n          Matter.Svg = _dereq_('../geometry/Svg');\n          Matter.Vector = _dereq_('../geometry/Vector');\n          Matter.Vertices = _dereq_('../geometry/Vertices');\n\n          Matter.Render = _dereq_('../render/Render');\n          Matter.RenderPixi = _dereq_('../render/RenderPixi');\n\n          // aliases\n\n          Matter.World.add = Matter.Composite.add;\n          Matter.World.remove = Matter.Composite.remove;\n          Matter.World.addComposite = Matter.Composite.addComposite;\n          Matter.World.addBody = Matter.Composite.addBody;\n          Matter.World.addConstraint = Matter.Composite.addConstraint;\n          Matter.World.clear = Matter.Composite.clear;\n          Matter.Engine.run = Matter.Runner.run;\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../body/World': 3,\n          '../collision/Contact': 4,\n          '../collision/Detector': 5,\n          '../collision/Grid': 6,\n          '../collision/Pair': 7,\n          '../collision/Pairs': 8,\n          '../collision/Query': 9,\n          '../collision/Resolver': 10,\n          '../collision/SAT': 11,\n          '../constraint/Constraint': 12,\n          '../constraint/MouseConstraint': 13,\n          '../core/Common': 14,\n          '../core/Engine': 15,\n          '../core/Events': 16,\n          '../core/Matter': 17,\n          '../core/Metrics': 18,\n          '../core/Mouse': 19,\n          '../core/Plugin': 20,\n          '../core/Runner': 21,\n          '../core/Sleeping': 22,\n          '../factory/Bodies': 23,\n          '../factory/Composites': 24,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Svg': 27,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          '../render/Render': 31,\n          '../render/RenderPixi': 32,\n        },\n      ],\n      31: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n           * It is intended for development and debugging purposes, but may also be suitable for simple games.\n           * It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n           *\n           * @class Render\n           */\n\n          var Render = {};\n\n          module.exports = Render;\n\n          var Common = _dereq_('../core/Common');\n          var Composite = _dereq_('../body/Composite');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Events = _dereq_('../core/Events');\n          var Grid = _dereq_('../collision/Grid');\n          var Vector = _dereq_('../geometry/Vector');\n          var Mouse = _dereq_('../core/Mouse');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                function(callback) {\n                  window.setTimeout(function() {\n                    callback(Common.now());\n                  }, 1000 / 60);\n                };\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            /**\n             * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {object} [options]\n             * @return {render} A new renderer\n             */\n            Render.create = function(options) {\n              var defaults = {\n                controller: Render,\n                engine: null,\n                element: null,\n                canvas: null,\n                mouse: null,\n                frameRequestId: null,\n                options: {\n                  width: 800,\n                  height: 600,\n                  pixelRatio: 1,\n                  background: '#18181d',\n                  wireframeBackground: '#0f0f13',\n                  hasBounds: !!options.bounds,\n                  enabled: true,\n                  wireframes: true,\n                  showSleeping: true,\n                  showDebug: false,\n                  showBroadphase: false,\n                  showBounds: false,\n                  showVelocity: false,\n                  showCollisions: false,\n                  showSeparations: false,\n                  showAxes: false,\n                  showPositions: false,\n                  showAngleIndicator: false,\n                  showIds: false,\n                  showShadows: false,\n                  showVertexNumbers: false,\n                  showConvexHulls: false,\n                  showInternalEdges: false,\n                  showMousePosition: false,\n                },\n              };\n\n              var render = Common.extend(defaults, options);\n\n              if (render.canvas) {\n                render.canvas.width =\n                  render.options.width || render.canvas.width;\n                render.canvas.height =\n                  render.options.height || render.canvas.height;\n              }\n\n              render.mouse = options.mouse;\n              render.engine = options.engine;\n              render.canvas =\n                render.canvas ||\n                _createCanvas(render.options.width, render.options.height);\n              render.context = render.canvas.getContext('2d');\n              render.textures = {};\n\n              render.bounds = render.bounds || {\n                min: {\n                  x: 0,\n                  y: 0,\n                },\n                max: {\n                  x: render.canvas.width,\n                  y: render.canvas.height,\n                },\n              };\n\n              if (render.options.pixelRatio !== 1) {\n                Render.setPixelRatio(render, render.options.pixelRatio);\n              }\n\n              if (Common.isElement(render.element)) {\n                render.element.appendChild(render.canvas);\n              } else if (!render.canvas.parentNode) {\n                Common.log(\n                  'Render.create: options.element was undefined, render.canvas was created but not appended',\n                  'warn'\n                );\n              }\n\n              return render;\n            };\n\n            /**\n             * Continuously updates the render canvas on the `requestAnimationFrame` event.\n             * @method run\n             * @param {render} render\n             */\n            Render.run = function(render) {\n              (function loop(time) {\n                render.frameRequestId = _requestAnimationFrame(loop);\n                Render.world(render);\n              })();\n            };\n\n            /**\n             * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n             * @method stop\n             * @param {render} render\n             */\n            Render.stop = function(render) {\n              _cancelAnimationFrame(render.frameRequestId);\n            };\n\n            /**\n             * Sets the pixel ratio of the renderer and updates the canvas.\n             * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n             * @method setPixelRatio\n             * @param {render} render\n             * @param {number} pixelRatio\n             */\n            Render.setPixelRatio = function(render, pixelRatio) {\n              var options = render.options,\n                canvas = render.canvas;\n\n              if (pixelRatio === 'auto') {\n                pixelRatio = _getPixelRatio(canvas);\n              }\n\n              options.pixelRatio = pixelRatio;\n              canvas.setAttribute('data-pixel-ratio', pixelRatio);\n              canvas.width = options.width * pixelRatio;\n              canvas.height = options.height * pixelRatio;\n              canvas.style.width = options.width + 'px';\n              canvas.style.height = options.height + 'px';\n              render.context.scale(pixelRatio, pixelRatio);\n            };\n\n            /**\n             * Positions and sizes the viewport around the given object bounds.\n             * Objects must have at least one of the following properties:\n             * - `object.bounds`\n             * - `object.position`\n             * - `object.min` and `object.max`\n             * - `object.x` and `object.y`\n             * @method lookAt\n             * @param {render} render\n             * @param {object[]} objects\n             * @param {vector} [padding]\n             * @param {bool} [center=true]\n             */\n            Render.lookAt = function(render, objects, padding, center) {\n              center = typeof center !== 'undefined' ? center : true;\n              objects = Common.isArray(objects) ? objects : [objects];\n              padding = padding || {\n                x: 0,\n                y: 0,\n              };\n\n              // find bounds of all objects\n              var bounds = {\n                min: { x: Infinity, y: Infinity },\n                max: { x: -Infinity, y: -Infinity },\n              };\n\n              for (var i = 0; i < objects.length; i += 1) {\n                var object = objects[i],\n                  min = object.bounds\n                    ? object.bounds.min\n                    : object.min || object.position || object,\n                  max = object.bounds\n                    ? object.bounds.max\n                    : object.max || object.position || object;\n\n                if (min && max) {\n                  if (min.x < bounds.min.x) bounds.min.x = min.x;\n\n                  if (max.x > bounds.max.x) bounds.max.x = max.x;\n\n                  if (min.y < bounds.min.y) bounds.min.y = min.y;\n\n                  if (max.y > bounds.max.y) bounds.max.y = max.y;\n                }\n              }\n\n              // find ratios\n              var width = bounds.max.x - bounds.min.x + 2 * padding.x,\n                height = bounds.max.y - bounds.min.y + 2 * padding.y,\n                viewHeight = render.canvas.height,\n                viewWidth = render.canvas.width,\n                outerRatio = viewWidth / viewHeight,\n                innerRatio = width / height,\n                scaleX = 1,\n                scaleY = 1;\n\n              // find scale factor\n              if (innerRatio > outerRatio) {\n                scaleY = innerRatio / outerRatio;\n              } else {\n                scaleX = outerRatio / innerRatio;\n              }\n\n              // enable bounds\n              render.options.hasBounds = true;\n\n              // position and size\n              render.bounds.min.x = bounds.min.x;\n              render.bounds.max.x = bounds.min.x + width * scaleX;\n              render.bounds.min.y = bounds.min.y;\n              render.bounds.max.y = bounds.min.y + height * scaleY;\n\n              // center\n              if (center) {\n                render.bounds.min.x += width * 0.5 - width * scaleX * 0.5;\n                render.bounds.max.x += width * 0.5 - width * scaleX * 0.5;\n                render.bounds.min.y += height * 0.5 - height * scaleY * 0.5;\n                render.bounds.max.y += height * 0.5 - height * scaleY * 0.5;\n              }\n\n              // padding\n              render.bounds.min.x -= padding.x;\n              render.bounds.max.x -= padding.x;\n              render.bounds.min.y -= padding.y;\n              render.bounds.max.y -= padding.y;\n\n              // update mouse\n              if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                  x:\n                    (render.bounds.max.x - render.bounds.min.x) /\n                    render.canvas.width,\n                  y:\n                    (render.bounds.max.y - render.bounds.min.y) /\n                    render.canvas.height,\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n              }\n            };\n\n            /**\n             * Applies viewport transforms based on `render.bounds` to a render context.\n             * @method startViewTransform\n             * @param {render} render\n             */\n            Render.startViewTransform = function(render) {\n              var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n              render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n              render.context.translate(\n                -render.bounds.min.x,\n                -render.bounds.min.y\n              );\n            };\n\n            /**\n             * Resets all transforms on the render context.\n             * @method endViewTransform\n             * @param {render} render\n             */\n            Render.endViewTransform = function(render) {\n              render.context.setTransform(\n                render.options.pixelRatio,\n                0,\n                0,\n                render.options.pixelRatio,\n                0,\n                0\n              );\n            };\n\n            /**\n             * Renders the given `engine`'s `Matter.World` object.\n             * This is the entry point for all rendering and should be called every time the scene changes.\n             * @method world\n             * @param {render} render\n             */\n            Render.world = function(render) {\n              var engine = render.engine,\n                world = engine.world,\n                canvas = render.canvas,\n                context = render.context,\n                options = render.options,\n                allBodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world),\n                background = options.wireframes\n                  ? options.wireframeBackground\n                  : options.background,\n                bodies = [],\n                constraints = [],\n                i;\n\n              var event = {\n                timestamp: engine.timing.timestamp,\n              };\n\n              Events.trigger(render, 'beforeRender', event);\n\n              // apply background if it has changed\n              if (render.currentBackground !== background)\n                _applyBackground(render, background);\n\n              // clear the canvas with a transparent fill, to allow the canvas background to show\n              context.globalCompositeOperation = 'source-in';\n              context.fillStyle = 'transparent';\n              context.fillRect(0, 0, canvas.width, canvas.height);\n              context.globalCompositeOperation = 'source-over';\n\n              // handle bounds\n              if (options.hasBounds) {\n                // filter out bodies that are not in view\n                for (i = 0; i < allBodies.length; i++) {\n                  var body = allBodies[i];\n                  if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n                }\n\n                // filter out constraints that are not in view\n                for (i = 0; i < allConstraints.length; i++) {\n                  var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                  if (bodyA)\n                    pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                  if (bodyB)\n                    pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                  if (!pointAWorld || !pointBWorld) continue;\n\n                  if (\n                    Bounds.contains(render.bounds, pointAWorld) ||\n                    Bounds.contains(render.bounds, pointBWorld)\n                  )\n                    constraints.push(constraint);\n                }\n\n                // transform the view\n                Render.startViewTransform(render);\n\n                // update mouse\n                if (render.mouse) {\n                  Mouse.setScale(render.mouse, {\n                    x:\n                      (render.bounds.max.x - render.bounds.min.x) /\n                      render.canvas.width,\n                    y:\n                      (render.bounds.max.y - render.bounds.min.y) /\n                      render.canvas.height,\n                  });\n\n                  Mouse.setOffset(render.mouse, render.bounds.min);\n                }\n              } else {\n                constraints = allConstraints;\n                bodies = allBodies;\n              }\n\n              if (\n                !options.wireframes ||\n                (engine.enableSleeping && options.showSleeping)\n              ) {\n                // fully featured rendering of bodies\n                Render.bodies(render, bodies, context);\n              } else {\n                if (options.showConvexHulls)\n                  Render.bodyConvexHulls(render, bodies, context);\n\n                // optimised method for wireframes only\n                Render.bodyWireframes(render, bodies, context);\n              }\n\n              if (options.showBounds)\n                Render.bodyBounds(render, bodies, context);\n\n              if (options.showAxes || options.showAngleIndicator)\n                Render.bodyAxes(render, bodies, context);\n\n              if (options.showPositions)\n                Render.bodyPositions(render, bodies, context);\n\n              if (options.showVelocity)\n                Render.bodyVelocity(render, bodies, context);\n\n              if (options.showIds) Render.bodyIds(render, bodies, context);\n\n              if (options.showSeparations)\n                Render.separations(render, engine.pairs.list, context);\n\n              if (options.showCollisions)\n                Render.collisions(render, engine.pairs.list, context);\n\n              if (options.showVertexNumbers)\n                Render.vertexNumbers(render, bodies, context);\n\n              if (options.showMousePosition)\n                Render.mousePosition(render, render.mouse, context);\n\n              Render.constraints(constraints, context);\n\n              if (\n                options.showBroadphase &&\n                engine.broadphase.controller === Grid\n              )\n                Render.grid(render, engine.broadphase, context);\n\n              if (options.showDebug) Render.debug(render, context);\n\n              if (options.hasBounds) {\n                // revert view transforms\n                Render.endViewTransform(render);\n              }\n\n              Events.trigger(render, 'afterRender', event);\n            };\n\n            /**\n             * Description\n             * @private\n             * @method debug\n             * @param {render} render\n             * @param {RenderingContext} context\n             */\n            Render.debug = function(render, context) {\n              var c = context,\n                engine = render.engine,\n                world = engine.world,\n                metrics = engine.metrics,\n                options = render.options,\n                bodies = Composite.allBodies(world),\n                space = '    ';\n\n              if (\n                engine.timing.timestamp - (render.debugTimestamp || 0) >=\n                500\n              ) {\n                var text = '';\n\n                if (metrics.timing) {\n                  text += 'fps: ' + Math.round(metrics.timing.fps) + space;\n                }\n\n                render.debugString = text;\n                render.debugTimestamp = engine.timing.timestamp;\n              }\n\n              if (render.debugString) {\n                c.font = '12px Arial';\n\n                if (options.wireframes) {\n                  c.fillStyle = 'rgba(255,255,255,0.5)';\n                } else {\n                  c.fillStyle = 'rgba(0,0,0,0.5)';\n                }\n\n                var split = render.debugString.split('\\n');\n\n                for (var i = 0; i < split.length; i++) {\n                  c.fillText(split[i], 50, 50 + i * 18);\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method constraints\n             * @param {constraint[]} constraints\n             * @param {RenderingContext} context\n             */\n            Render.constraints = function(constraints, context) {\n              var c = context;\n\n              for (var i = 0; i < constraints.length; i++) {\n                var constraint = constraints[i];\n\n                if (\n                  !constraint.render.visible ||\n                  !constraint.pointA ||\n                  !constraint.pointB\n                )\n                  continue;\n\n                var bodyA = constraint.bodyA,\n                  bodyB = constraint.bodyB,\n                  start,\n                  end;\n\n                if (bodyA) {\n                  start = Vector.add(bodyA.position, constraint.pointA);\n                } else {\n                  start = constraint.pointA;\n                }\n\n                if (constraint.render.type === 'pin') {\n                  c.beginPath();\n                  c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                  c.closePath();\n                } else {\n                  if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                  } else {\n                    end = constraint.pointB;\n                  }\n\n                  c.beginPath();\n                  c.moveTo(start.x, start.y);\n\n                  if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                      normal = Vector.perp(Vector.normalise(delta)),\n                      coils = Math.ceil(\n                        Common.clamp(constraint.length / 5, 12, 20)\n                      ),\n                      offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                      offset = j % 2 === 0 ? 1 : -1;\n\n                      c.lineTo(\n                        start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                        start.y + delta.y * (j / coils) + normal.y * offset * 4\n                      );\n                    }\n                  }\n\n                  c.lineTo(end.x, end.y);\n                }\n\n                if (constraint.render.lineWidth) {\n                  c.lineWidth = constraint.render.lineWidth;\n                  c.strokeStyle = constraint.render.strokeStyle;\n                  c.stroke();\n                }\n\n                if (constraint.render.anchors) {\n                  c.fillStyle = constraint.render.strokeStyle;\n                  c.beginPath();\n                  c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                  c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                  c.closePath();\n                  c.fill();\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method bodyShadows\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyShadows = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                if (body.circleRadius) {\n                  c.beginPath();\n                  c.arc(\n                    body.position.x,\n                    body.position.y,\n                    body.circleRadius,\n                    0,\n                    2 * Math.PI\n                  );\n                  c.closePath();\n                } else {\n                  c.beginPath();\n                  c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                  for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                  }\n                  c.closePath();\n                }\n\n                var distanceX = body.position.x - render.options.width * 0.5,\n                  distanceY = body.position.y - render.options.height * 0.2,\n                  distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n                c.shadowColor = 'rgba(0,0,0,0.15)';\n                c.shadowOffsetX = 0.05 * distanceX;\n                c.shadowOffsetY = 0.05 * distanceY;\n                c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n                c.fill();\n\n                c.shadowColor = null;\n                c.shadowOffsetX = null;\n                c.shadowOffsetY = null;\n                c.shadowBlur = null;\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method bodies\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodies = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                showInternalEdges =\n                  options.showInternalEdges || !options.wireframes,\n                body,\n                part,\n                i,\n                k;\n\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (\n                  k = body.parts.length > 1 ? 1 : 0;\n                  k < body.parts.length;\n                  k++\n                ) {\n                  part = body.parts[k];\n\n                  if (!part.render.visible) continue;\n\n                  if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                  } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                  }\n\n                  if (\n                    part.render.sprite &&\n                    part.render.sprite.texture &&\n                    !options.wireframes\n                  ) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                      texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                      texture,\n                      texture.width * -sprite.xOffset * sprite.xScale,\n                      texture.height * -sprite.yOffset * sprite.yScale,\n                      texture.width * sprite.xScale,\n                      texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                  } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                      c.beginPath();\n                      c.arc(\n                        part.position.x,\n                        part.position.y,\n                        part.circleRadius,\n                        0,\n                        2 * Math.PI\n                      );\n                    } else {\n                      c.beginPath();\n                      c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                      for (var j = 1; j < part.vertices.length; j++) {\n                        if (\n                          !part.vertices[j - 1].isInternal ||\n                          showInternalEdges\n                        ) {\n                          c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                        } else {\n                          c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                        }\n\n                        if (part.vertices[j].isInternal && !showInternalEdges) {\n                          c.moveTo(\n                            part.vertices[(j + 1) % part.vertices.length].x,\n                            part.vertices[(j + 1) % part.vertices.length].y\n                          );\n                        }\n                      }\n\n                      c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                      c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                      c.fillStyle = part.render.fillStyle;\n\n                      if (part.render.lineWidth) {\n                        c.lineWidth = part.render.lineWidth;\n                        c.strokeStyle = part.render.strokeStyle;\n                        c.stroke();\n                      }\n\n                      c.fill();\n                    } else {\n                      c.lineWidth = 1;\n                      c.strokeStyle = '#bbb';\n                      c.stroke();\n                    }\n                  }\n\n                  c.globalAlpha = 1;\n                }\n              }\n            };\n\n            /**\n             * Optimised method for drawing body wireframes in one pass\n             * @private\n             * @method bodyWireframes\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyWireframes = function(render, bodies, context) {\n              var c = context,\n                showInternalEdges = render.options.showInternalEdges,\n                body,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              // render all bodies\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (\n                  k = body.parts.length > 1 ? 1 : 0;\n                  k < body.parts.length;\n                  k++\n                ) {\n                  part = body.parts[k];\n\n                  c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                  for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                      c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                      c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                      c.moveTo(\n                        part.vertices[(j + 1) % part.vertices.length].x,\n                        part.vertices[(j + 1) % part.vertices.length].y\n                      );\n                    }\n                  }\n\n                  c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                }\n              }\n\n              c.lineWidth = 1;\n              c.strokeStyle = '#bbb';\n              c.stroke();\n            };\n\n            /**\n             * Optimised method for drawing body convex hull wireframes in one pass\n             * @private\n             * @method bodyConvexHulls\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyConvexHulls = function(render, bodies, context) {\n              var c = context,\n                body,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              // render convex hulls\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible || body.parts.length === 1) continue;\n\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n                for (j = 1; j < body.vertices.length; j++) {\n                  c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n\n                c.lineTo(body.vertices[0].x, body.vertices[0].y);\n              }\n\n              c.lineWidth = 1;\n              c.strokeStyle = 'rgba(255,255,255,0.2)';\n              c.stroke();\n            };\n\n            /**\n             * Renders body vertex numbers.\n             * @private\n             * @method vertexNumbers\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.vertexNumbers = function(render, bodies, context) {\n              var c = context,\n                i,\n                j,\n                k;\n\n              for (i = 0; i < bodies.length; i++) {\n                var parts = bodies[i].parts;\n                for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                  var part = parts[k];\n                  for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(\n                      i + '_' + j,\n                      part.position.x +\n                        (part.vertices[j].x - part.position.x) * 0.8,\n                      part.position.y +\n                        (part.vertices[j].y - part.position.y) * 0.8\n                    );\n                  }\n                }\n              }\n            };\n\n            /**\n             * Renders mouse position.\n             * @private\n             * @method mousePosition\n             * @param {render} render\n             * @param {mouse} mouse\n             * @param {RenderingContext} context\n             */\n            Render.mousePosition = function(render, mouse, context) {\n              var c = context;\n              c.fillStyle = 'rgba(255,255,255,0.8)';\n              c.fillText(\n                mouse.position.x + '  ' + mouse.position.y,\n                mouse.position.x + 5,\n                mouse.position.y - 5\n              );\n            };\n\n            /**\n             * Draws body bounds\n             * @private\n             * @method bodyBounds\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyBounds = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options;\n\n              c.beginPath();\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.render.visible) {\n                  var parts = bodies[i].parts;\n                  for (\n                    var j = parts.length > 1 ? 1 : 0;\n                    j < parts.length;\n                    j++\n                  ) {\n                    var part = parts[j];\n                    c.rect(\n                      part.bounds.min.x,\n                      part.bounds.min.y,\n                      part.bounds.max.x - part.bounds.min.x,\n                      part.bounds.max.y - part.bounds.min.y\n                    );\n                  }\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,255,255,0.08)';\n              } else {\n                c.strokeStyle = 'rgba(0,0,0,0.1)';\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Draws body angle indicators and axes\n             * @private\n             * @method bodyAxes\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyAxes = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  parts = body.parts;\n\n                if (!body.render.visible) continue;\n\n                if (options.showAxes) {\n                  // render all axes\n                  for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                      var axis = part.axes[k];\n                      c.moveTo(part.position.x, part.position.y);\n                      c.lineTo(\n                        part.position.x + axis.x * 20,\n                        part.position.y + axis.y * 20\n                      );\n                    }\n                  }\n                } else {\n                  for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                      // render a single axis indicator\n                      c.moveTo(part.position.x, part.position.y);\n                      c.lineTo(\n                        (part.vertices[0].x +\n                          part.vertices[part.vertices.length - 1].x) /\n                          2,\n                        (part.vertices[0].y +\n                          part.vertices[part.vertices.length - 1].y) /\n                          2\n                      );\n                    }\n                  }\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'indianred';\n                c.lineWidth = 1;\n              } else {\n                c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n                c.globalCompositeOperation = 'overlay';\n                c.lineWidth = 2;\n              }\n\n              c.stroke();\n              c.globalCompositeOperation = 'source-over';\n            };\n\n            /**\n             * Draws body positions\n             * @private\n             * @method bodyPositions\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyPositions = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                body,\n                part,\n                i,\n                k;\n\n              c.beginPath();\n\n              // render current positions\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (k = 0; k < body.parts.length; k++) {\n                  part = body.parts[k];\n                  c.arc(\n                    part.position.x,\n                    part.position.y,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                  );\n                  c.closePath();\n                }\n              }\n\n              if (options.wireframes) {\n                c.fillStyle = 'indianred';\n              } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n              }\n              c.fill();\n\n              c.beginPath();\n\n              // render previous positions\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n                if (body.render.visible) {\n                  c.arc(\n                    body.positionPrev.x,\n                    body.positionPrev.y,\n                    2,\n                    0,\n                    2 * Math.PI,\n                    false\n                  );\n                  c.closePath();\n                }\n              }\n\n              c.fillStyle = 'rgba(255,165,0,0.8)';\n              c.fill();\n            };\n\n            /**\n             * Draws body velocity\n             * @private\n             * @method bodyVelocity\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyVelocity = function(render, bodies, context) {\n              var c = context;\n\n              c.beginPath();\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                c.moveTo(body.position.x, body.position.y);\n                c.lineTo(\n                  body.position.x + (body.position.x - body.positionPrev.x) * 2,\n                  body.position.y + (body.position.y - body.positionPrev.y) * 2\n                );\n              }\n\n              c.lineWidth = 3;\n              c.strokeStyle = 'cornflowerblue';\n              c.stroke();\n            };\n\n            /**\n             * Draws body ids\n             * @private\n             * @method bodyIds\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyIds = function(render, bodies, context) {\n              var c = context,\n                i,\n                j;\n\n              for (i = 0; i < bodies.length; i++) {\n                if (!bodies[i].render.visible) continue;\n\n                var parts = bodies[i].parts;\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                  var part = parts[j];\n                  c.font = '12px Arial';\n                  c.fillStyle = 'rgba(255,255,255,0.5)';\n                  c.fillText(\n                    part.id,\n                    part.position.x + 10,\n                    part.position.y - 10\n                  );\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method collisions\n             * @param {render} render\n             * @param {pair[]} pairs\n             * @param {RenderingContext} context\n             */\n            Render.collisions = function(render, pairs, context) {\n              var c = context,\n                options = render.options,\n                pair,\n                collision,\n                corrected,\n                bodyA,\n                bodyB,\n                i,\n                j;\n\n              c.beginPath();\n\n              // render collision positions\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n                for (j = 0; j < pair.activeContacts.length; j++) {\n                  var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                  c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n                }\n              }\n\n              if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.7)';\n              } else {\n                c.fillStyle = 'orange';\n              }\n              c.fill();\n\n              c.beginPath();\n\n              // render collision normals\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n\n                if (pair.activeContacts.length > 0) {\n                  var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                  if (pair.activeContacts.length === 2) {\n                    normalPosX =\n                      (pair.activeContacts[0].vertex.x +\n                        pair.activeContacts[1].vertex.x) /\n                      2;\n                    normalPosY =\n                      (pair.activeContacts[0].vertex.y +\n                        pair.activeContacts[1].vertex.y) /\n                      2;\n                  }\n\n                  if (\n                    collision.bodyB === collision.supports[0].body ||\n                    collision.bodyA.isStatic === true\n                  ) {\n                    c.moveTo(\n                      normalPosX - collision.normal.x * 8,\n                      normalPosY - collision.normal.y * 8\n                    );\n                  } else {\n                    c.moveTo(\n                      normalPosX + collision.normal.x * 8,\n                      normalPosY + collision.normal.y * 8\n                    );\n                  }\n\n                  c.lineTo(normalPosX, normalPosY);\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,165,0,0.7)';\n              } else {\n                c.strokeStyle = 'orange';\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method separations\n             * @param {render} render\n             * @param {pair[]} pairs\n             * @param {RenderingContext} context\n             */\n            Render.separations = function(render, pairs, context) {\n              var c = context,\n                options = render.options,\n                pair,\n                collision,\n                corrected,\n                bodyA,\n                bodyB,\n                i,\n                j;\n\n              c.beginPath();\n\n              // render separations\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n                bodyA = collision.bodyA;\n                bodyB = collision.bodyB;\n\n                var k = 1;\n\n                if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n                if (bodyB.isStatic) k = 0;\n\n                c.moveTo(bodyB.position.x, bodyB.position.y);\n                c.lineTo(\n                  bodyB.position.x - collision.penetration.x * k,\n                  bodyB.position.y - collision.penetration.y * k\n                );\n\n                k = 1;\n\n                if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n                if (bodyA.isStatic) k = 0;\n\n                c.moveTo(bodyA.position.x, bodyA.position.y);\n                c.lineTo(\n                  bodyA.position.x + collision.penetration.x * k,\n                  bodyA.position.y + collision.penetration.y * k\n                );\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,165,0,0.5)';\n              } else {\n                c.strokeStyle = 'orange';\n              }\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method grid\n             * @param {render} render\n             * @param {grid} grid\n             * @param {RenderingContext} context\n             */\n            Render.grid = function(render, grid, context) {\n              var c = context,\n                options = render.options;\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,180,0,0.1)';\n              } else {\n                c.strokeStyle = 'rgba(255,180,0,0.5)';\n              }\n\n              c.beginPath();\n\n              var bucketKeys = Common.keys(grid.buckets);\n\n              for (var i = 0; i < bucketKeys.length; i++) {\n                var bucketId = bucketKeys[i];\n\n                if (grid.buckets[bucketId].length < 2) continue;\n\n                var region = bucketId.split(/C|R/);\n                c.rect(\n                  0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                  0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                  grid.bucketWidth,\n                  grid.bucketHeight\n                );\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method inspector\n             * @param {inspector} inspector\n             * @param {RenderingContext} context\n             */\n            Render.inspector = function(inspector, context) {\n              var engine = inspector.engine,\n                selected = inspector.selected,\n                render = inspector.render,\n                options = render.options,\n                bounds;\n\n              if (options.hasBounds) {\n                var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                  boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                  boundsScaleX = boundsWidth / render.options.width,\n                  boundsScaleY = boundsHeight / render.options.height;\n\n                context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n                context.translate(-render.bounds.min.x, -render.bounds.min.y);\n              }\n\n              for (var i = 0; i < selected.length; i++) {\n                var item = selected[i].data;\n\n                context.translate(0.5, 0.5);\n                context.lineWidth = 1;\n                context.strokeStyle = 'rgba(255,165,0,0.9)';\n                context.setLineDash([1, 2]);\n\n                switch (item.type) {\n                  case 'body':\n                    // render body selections\n                    bounds = item.bounds;\n                    context.beginPath();\n                    context.rect(\n                      Math.floor(bounds.min.x - 3),\n                      Math.floor(bounds.min.y - 3),\n                      Math.floor(bounds.max.x - bounds.min.x + 6),\n                      Math.floor(bounds.max.y - bounds.min.y + 6)\n                    );\n                    context.closePath();\n                    context.stroke();\n\n                    break;\n\n                  case 'constraint':\n                    // render constraint selections\n                    var point = item.pointA;\n                    if (item.bodyA) point = item.pointB;\n                    context.beginPath();\n                    context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                    context.closePath();\n                    context.stroke();\n\n                    break;\n                }\n\n                context.setLineDash([]);\n                context.translate(-0.5, -0.5);\n              }\n\n              // render selection region\n              if (inspector.selectStart !== null) {\n                context.translate(0.5, 0.5);\n                context.lineWidth = 1;\n                context.strokeStyle = 'rgba(255,165,0,0.6)';\n                context.fillStyle = 'rgba(255,165,0,0.1)';\n                bounds = inspector.selectBounds;\n                context.beginPath();\n                context.rect(\n                  Math.floor(bounds.min.x),\n                  Math.floor(bounds.min.y),\n                  Math.floor(bounds.max.x - bounds.min.x),\n                  Math.floor(bounds.max.y - bounds.min.y)\n                );\n                context.closePath();\n                context.stroke();\n                context.fill();\n                context.translate(-0.5, -0.5);\n              }\n\n              if (options.hasBounds) context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n\n            /**\n             * Description\n             * @method _createCanvas\n             * @private\n             * @param {} width\n             * @param {} height\n             * @return canvas\n             */\n            var _createCanvas = function(width, height) {\n              var canvas = document.createElement('canvas');\n              canvas.width = width;\n              canvas.height = height;\n              canvas.oncontextmenu = function() {\n                return false;\n              };\n              canvas.onselectstart = function() {\n                return false;\n              };\n              return canvas;\n            };\n\n            /**\n             * Gets the pixel ratio of the canvas.\n             * @method _getPixelRatio\n             * @private\n             * @param {HTMLElement} canvas\n             * @return {Number} pixel ratio\n             */\n            var _getPixelRatio = function(canvas) {\n              var context = canvas.getContext('2d'),\n                devicePixelRatio = window.devicePixelRatio || 1,\n                backingStorePixelRatio =\n                  context.webkitBackingStorePixelRatio ||\n                  context.mozBackingStorePixelRatio ||\n                  context.msBackingStorePixelRatio ||\n                  context.oBackingStorePixelRatio ||\n                  context.backingStorePixelRatio ||\n                  1;\n\n              return devicePixelRatio / backingStorePixelRatio;\n            };\n\n            /**\n             * Gets the requested texture (an Image) via its path\n             * @method _getTexture\n             * @private\n             * @param {render} render\n             * @param {string} imagePath\n             * @return {Image} texture\n             */\n            var _getTexture = function(render, imagePath) {\n              var image = render.textures[imagePath];\n\n              if (image) return image;\n\n              image = render.textures[imagePath] = new Image();\n              image.src = imagePath;\n\n              return image;\n            };\n\n            /**\n             * Applies the background to the canvas using CSS.\n             * @method applyBackground\n             * @private\n             * @param {render} render\n             * @param {string} background\n             */\n            var _applyBackground = function(render, background) {\n              var cssBackground = background;\n\n              if (/(jpg|gif|png)$/.test(background))\n                cssBackground = 'url(' + background + ')';\n\n              render.canvas.style.background = cssBackground;\n              render.canvas.style.backgroundSize = 'contain';\n              render.currentBackground = background;\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired before rendering\n             *\n             * @event beforeRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after rendering\n             *\n             * @event afterRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A back-reference to the `Matter.Render` module.\n             *\n             * @property controller\n             * @type render\n             */\n\n            /**\n             * A reference to the `Matter.Engine` instance to be used.\n             *\n             * @property engine\n             * @type engine\n             */\n\n            /**\n             * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n             *\n             * @property element\n             * @type HTMLElement\n             * @default null\n             */\n\n            /**\n             * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n             *\n             * @property canvas\n             * @type HTMLCanvasElement\n             * @default null\n             */\n\n            /**\n             * The configuration options of the renderer.\n             *\n             * @property options\n             * @type {}\n             */\n\n            /**\n             * The target width in pixels of the `render.canvas` to be created.\n             *\n             * @property options.width\n             * @type number\n             * @default 800\n             */\n\n            /**\n             * The target height in pixels of the `render.canvas` to be created.\n             *\n             * @property options.height\n             * @type number\n             * @default 600\n             */\n\n            /**\n             * A flag that specifies if `render.bounds` should be used when rendering.\n             *\n             * @property options.hasBounds\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Bounds` object that specifies the drawing view region.\n             * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n             * This allows for creating views that can pan or zoom around the scene.\n             * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n             *\n             * @property bounds\n             * @type bounds\n             */\n\n            /**\n             * The 2d rendering context from the `render.canvas` element.\n             *\n             * @property context\n             * @type CanvasRenderingContext2D\n             */\n\n            /**\n             * The sprite texture cache.\n             *\n             * @property textures\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../collision/Grid': 6,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../core/Mouse': 19,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n        },\n      ],\n      32: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.RenderPixi` module is an example renderer using pixi.js.\n           * See also `Matter.Render` for a canvas based renderer.\n           *\n           * @class RenderPixi\n           * @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n           * It will likely be moved to its own repository (but maintenance will be limited).\n           */\n\n          var RenderPixi = {};\n\n          module.exports = RenderPixi;\n\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Composite = _dereq_('../body/Composite');\n          var Common = _dereq_('../core/Common');\n          var Events = _dereq_('../core/Events');\n          var Vector = _dereq_('../geometry/Vector');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                function(callback) {\n                  window.setTimeout(function() {\n                    callback(Common.now());\n                  }, 1000 / 60);\n                };\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            /**\n             * Creates a new Pixi.js WebGL renderer\n             * @method create\n             * @param {object} options\n             * @return {RenderPixi} A new renderer\n             * @deprecated\n             */\n            RenderPixi.create = function(options) {\n              Common.warn(\n                'RenderPixi.create: Matter.RenderPixi is deprecated (see docs)'\n              );\n\n              var defaults = {\n                controller: RenderPixi,\n                engine: null,\n                element: null,\n                frameRequestId: null,\n                canvas: null,\n                renderer: null,\n                container: null,\n                spriteContainer: null,\n                pixiOptions: null,\n                options: {\n                  width: 800,\n                  height: 600,\n                  background: '#fafafa',\n                  wireframeBackground: '#222',\n                  hasBounds: false,\n                  enabled: true,\n                  wireframes: true,\n                  showSleeping: true,\n                  showDebug: false,\n                  showBroadphase: false,\n                  showBounds: false,\n                  showVelocity: false,\n                  showCollisions: false,\n                  showAxes: false,\n                  showPositions: false,\n                  showAngleIndicator: false,\n                  showIds: false,\n                  showShadows: false,\n                },\n              };\n\n              var render = Common.extend(defaults, options),\n                transparent =\n                  !render.options.wireframes &&\n                  render.options.background === 'transparent';\n\n              // init pixi\n              render.pixiOptions = render.pixiOptions || {\n                view: render.canvas,\n                transparent: transparent,\n                antialias: true,\n                backgroundColor: options.background,\n              };\n\n              render.mouse = options.mouse;\n              render.engine = options.engine;\n              render.renderer =\n                render.renderer ||\n                new PIXI.WebGLRenderer(\n                  render.options.width,\n                  render.options.height,\n                  render.pixiOptions\n                );\n              render.container = render.container || new PIXI.Container();\n              render.spriteContainer =\n                render.spriteContainer || new PIXI.Container();\n              render.canvas = render.canvas || render.renderer.view;\n              render.bounds = render.bounds || {\n                min: {\n                  x: 0,\n                  y: 0,\n                },\n                max: {\n                  x: render.options.width,\n                  y: render.options.height,\n                },\n              };\n\n              // event listeners\n              Events.on(render.engine, 'beforeUpdate', function() {\n                RenderPixi.clear(render);\n              });\n\n              // caches\n              render.textures = {};\n              render.sprites = {};\n              render.primitives = {};\n\n              // use a sprite batch for performance\n              render.container.addChild(render.spriteContainer);\n\n              // insert canvas\n              if (Common.isElement(render.element)) {\n                render.element.appendChild(render.canvas);\n              } else {\n                Common.warn(\n                  'No \"render.element\" passed, \"render.canvas\" was not inserted into document.'\n                );\n              }\n\n              // prevent menus on canvas\n              render.canvas.oncontextmenu = function() {\n                return false;\n              };\n              render.canvas.onselectstart = function() {\n                return false;\n              };\n\n              return render;\n            };\n\n            /**\n             * Continuously updates the render canvas on the `requestAnimationFrame` event.\n             * @method run\n             * @param {render} render\n             * @deprecated\n             */\n            RenderPixi.run = function(render) {\n              (function loop(time) {\n                render.frameRequestId = _requestAnimationFrame(loop);\n                RenderPixi.world(render);\n              })();\n            };\n\n            /**\n             * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n             * @method stop\n             * @param {render} render\n             * @deprecated\n             */\n            RenderPixi.stop = function(render) {\n              _cancelAnimationFrame(render.frameRequestId);\n            };\n\n            /**\n             * Clears the scene graph\n             * @method clear\n             * @param {RenderPixi} render\n             * @deprecated\n             */\n            RenderPixi.clear = function(render) {\n              var container = render.container,\n                spriteContainer = render.spriteContainer;\n\n              // clear stage container\n              while (container.children[0]) {\n                container.removeChild(container.children[0]);\n              }\n\n              // clear sprite batch\n              while (spriteContainer.children[0]) {\n                spriteContainer.removeChild(spriteContainer.children[0]);\n              }\n\n              var bgSprite = render.sprites['bg-0'];\n\n              // clear caches\n              render.textures = {};\n              render.sprites = {};\n              render.primitives = {};\n\n              // set background sprite\n              render.sprites['bg-0'] = bgSprite;\n              if (bgSprite) container.addChildAt(bgSprite, 0);\n\n              // add sprite batch back into container\n              render.container.addChild(render.spriteContainer);\n\n              // reset background state\n              render.currentBackground = null;\n\n              // reset bounds transforms\n              container.scale.set(1, 1);\n              container.position.set(0, 0);\n            };\n\n            /**\n             * Sets the background of the canvas\n             * @method setBackground\n             * @param {RenderPixi} render\n             * @param {string} background\n             * @deprecated\n             */\n            RenderPixi.setBackground = function(render, background) {\n              if (render.currentBackground !== background) {\n                var isColor =\n                    background.indexOf && background.indexOf('#') !== -1,\n                  bgSprite = render.sprites['bg-0'];\n\n                if (isColor) {\n                  // if solid background color\n                  var color = Common.colorToNumber(background);\n                  render.renderer.backgroundColor = color;\n\n                  // remove background sprite if existing\n                  if (bgSprite) render.container.removeChild(bgSprite);\n                } else {\n                  // initialise background sprite if needed\n                  if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(\n                      texture\n                    );\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                  }\n                }\n\n                render.currentBackground = background;\n              }\n            };\n\n            /**\n             * Description\n             * @method world\n             * @param {engine} engine\n             * @deprecated\n             */\n            RenderPixi.world = function(render) {\n              var engine = render.engine,\n                world = engine.world,\n                renderer = render.renderer,\n                container = render.container,\n                options = render.options,\n                bodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world),\n                constraints = [],\n                i;\n\n              if (options.wireframes) {\n                RenderPixi.setBackground(render, options.wireframeBackground);\n              } else {\n                RenderPixi.setBackground(render, options.background);\n              }\n\n              // handle bounds\n              var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n              if (options.hasBounds) {\n                // Hide bodies that are not in view\n                for (i = 0; i < bodies.length; i++) {\n                  var body = bodies[i];\n                  body.render.sprite.visible = Bounds.overlaps(\n                    body.bounds,\n                    render.bounds\n                  );\n                }\n\n                // filter out constraints that are not in view\n                for (i = 0; i < allConstraints.length; i++) {\n                  var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                  if (bodyA)\n                    pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                  if (bodyB)\n                    pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                  if (!pointAWorld || !pointBWorld) continue;\n\n                  if (\n                    Bounds.contains(render.bounds, pointAWorld) ||\n                    Bounds.contains(render.bounds, pointBWorld)\n                  )\n                    constraints.push(constraint);\n                }\n\n                // transform the view\n                container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n                container.position.set(\n                  -render.bounds.min.x * (1 / boundsScaleX),\n                  -render.bounds.min.y * (1 / boundsScaleY)\n                );\n              } else {\n                constraints = allConstraints;\n              }\n\n              for (i = 0; i < bodies.length; i++)\n                RenderPixi.body(render, bodies[i]);\n\n              for (i = 0; i < constraints.length; i++)\n                RenderPixi.constraint(render, constraints[i]);\n\n              renderer.render(container);\n            };\n\n            /**\n             * Description\n             * @method constraint\n             * @param {engine} engine\n             * @param {constraint} constraint\n             * @deprecated\n             */\n            RenderPixi.constraint = function(render, constraint) {\n              var engine = render.engine,\n                bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                pointA = constraint.pointA,\n                pointB = constraint.pointB,\n                container = render.container,\n                constraintRender = constraint.render,\n                primitiveId = 'c-' + constraint.id,\n                primitive = render.primitives[primitiveId];\n\n              // initialise constraint primitive if not existing\n              if (!primitive)\n                primitive = render.primitives[\n                  primitiveId\n                ] = new PIXI.Graphics();\n\n              // don't render if constraint does not have two end points\n              if (\n                !constraintRender.visible ||\n                !constraint.pointA ||\n                !constraint.pointB\n              ) {\n                primitive.clear();\n                return;\n              }\n\n              // add to scene graph if not already there\n              if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n              // render the constraint on every update, since they can change dynamically\n              primitive.clear();\n              primitive.beginFill(0, 0);\n              primitive.lineStyle(\n                constraintRender.lineWidth,\n                Common.colorToNumber(constraintRender.strokeStyle),\n                1\n              );\n\n              if (bodyA) {\n                primitive.moveTo(\n                  bodyA.position.x + pointA.x,\n                  bodyA.position.y + pointA.y\n                );\n              } else {\n                primitive.moveTo(pointA.x, pointA.y);\n              }\n\n              if (bodyB) {\n                primitive.lineTo(\n                  bodyB.position.x + pointB.x,\n                  bodyB.position.y + pointB.y\n                );\n              } else {\n                primitive.lineTo(pointB.x, pointB.y);\n              }\n\n              primitive.endFill();\n            };\n\n            /**\n             * Description\n             * @method body\n             * @param {engine} engine\n             * @param {body} body\n             * @deprecated\n             */\n            RenderPixi.body = function(render, body) {\n              var engine = render.engine,\n                bodyRender = body.render;\n\n              if (!bodyRender.visible) return;\n\n              if (bodyRender.sprite && bodyRender.sprite.texture) {\n                var spriteId = 'b-' + body.id,\n                  sprite = render.sprites[spriteId],\n                  spriteContainer = render.spriteContainer;\n\n                // initialise body sprite if not existing\n                if (!sprite)\n                  sprite = render.sprites[spriteId] = _createBodySprite(\n                    render,\n                    body\n                  );\n\n                // add to scene graph if not already there\n                if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                  spriteContainer.addChild(sprite);\n\n                // update body sprite\n                sprite.position.x = body.position.x;\n                sprite.position.y = body.position.y;\n                sprite.rotation = body.angle;\n                sprite.scale.x = bodyRender.sprite.xScale || 1;\n                sprite.scale.y = bodyRender.sprite.yScale || 1;\n              } else {\n                var primitiveId = 'b-' + body.id,\n                  primitive = render.primitives[primitiveId],\n                  container = render.container;\n\n                // initialise body primitive if not existing\n                if (!primitive) {\n                  primitive = render.primitives[\n                    primitiveId\n                  ] = _createBodyPrimitive(render, body);\n                  primitive.initialAngle = body.angle;\n                }\n\n                // add to scene graph if not already there\n                if (Common.indexOf(container.children, primitive) === -1)\n                  container.addChild(primitive);\n\n                // update body primitive\n                primitive.position.x = body.position.x;\n                primitive.position.y = body.position.y;\n                primitive.rotation = body.angle - primitive.initialAngle;\n              }\n            };\n\n            /**\n             * Creates a body sprite\n             * @method _createBodySprite\n             * @private\n             * @param {RenderPixi} render\n             * @param {body} body\n             * @return {PIXI.Sprite} sprite\n             * @deprecated\n             */\n            var _createBodySprite = function(render, body) {\n              var bodyRender = body.render,\n                texturePath = bodyRender.sprite.texture,\n                texture = _getTexture(render, texturePath),\n                sprite = new PIXI.Sprite(texture);\n\n              sprite.anchor.x = body.render.sprite.xOffset;\n              sprite.anchor.y = body.render.sprite.yOffset;\n\n              return sprite;\n            };\n\n            /**\n             * Creates a body primitive\n             * @method _createBodyPrimitive\n             * @private\n             * @param {RenderPixi} render\n             * @param {body} body\n             * @return {PIXI.Graphics} graphics\n             * @deprecated\n             */\n            var _createBodyPrimitive = function(render, body) {\n              var bodyRender = body.render,\n                options = render.options,\n                primitive = new PIXI.Graphics(),\n                fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n                strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n                strokeStyleIndicator = Common.colorToNumber(\n                  bodyRender.strokeStyle\n                ),\n                strokeStyleWireframe = Common.colorToNumber('#bbb'),\n                strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n                part;\n\n              primitive.clear();\n\n              // handle compound parts\n              for (\n                var k = body.parts.length > 1 ? 1 : 0;\n                k < body.parts.length;\n                k++\n              ) {\n                part = body.parts[k];\n\n                if (!options.wireframes) {\n                  primitive.beginFill(fillStyle, 1);\n                  primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n                } else {\n                  primitive.beginFill(0, 0);\n                  primitive.lineStyle(1, strokeStyleWireframe, 1);\n                }\n\n                primitive.moveTo(\n                  part.vertices[0].x - body.position.x,\n                  part.vertices[0].y - body.position.y\n                );\n\n                for (var j = 1; j < part.vertices.length; j++) {\n                  primitive.lineTo(\n                    part.vertices[j].x - body.position.x,\n                    part.vertices[j].y - body.position.y\n                  );\n                }\n\n                primitive.lineTo(\n                  part.vertices[0].x - body.position.x,\n                  part.vertices[0].y - body.position.y\n                );\n\n                primitive.endFill();\n\n                // angle indicator\n                if (options.showAngleIndicator || options.showAxes) {\n                  primitive.beginFill(0, 0);\n\n                  if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                  } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                  }\n\n                  primitive.moveTo(\n                    part.position.x - body.position.x,\n                    part.position.y - body.position.y\n                  );\n                  primitive.lineTo(\n                    (part.vertices[0].x +\n                      part.vertices[part.vertices.length - 1].x) /\n                      2 -\n                      body.position.x,\n                    (part.vertices[0].y +\n                      part.vertices[part.vertices.length - 1].y) /\n                      2 -\n                      body.position.y\n                  );\n\n                  primitive.endFill();\n                }\n              }\n\n              return primitive;\n            };\n\n            /**\n             * Gets the requested texture (a PIXI.Texture) via its path\n             * @method _getTexture\n             * @private\n             * @param {RenderPixi} render\n             * @param {string} imagePath\n             * @return {PIXI.Texture} texture\n             * @deprecated\n             */\n            var _getTexture = function(render, imagePath) {\n              var texture = render.textures[imagePath];\n\n              if (!texture)\n                texture = render.textures[imagePath] = PIXI.Texture.fromImage(\n                  imagePath\n                );\n\n              return texture;\n            };\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n        },\n      ],\n    },\n    {},\n    [30]\n  )(30);\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3244,"column":0},"generated":{"line":3246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3245,"column":0},"generated":{"line":3247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3246,"column":0},"generated":{"line":3248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3247,"column":0},"generated":{"line":3249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3248,"column":0},"generated":{"line":3250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3249,"column":0},"generated":{"line":3251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3250,"column":0},"generated":{"line":3252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3251,"column":0},"generated":{"line":3253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3252,"column":0},"generated":{"line":3254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3253,"column":0},"generated":{"line":3255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3254,"column":0},"generated":{"line":3256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3255,"column":0},"generated":{"line":3257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3256,"column":0},"generated":{"line":3258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3257,"column":0},"generated":{"line":3259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3258,"column":0},"generated":{"line":3260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3259,"column":0},"generated":{"line":3261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3260,"column":0},"generated":{"line":3262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3261,"column":0},"generated":{"line":3263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3262,"column":0},"generated":{"line":3264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3263,"column":0},"generated":{"line":3265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3264,"column":0},"generated":{"line":3266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3265,"column":0},"generated":{"line":3267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3266,"column":0},"generated":{"line":3268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3267,"column":0},"generated":{"line":3269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3268,"column":0},"generated":{"line":3270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3269,"column":0},"generated":{"line":3271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3270,"column":0},"generated":{"line":3272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3271,"column":0},"generated":{"line":3273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3272,"column":0},"generated":{"line":3274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3273,"column":0},"generated":{"line":3275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3274,"column":0},"generated":{"line":3276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3275,"column":0},"generated":{"line":3277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3276,"column":0},"generated":{"line":3278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3277,"column":0},"generated":{"line":3279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3278,"column":0},"generated":{"line":3280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3279,"column":0},"generated":{"line":3281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3280,"column":0},"generated":{"line":3282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3281,"column":0},"generated":{"line":3283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3282,"column":0},"generated":{"line":3284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3283,"column":0},"generated":{"line":3285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3284,"column":0},"generated":{"line":3286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3285,"column":0},"generated":{"line":3287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3286,"column":0},"generated":{"line":3288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3287,"column":0},"generated":{"line":3289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3288,"column":0},"generated":{"line":3290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3289,"column":0},"generated":{"line":3291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3290,"column":0},"generated":{"line":3292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3291,"column":0},"generated":{"line":3293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3292,"column":0},"generated":{"line":3294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3293,"column":0},"generated":{"line":3295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3294,"column":0},"generated":{"line":3296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3295,"column":0},"generated":{"line":3297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3296,"column":0},"generated":{"line":3298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3297,"column":0},"generated":{"line":3299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3298,"column":0},"generated":{"line":3300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3299,"column":0},"generated":{"line":3301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3300,"column":0},"generated":{"line":3302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3301,"column":0},"generated":{"line":3303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3302,"column":0},"generated":{"line":3304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3303,"column":0},"generated":{"line":3305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3304,"column":0},"generated":{"line":3306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3305,"column":0},"generated":{"line":3307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3306,"column":0},"generated":{"line":3308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3307,"column":0},"generated":{"line":3309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3308,"column":0},"generated":{"line":3310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3309,"column":0},"generated":{"line":3311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3310,"column":0},"generated":{"line":3312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3311,"column":0},"generated":{"line":3313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3312,"column":0},"generated":{"line":3314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3313,"column":0},"generated":{"line":3315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3314,"column":0},"generated":{"line":3316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3315,"column":0},"generated":{"line":3317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3316,"column":0},"generated":{"line":3318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3317,"column":0},"generated":{"line":3319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3318,"column":0},"generated":{"line":3320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3319,"column":0},"generated":{"line":3321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3320,"column":0},"generated":{"line":3322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3321,"column":0},"generated":{"line":3323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3322,"column":0},"generated":{"line":3324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3323,"column":0},"generated":{"line":3325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3324,"column":0},"generated":{"line":3326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3325,"column":0},"generated":{"line":3327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3326,"column":0},"generated":{"line":3328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3327,"column":0},"generated":{"line":3329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3328,"column":0},"generated":{"line":3330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3329,"column":0},"generated":{"line":3331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3330,"column":0},"generated":{"line":3332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3331,"column":0},"generated":{"line":3333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3332,"column":0},"generated":{"line":3334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3333,"column":0},"generated":{"line":3335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3334,"column":0},"generated":{"line":3336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3335,"column":0},"generated":{"line":3337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3336,"column":0},"generated":{"line":3338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3337,"column":0},"generated":{"line":3339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3338,"column":0},"generated":{"line":3340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3339,"column":0},"generated":{"line":3341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3340,"column":0},"generated":{"line":3342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3341,"column":0},"generated":{"line":3343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3342,"column":0},"generated":{"line":3344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3343,"column":0},"generated":{"line":3345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3344,"column":0},"generated":{"line":3346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3345,"column":0},"generated":{"line":3347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3346,"column":0},"generated":{"line":3348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3347,"column":0},"generated":{"line":3349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3348,"column":0},"generated":{"line":3350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3349,"column":0},"generated":{"line":3351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3350,"column":0},"generated":{"line":3352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3351,"column":0},"generated":{"line":3353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3352,"column":0},"generated":{"line":3354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3353,"column":0},"generated":{"line":3355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3354,"column":0},"generated":{"line":3356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3355,"column":0},"generated":{"line":3357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3356,"column":0},"generated":{"line":3358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3357,"column":0},"generated":{"line":3359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3358,"column":0},"generated":{"line":3360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3359,"column":0},"generated":{"line":3361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3360,"column":0},"generated":{"line":3362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3361,"column":0},"generated":{"line":3363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3362,"column":0},"generated":{"line":3364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3363,"column":0},"generated":{"line":3365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3364,"column":0},"generated":{"line":3366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3365,"column":0},"generated":{"line":3367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3366,"column":0},"generated":{"line":3368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3367,"column":0},"generated":{"line":3369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3368,"column":0},"generated":{"line":3370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3369,"column":0},"generated":{"line":3371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3370,"column":0},"generated":{"line":3372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3371,"column":0},"generated":{"line":3373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3372,"column":0},"generated":{"line":3374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3373,"column":0},"generated":{"line":3375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3374,"column":0},"generated":{"line":3376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3375,"column":0},"generated":{"line":3377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3376,"column":0},"generated":{"line":3378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3377,"column":0},"generated":{"line":3379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3378,"column":0},"generated":{"line":3380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3379,"column":0},"generated":{"line":3381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3380,"column":0},"generated":{"line":3382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3381,"column":0},"generated":{"line":3383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3382,"column":0},"generated":{"line":3384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3383,"column":0},"generated":{"line":3385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3384,"column":0},"generated":{"line":3386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3385,"column":0},"generated":{"line":3387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3386,"column":0},"generated":{"line":3388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3387,"column":0},"generated":{"line":3389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3388,"column":0},"generated":{"line":3390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3389,"column":0},"generated":{"line":3391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3390,"column":0},"generated":{"line":3392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3391,"column":0},"generated":{"line":3393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3392,"column":0},"generated":{"line":3394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3393,"column":0},"generated":{"line":3395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3394,"column":0},"generated":{"line":3396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3395,"column":0},"generated":{"line":3397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3396,"column":0},"generated":{"line":3398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3397,"column":0},"generated":{"line":3399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3398,"column":0},"generated":{"line":3400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3399,"column":0},"generated":{"line":3401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3400,"column":0},"generated":{"line":3402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3401,"column":0},"generated":{"line":3403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3402,"column":0},"generated":{"line":3404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3403,"column":0},"generated":{"line":3405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3404,"column":0},"generated":{"line":3406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3405,"column":0},"generated":{"line":3407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3406,"column":0},"generated":{"line":3408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3407,"column":0},"generated":{"line":3409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3408,"column":0},"generated":{"line":3410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3409,"column":0},"generated":{"line":3411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3410,"column":0},"generated":{"line":3412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3411,"column":0},"generated":{"line":3413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3412,"column":0},"generated":{"line":3414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3413,"column":0},"generated":{"line":3415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3414,"column":0},"generated":{"line":3416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3415,"column":0},"generated":{"line":3417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3416,"column":0},"generated":{"line":3418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3417,"column":0},"generated":{"line":3419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3418,"column":0},"generated":{"line":3420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3419,"column":0},"generated":{"line":3421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3420,"column":0},"generated":{"line":3422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3421,"column":0},"generated":{"line":3423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3422,"column":0},"generated":{"line":3424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3423,"column":0},"generated":{"line":3425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3424,"column":0},"generated":{"line":3426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3425,"column":0},"generated":{"line":3427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3426,"column":0},"generated":{"line":3428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3427,"column":0},"generated":{"line":3429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3428,"column":0},"generated":{"line":3430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3429,"column":0},"generated":{"line":3431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3430,"column":0},"generated":{"line":3432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3431,"column":0},"generated":{"line":3433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3432,"column":0},"generated":{"line":3434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3433,"column":0},"generated":{"line":3435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3434,"column":0},"generated":{"line":3436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3435,"column":0},"generated":{"line":3437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3436,"column":0},"generated":{"line":3438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3437,"column":0},"generated":{"line":3439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3438,"column":0},"generated":{"line":3440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3439,"column":0},"generated":{"line":3441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3440,"column":0},"generated":{"line":3442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3441,"column":0},"generated":{"line":3443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3442,"column":0},"generated":{"line":3444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3443,"column":0},"generated":{"line":3445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3444,"column":0},"generated":{"line":3446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3445,"column":0},"generated":{"line":3447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3446,"column":0},"generated":{"line":3448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3447,"column":0},"generated":{"line":3449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3448,"column":0},"generated":{"line":3450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3449,"column":0},"generated":{"line":3451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3450,"column":0},"generated":{"line":3452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3451,"column":0},"generated":{"line":3453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3452,"column":0},"generated":{"line":3454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3453,"column":0},"generated":{"line":3455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3454,"column":0},"generated":{"line":3456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3455,"column":0},"generated":{"line":3457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3456,"column":0},"generated":{"line":3458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3457,"column":0},"generated":{"line":3459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3458,"column":0},"generated":{"line":3460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3459,"column":0},"generated":{"line":3461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3460,"column":0},"generated":{"line":3462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3461,"column":0},"generated":{"line":3463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3462,"column":0},"generated":{"line":3464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3463,"column":0},"generated":{"line":3465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3464,"column":0},"generated":{"line":3466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3465,"column":0},"generated":{"line":3467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3466,"column":0},"generated":{"line":3468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3467,"column":0},"generated":{"line":3469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3468,"column":0},"generated":{"line":3470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3469,"column":0},"generated":{"line":3471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3470,"column":0},"generated":{"line":3472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3471,"column":0},"generated":{"line":3473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3472,"column":0},"generated":{"line":3474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3473,"column":0},"generated":{"line":3475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3474,"column":0},"generated":{"line":3476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3475,"column":0},"generated":{"line":3477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3476,"column":0},"generated":{"line":3478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3477,"column":0},"generated":{"line":3479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3478,"column":0},"generated":{"line":3480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3479,"column":0},"generated":{"line":3481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3480,"column":0},"generated":{"line":3482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3481,"column":0},"generated":{"line":3483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3482,"column":0},"generated":{"line":3484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3483,"column":0},"generated":{"line":3485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3484,"column":0},"generated":{"line":3486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3485,"column":0},"generated":{"line":3487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3486,"column":0},"generated":{"line":3488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3487,"column":0},"generated":{"line":3489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3488,"column":0},"generated":{"line":3490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3489,"column":0},"generated":{"line":3491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3490,"column":0},"generated":{"line":3492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3491,"column":0},"generated":{"line":3493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3492,"column":0},"generated":{"line":3494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3493,"column":0},"generated":{"line":3495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3494,"column":0},"generated":{"line":3496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3495,"column":0},"generated":{"line":3497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3496,"column":0},"generated":{"line":3498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3497,"column":0},"generated":{"line":3499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3498,"column":0},"generated":{"line":3500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3499,"column":0},"generated":{"line":3501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3500,"column":0},"generated":{"line":3502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3501,"column":0},"generated":{"line":3503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3502,"column":0},"generated":{"line":3504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3503,"column":0},"generated":{"line":3505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3504,"column":0},"generated":{"line":3506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3505,"column":0},"generated":{"line":3507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3506,"column":0},"generated":{"line":3508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3507,"column":0},"generated":{"line":3509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3508,"column":0},"generated":{"line":3510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3509,"column":0},"generated":{"line":3511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3510,"column":0},"generated":{"line":3512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3511,"column":0},"generated":{"line":3513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3512,"column":0},"generated":{"line":3514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3513,"column":0},"generated":{"line":3515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3514,"column":0},"generated":{"line":3516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3515,"column":0},"generated":{"line":3517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3516,"column":0},"generated":{"line":3518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3517,"column":0},"generated":{"line":3519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3518,"column":0},"generated":{"line":3520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3519,"column":0},"generated":{"line":3521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3520,"column":0},"generated":{"line":3522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3521,"column":0},"generated":{"line":3523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3522,"column":0},"generated":{"line":3524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3523,"column":0},"generated":{"line":3525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3524,"column":0},"generated":{"line":3526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3525,"column":0},"generated":{"line":3527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3526,"column":0},"generated":{"line":3528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3527,"column":0},"generated":{"line":3529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3528,"column":0},"generated":{"line":3530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3529,"column":0},"generated":{"line":3531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3530,"column":0},"generated":{"line":3532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3531,"column":0},"generated":{"line":3533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3532,"column":0},"generated":{"line":3534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3533,"column":0},"generated":{"line":3535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3534,"column":0},"generated":{"line":3536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3535,"column":0},"generated":{"line":3537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3536,"column":0},"generated":{"line":3538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3537,"column":0},"generated":{"line":3539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3538,"column":0},"generated":{"line":3540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3539,"column":0},"generated":{"line":3541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3540,"column":0},"generated":{"line":3542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3541,"column":0},"generated":{"line":3543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3542,"column":0},"generated":{"line":3544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3543,"column":0},"generated":{"line":3545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3544,"column":0},"generated":{"line":3546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3545,"column":0},"generated":{"line":3547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3546,"column":0},"generated":{"line":3548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3547,"column":0},"generated":{"line":3549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3548,"column":0},"generated":{"line":3550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3549,"column":0},"generated":{"line":3551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3550,"column":0},"generated":{"line":3552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3551,"column":0},"generated":{"line":3553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3552,"column":0},"generated":{"line":3554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3553,"column":0},"generated":{"line":3555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3554,"column":0},"generated":{"line":3556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3555,"column":0},"generated":{"line":3557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3556,"column":0},"generated":{"line":3558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3557,"column":0},"generated":{"line":3559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3558,"column":0},"generated":{"line":3560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3559,"column":0},"generated":{"line":3561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3560,"column":0},"generated":{"line":3562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3561,"column":0},"generated":{"line":3563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3562,"column":0},"generated":{"line":3564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3563,"column":0},"generated":{"line":3565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3564,"column":0},"generated":{"line":3566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3565,"column":0},"generated":{"line":3567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3566,"column":0},"generated":{"line":3568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3567,"column":0},"generated":{"line":3569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3568,"column":0},"generated":{"line":3570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3569,"column":0},"generated":{"line":3571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3570,"column":0},"generated":{"line":3572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3571,"column":0},"generated":{"line":3573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3572,"column":0},"generated":{"line":3574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3573,"column":0},"generated":{"line":3575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3574,"column":0},"generated":{"line":3576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3575,"column":0},"generated":{"line":3577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3576,"column":0},"generated":{"line":3578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3577,"column":0},"generated":{"line":3579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3578,"column":0},"generated":{"line":3580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3579,"column":0},"generated":{"line":3581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3580,"column":0},"generated":{"line":3582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3581,"column":0},"generated":{"line":3583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3582,"column":0},"generated":{"line":3584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3583,"column":0},"generated":{"line":3585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3584,"column":0},"generated":{"line":3586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3585,"column":0},"generated":{"line":3587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3586,"column":0},"generated":{"line":3588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3587,"column":0},"generated":{"line":3589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3588,"column":0},"generated":{"line":3590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3589,"column":0},"generated":{"line":3591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3590,"column":0},"generated":{"line":3592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3591,"column":0},"generated":{"line":3593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3592,"column":0},"generated":{"line":3594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3593,"column":0},"generated":{"line":3595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3594,"column":0},"generated":{"line":3596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3595,"column":0},"generated":{"line":3597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3596,"column":0},"generated":{"line":3598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3597,"column":0},"generated":{"line":3599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3598,"column":0},"generated":{"line":3600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3599,"column":0},"generated":{"line":3601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3600,"column":0},"generated":{"line":3602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3601,"column":0},"generated":{"line":3603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3602,"column":0},"generated":{"line":3604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3603,"column":0},"generated":{"line":3605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3604,"column":0},"generated":{"line":3606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3605,"column":0},"generated":{"line":3607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3606,"column":0},"generated":{"line":3608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3607,"column":0},"generated":{"line":3609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3608,"column":0},"generated":{"line":3610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3609,"column":0},"generated":{"line":3611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3610,"column":0},"generated":{"line":3612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3611,"column":0},"generated":{"line":3613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3612,"column":0},"generated":{"line":3614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3613,"column":0},"generated":{"line":3615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3614,"column":0},"generated":{"line":3616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3615,"column":0},"generated":{"line":3617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3616,"column":0},"generated":{"line":3618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3617,"column":0},"generated":{"line":3619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3618,"column":0},"generated":{"line":3620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3619,"column":0},"generated":{"line":3621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3620,"column":0},"generated":{"line":3622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3621,"column":0},"generated":{"line":3623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3622,"column":0},"generated":{"line":3624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3623,"column":0},"generated":{"line":3625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3624,"column":0},"generated":{"line":3626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3625,"column":0},"generated":{"line":3627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3626,"column":0},"generated":{"line":3628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3627,"column":0},"generated":{"line":3629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3628,"column":0},"generated":{"line":3630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3629,"column":0},"generated":{"line":3631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3630,"column":0},"generated":{"line":3632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3631,"column":0},"generated":{"line":3633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3632,"column":0},"generated":{"line":3634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3633,"column":0},"generated":{"line":3635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3634,"column":0},"generated":{"line":3636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3635,"column":0},"generated":{"line":3637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3636,"column":0},"generated":{"line":3638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3637,"column":0},"generated":{"line":3639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3638,"column":0},"generated":{"line":3640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3639,"column":0},"generated":{"line":3641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3640,"column":0},"generated":{"line":3642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3641,"column":0},"generated":{"line":3643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3642,"column":0},"generated":{"line":3644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3643,"column":0},"generated":{"line":3645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3644,"column":0},"generated":{"line":3646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3645,"column":0},"generated":{"line":3647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3646,"column":0},"generated":{"line":3648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3647,"column":0},"generated":{"line":3649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3648,"column":0},"generated":{"line":3650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3649,"column":0},"generated":{"line":3651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3650,"column":0},"generated":{"line":3652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3651,"column":0},"generated":{"line":3653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3652,"column":0},"generated":{"line":3654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3653,"column":0},"generated":{"line":3655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3654,"column":0},"generated":{"line":3656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3655,"column":0},"generated":{"line":3657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3656,"column":0},"generated":{"line":3658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3657,"column":0},"generated":{"line":3659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3658,"column":0},"generated":{"line":3660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3659,"column":0},"generated":{"line":3661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3660,"column":0},"generated":{"line":3662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3661,"column":0},"generated":{"line":3663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3662,"column":0},"generated":{"line":3664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3663,"column":0},"generated":{"line":3665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3664,"column":0},"generated":{"line":3666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3665,"column":0},"generated":{"line":3667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3666,"column":0},"generated":{"line":3668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3667,"column":0},"generated":{"line":3669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3668,"column":0},"generated":{"line":3670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3669,"column":0},"generated":{"line":3671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3670,"column":0},"generated":{"line":3672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3671,"column":0},"generated":{"line":3673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3672,"column":0},"generated":{"line":3674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3673,"column":0},"generated":{"line":3675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3674,"column":0},"generated":{"line":3676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3675,"column":0},"generated":{"line":3677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3676,"column":0},"generated":{"line":3678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3677,"column":0},"generated":{"line":3679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3678,"column":0},"generated":{"line":3680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3679,"column":0},"generated":{"line":3681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3680,"column":0},"generated":{"line":3682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3681,"column":0},"generated":{"line":3683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3682,"column":0},"generated":{"line":3684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3683,"column":0},"generated":{"line":3685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3684,"column":0},"generated":{"line":3686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3685,"column":0},"generated":{"line":3687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3686,"column":0},"generated":{"line":3688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3687,"column":0},"generated":{"line":3689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3688,"column":0},"generated":{"line":3690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3689,"column":0},"generated":{"line":3691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3690,"column":0},"generated":{"line":3692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3691,"column":0},"generated":{"line":3693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3692,"column":0},"generated":{"line":3694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3693,"column":0},"generated":{"line":3695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3694,"column":0},"generated":{"line":3696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3695,"column":0},"generated":{"line":3697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3696,"column":0},"generated":{"line":3698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3697,"column":0},"generated":{"line":3699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3698,"column":0},"generated":{"line":3700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3699,"column":0},"generated":{"line":3701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3700,"column":0},"generated":{"line":3702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3701,"column":0},"generated":{"line":3703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3702,"column":0},"generated":{"line":3704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3703,"column":0},"generated":{"line":3705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3704,"column":0},"generated":{"line":3706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3705,"column":0},"generated":{"line":3707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3706,"column":0},"generated":{"line":3708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3707,"column":0},"generated":{"line":3709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3708,"column":0},"generated":{"line":3710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3709,"column":0},"generated":{"line":3711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3710,"column":0},"generated":{"line":3712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3711,"column":0},"generated":{"line":3713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3712,"column":0},"generated":{"line":3714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3713,"column":0},"generated":{"line":3715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3714,"column":0},"generated":{"line":3716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3715,"column":0},"generated":{"line":3717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3716,"column":0},"generated":{"line":3718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3717,"column":0},"generated":{"line":3719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3718,"column":0},"generated":{"line":3720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3719,"column":0},"generated":{"line":3721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3720,"column":0},"generated":{"line":3722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3721,"column":0},"generated":{"line":3723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3722,"column":0},"generated":{"line":3724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3723,"column":0},"generated":{"line":3725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3724,"column":0},"generated":{"line":3726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3725,"column":0},"generated":{"line":3727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3726,"column":0},"generated":{"line":3728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3727,"column":0},"generated":{"line":3729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3728,"column":0},"generated":{"line":3730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3729,"column":0},"generated":{"line":3731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3730,"column":0},"generated":{"line":3732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3731,"column":0},"generated":{"line":3733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3732,"column":0},"generated":{"line":3734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3733,"column":0},"generated":{"line":3735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3734,"column":0},"generated":{"line":3736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3735,"column":0},"generated":{"line":3737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3736,"column":0},"generated":{"line":3738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3737,"column":0},"generated":{"line":3739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3738,"column":0},"generated":{"line":3740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3739,"column":0},"generated":{"line":3741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3740,"column":0},"generated":{"line":3742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3741,"column":0},"generated":{"line":3743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3742,"column":0},"generated":{"line":3744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3743,"column":0},"generated":{"line":3745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3744,"column":0},"generated":{"line":3746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3745,"column":0},"generated":{"line":3747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3746,"column":0},"generated":{"line":3748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3747,"column":0},"generated":{"line":3749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3748,"column":0},"generated":{"line":3750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3749,"column":0},"generated":{"line":3751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3750,"column":0},"generated":{"line":3752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3751,"column":0},"generated":{"line":3753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3752,"column":0},"generated":{"line":3754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3753,"column":0},"generated":{"line":3755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3754,"column":0},"generated":{"line":3756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3755,"column":0},"generated":{"line":3757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3756,"column":0},"generated":{"line":3758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3757,"column":0},"generated":{"line":3759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3758,"column":0},"generated":{"line":3760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3759,"column":0},"generated":{"line":3761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3760,"column":0},"generated":{"line":3762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3761,"column":0},"generated":{"line":3763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3762,"column":0},"generated":{"line":3764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3763,"column":0},"generated":{"line":3765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3764,"column":0},"generated":{"line":3766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3765,"column":0},"generated":{"line":3767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3766,"column":0},"generated":{"line":3768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3767,"column":0},"generated":{"line":3769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3768,"column":0},"generated":{"line":3770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3769,"column":0},"generated":{"line":3771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3770,"column":0},"generated":{"line":3772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3771,"column":0},"generated":{"line":3773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3772,"column":0},"generated":{"line":3774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3773,"column":0},"generated":{"line":3775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3774,"column":0},"generated":{"line":3776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3775,"column":0},"generated":{"line":3777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3776,"column":0},"generated":{"line":3778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3777,"column":0},"generated":{"line":3779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3778,"column":0},"generated":{"line":3780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3779,"column":0},"generated":{"line":3781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3780,"column":0},"generated":{"line":3782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3781,"column":0},"generated":{"line":3783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3782,"column":0},"generated":{"line":3784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3783,"column":0},"generated":{"line":3785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3784,"column":0},"generated":{"line":3786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3785,"column":0},"generated":{"line":3787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3786,"column":0},"generated":{"line":3788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3787,"column":0},"generated":{"line":3789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3788,"column":0},"generated":{"line":3790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3789,"column":0},"generated":{"line":3791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3790,"column":0},"generated":{"line":3792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3791,"column":0},"generated":{"line":3793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3792,"column":0},"generated":{"line":3794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3793,"column":0},"generated":{"line":3795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3794,"column":0},"generated":{"line":3796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3795,"column":0},"generated":{"line":3797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3796,"column":0},"generated":{"line":3798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3797,"column":0},"generated":{"line":3799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3798,"column":0},"generated":{"line":3800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3799,"column":0},"generated":{"line":3801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3800,"column":0},"generated":{"line":3802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3801,"column":0},"generated":{"line":3803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3802,"column":0},"generated":{"line":3804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3803,"column":0},"generated":{"line":3805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3804,"column":0},"generated":{"line":3806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3805,"column":0},"generated":{"line":3807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3806,"column":0},"generated":{"line":3808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3807,"column":0},"generated":{"line":3809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3808,"column":0},"generated":{"line":3810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3809,"column":0},"generated":{"line":3811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3810,"column":0},"generated":{"line":3812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3811,"column":0},"generated":{"line":3813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3812,"column":0},"generated":{"line":3814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3813,"column":0},"generated":{"line":3815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3814,"column":0},"generated":{"line":3816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3815,"column":0},"generated":{"line":3817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3816,"column":0},"generated":{"line":3818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3817,"column":0},"generated":{"line":3819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3818,"column":0},"generated":{"line":3820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3819,"column":0},"generated":{"line":3821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3820,"column":0},"generated":{"line":3822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3821,"column":0},"generated":{"line":3823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3822,"column":0},"generated":{"line":3824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3823,"column":0},"generated":{"line":3825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3824,"column":0},"generated":{"line":3826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3825,"column":0},"generated":{"line":3827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3826,"column":0},"generated":{"line":3828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3827,"column":0},"generated":{"line":3829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3828,"column":0},"generated":{"line":3830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3829,"column":0},"generated":{"line":3831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3830,"column":0},"generated":{"line":3832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3831,"column":0},"generated":{"line":3833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3832,"column":0},"generated":{"line":3834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3833,"column":0},"generated":{"line":3835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3834,"column":0},"generated":{"line":3836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3835,"column":0},"generated":{"line":3837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3836,"column":0},"generated":{"line":3838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3837,"column":0},"generated":{"line":3839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3838,"column":0},"generated":{"line":3840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3839,"column":0},"generated":{"line":3841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3840,"column":0},"generated":{"line":3842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3841,"column":0},"generated":{"line":3843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3842,"column":0},"generated":{"line":3844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3843,"column":0},"generated":{"line":3845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3844,"column":0},"generated":{"line":3846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3845,"column":0},"generated":{"line":3847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3846,"column":0},"generated":{"line":3848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3847,"column":0},"generated":{"line":3849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3848,"column":0},"generated":{"line":3850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3849,"column":0},"generated":{"line":3851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3850,"column":0},"generated":{"line":3852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3851,"column":0},"generated":{"line":3853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3852,"column":0},"generated":{"line":3854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3853,"column":0},"generated":{"line":3855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3854,"column":0},"generated":{"line":3856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3855,"column":0},"generated":{"line":3857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3856,"column":0},"generated":{"line":3858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3857,"column":0},"generated":{"line":3859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3858,"column":0},"generated":{"line":3860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3859,"column":0},"generated":{"line":3861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3860,"column":0},"generated":{"line":3862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3861,"column":0},"generated":{"line":3863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3862,"column":0},"generated":{"line":3864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3863,"column":0},"generated":{"line":3865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3864,"column":0},"generated":{"line":3866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3865,"column":0},"generated":{"line":3867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3866,"column":0},"generated":{"line":3868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3867,"column":0},"generated":{"line":3869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3868,"column":0},"generated":{"line":3870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3869,"column":0},"generated":{"line":3871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3870,"column":0},"generated":{"line":3872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3871,"column":0},"generated":{"line":3873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3872,"column":0},"generated":{"line":3874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3873,"column":0},"generated":{"line":3875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3874,"column":0},"generated":{"line":3876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3875,"column":0},"generated":{"line":3877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3876,"column":0},"generated":{"line":3878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3877,"column":0},"generated":{"line":3879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3878,"column":0},"generated":{"line":3880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3879,"column":0},"generated":{"line":3881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3880,"column":0},"generated":{"line":3882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3881,"column":0},"generated":{"line":3883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3882,"column":0},"generated":{"line":3884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3883,"column":0},"generated":{"line":3885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3884,"column":0},"generated":{"line":3886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3885,"column":0},"generated":{"line":3887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3886,"column":0},"generated":{"line":3888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3887,"column":0},"generated":{"line":3889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3888,"column":0},"generated":{"line":3890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3889,"column":0},"generated":{"line":3891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3890,"column":0},"generated":{"line":3892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3891,"column":0},"generated":{"line":3893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3892,"column":0},"generated":{"line":3894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3893,"column":0},"generated":{"line":3895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3894,"column":0},"generated":{"line":3896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3895,"column":0},"generated":{"line":3897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3896,"column":0},"generated":{"line":3898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3897,"column":0},"generated":{"line":3899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3898,"column":0},"generated":{"line":3900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3899,"column":0},"generated":{"line":3901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3900,"column":0},"generated":{"line":3902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3901,"column":0},"generated":{"line":3903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3902,"column":0},"generated":{"line":3904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3903,"column":0},"generated":{"line":3905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3904,"column":0},"generated":{"line":3906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3905,"column":0},"generated":{"line":3907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3906,"column":0},"generated":{"line":3908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3907,"column":0},"generated":{"line":3909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3908,"column":0},"generated":{"line":3910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3909,"column":0},"generated":{"line":3911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3910,"column":0},"generated":{"line":3912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3911,"column":0},"generated":{"line":3913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3912,"column":0},"generated":{"line":3914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3913,"column":0},"generated":{"line":3915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3914,"column":0},"generated":{"line":3916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3915,"column":0},"generated":{"line":3917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3916,"column":0},"generated":{"line":3918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3917,"column":0},"generated":{"line":3919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3918,"column":0},"generated":{"line":3920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3919,"column":0},"generated":{"line":3921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3920,"column":0},"generated":{"line":3922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3921,"column":0},"generated":{"line":3923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3922,"column":0},"generated":{"line":3924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3923,"column":0},"generated":{"line":3925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3924,"column":0},"generated":{"line":3926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3925,"column":0},"generated":{"line":3927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3926,"column":0},"generated":{"line":3928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3927,"column":0},"generated":{"line":3929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3928,"column":0},"generated":{"line":3930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3929,"column":0},"generated":{"line":3931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3930,"column":0},"generated":{"line":3932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3931,"column":0},"generated":{"line":3933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3932,"column":0},"generated":{"line":3934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3933,"column":0},"generated":{"line":3935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3934,"column":0},"generated":{"line":3936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3935,"column":0},"generated":{"line":3937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3936,"column":0},"generated":{"line":3938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3937,"column":0},"generated":{"line":3939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3938,"column":0},"generated":{"line":3940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3939,"column":0},"generated":{"line":3941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3940,"column":0},"generated":{"line":3942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3941,"column":0},"generated":{"line":3943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3942,"column":0},"generated":{"line":3944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3943,"column":0},"generated":{"line":3945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3944,"column":0},"generated":{"line":3946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3945,"column":0},"generated":{"line":3947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3946,"column":0},"generated":{"line":3948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3947,"column":0},"generated":{"line":3949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3948,"column":0},"generated":{"line":3950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3949,"column":0},"generated":{"line":3951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3950,"column":0},"generated":{"line":3952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3951,"column":0},"generated":{"line":3953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3952,"column":0},"generated":{"line":3954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3953,"column":0},"generated":{"line":3955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3954,"column":0},"generated":{"line":3956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3955,"column":0},"generated":{"line":3957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3956,"column":0},"generated":{"line":3958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3957,"column":0},"generated":{"line":3959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3958,"column":0},"generated":{"line":3960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3959,"column":0},"generated":{"line":3961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3960,"column":0},"generated":{"line":3962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3961,"column":0},"generated":{"line":3963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3962,"column":0},"generated":{"line":3964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3963,"column":0},"generated":{"line":3965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3964,"column":0},"generated":{"line":3966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3965,"column":0},"generated":{"line":3967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3966,"column":0},"generated":{"line":3968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3967,"column":0},"generated":{"line":3969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3968,"column":0},"generated":{"line":3970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3969,"column":0},"generated":{"line":3971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3970,"column":0},"generated":{"line":3972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3971,"column":0},"generated":{"line":3973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3972,"column":0},"generated":{"line":3974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3973,"column":0},"generated":{"line":3975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3974,"column":0},"generated":{"line":3976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3975,"column":0},"generated":{"line":3977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3976,"column":0},"generated":{"line":3978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3977,"column":0},"generated":{"line":3979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3978,"column":0},"generated":{"line":3980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3979,"column":0},"generated":{"line":3981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3980,"column":0},"generated":{"line":3982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3981,"column":0},"generated":{"line":3983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3982,"column":0},"generated":{"line":3984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3983,"column":0},"generated":{"line":3985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3984,"column":0},"generated":{"line":3986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3985,"column":0},"generated":{"line":3987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3986,"column":0},"generated":{"line":3988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3987,"column":0},"generated":{"line":3989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3988,"column":0},"generated":{"line":3990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3989,"column":0},"generated":{"line":3991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3990,"column":0},"generated":{"line":3992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3991,"column":0},"generated":{"line":3993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3992,"column":0},"generated":{"line":3994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3993,"column":0},"generated":{"line":3995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3994,"column":0},"generated":{"line":3996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3995,"column":0},"generated":{"line":3997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3996,"column":0},"generated":{"line":3998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3997,"column":0},"generated":{"line":3999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3998,"column":0},"generated":{"line":4000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":3999,"column":0},"generated":{"line":4001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4000,"column":0},"generated":{"line":4002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4001,"column":0},"generated":{"line":4003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4002,"column":0},"generated":{"line":4004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4003,"column":0},"generated":{"line":4005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4004,"column":0},"generated":{"line":4006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4005,"column":0},"generated":{"line":4007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4006,"column":0},"generated":{"line":4008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4007,"column":0},"generated":{"line":4009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4008,"column":0},"generated":{"line":4010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4009,"column":0},"generated":{"line":4011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4010,"column":0},"generated":{"line":4012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4011,"column":0},"generated":{"line":4013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4012,"column":0},"generated":{"line":4014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4013,"column":0},"generated":{"line":4015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4014,"column":0},"generated":{"line":4016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4015,"column":0},"generated":{"line":4017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4016,"column":0},"generated":{"line":4018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4017,"column":0},"generated":{"line":4019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4018,"column":0},"generated":{"line":4020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4019,"column":0},"generated":{"line":4021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4020,"column":0},"generated":{"line":4022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4021,"column":0},"generated":{"line":4023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4022,"column":0},"generated":{"line":4024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4023,"column":0},"generated":{"line":4025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4024,"column":0},"generated":{"line":4026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4025,"column":0},"generated":{"line":4027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4026,"column":0},"generated":{"line":4028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4027,"column":0},"generated":{"line":4029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4028,"column":0},"generated":{"line":4030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4029,"column":0},"generated":{"line":4031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4030,"column":0},"generated":{"line":4032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4031,"column":0},"generated":{"line":4033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4032,"column":0},"generated":{"line":4034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4033,"column":0},"generated":{"line":4035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4034,"column":0},"generated":{"line":4036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4035,"column":0},"generated":{"line":4037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4036,"column":0},"generated":{"line":4038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4037,"column":0},"generated":{"line":4039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4038,"column":0},"generated":{"line":4040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4039,"column":0},"generated":{"line":4041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4040,"column":0},"generated":{"line":4042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4041,"column":0},"generated":{"line":4043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4042,"column":0},"generated":{"line":4044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4043,"column":0},"generated":{"line":4045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4044,"column":0},"generated":{"line":4046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4045,"column":0},"generated":{"line":4047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4046,"column":0},"generated":{"line":4048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4047,"column":0},"generated":{"line":4049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4048,"column":0},"generated":{"line":4050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4049,"column":0},"generated":{"line":4051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4050,"column":0},"generated":{"line":4052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4051,"column":0},"generated":{"line":4053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4052,"column":0},"generated":{"line":4054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4053,"column":0},"generated":{"line":4055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4054,"column":0},"generated":{"line":4056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4055,"column":0},"generated":{"line":4057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4056,"column":0},"generated":{"line":4058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4057,"column":0},"generated":{"line":4059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4058,"column":0},"generated":{"line":4060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4059,"column":0},"generated":{"line":4061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4060,"column":0},"generated":{"line":4062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4061,"column":0},"generated":{"line":4063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4062,"column":0},"generated":{"line":4064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4063,"column":0},"generated":{"line":4065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4064,"column":0},"generated":{"line":4066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4065,"column":0},"generated":{"line":4067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4066,"column":0},"generated":{"line":4068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4067,"column":0},"generated":{"line":4069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4068,"column":0},"generated":{"line":4070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4069,"column":0},"generated":{"line":4071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4070,"column":0},"generated":{"line":4072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4071,"column":0},"generated":{"line":4073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4072,"column":0},"generated":{"line":4074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4073,"column":0},"generated":{"line":4075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4074,"column":0},"generated":{"line":4076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4075,"column":0},"generated":{"line":4077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4076,"column":0},"generated":{"line":4078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4077,"column":0},"generated":{"line":4079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4078,"column":0},"generated":{"line":4080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4079,"column":0},"generated":{"line":4081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4080,"column":0},"generated":{"line":4082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4081,"column":0},"generated":{"line":4083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4082,"column":0},"generated":{"line":4084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4083,"column":0},"generated":{"line":4085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4084,"column":0},"generated":{"line":4086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4085,"column":0},"generated":{"line":4087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4086,"column":0},"generated":{"line":4088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4087,"column":0},"generated":{"line":4089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4088,"column":0},"generated":{"line":4090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4089,"column":0},"generated":{"line":4091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4090,"column":0},"generated":{"line":4092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4091,"column":0},"generated":{"line":4093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4092,"column":0},"generated":{"line":4094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4093,"column":0},"generated":{"line":4095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4094,"column":0},"generated":{"line":4096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4095,"column":0},"generated":{"line":4097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4096,"column":0},"generated":{"line":4098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4097,"column":0},"generated":{"line":4099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4098,"column":0},"generated":{"line":4100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4099,"column":0},"generated":{"line":4101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4100,"column":0},"generated":{"line":4102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4101,"column":0},"generated":{"line":4103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4102,"column":0},"generated":{"line":4104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4103,"column":0},"generated":{"line":4105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4104,"column":0},"generated":{"line":4106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4105,"column":0},"generated":{"line":4107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4106,"column":0},"generated":{"line":4108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4107,"column":0},"generated":{"line":4109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4108,"column":0},"generated":{"line":4110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4109,"column":0},"generated":{"line":4111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4110,"column":0},"generated":{"line":4112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4111,"column":0},"generated":{"line":4113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4112,"column":0},"generated":{"line":4114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4113,"column":0},"generated":{"line":4115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4114,"column":0},"generated":{"line":4116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4115,"column":0},"generated":{"line":4117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4116,"column":0},"generated":{"line":4118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4117,"column":0},"generated":{"line":4119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4118,"column":0},"generated":{"line":4120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4119,"column":0},"generated":{"line":4121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4120,"column":0},"generated":{"line":4122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4121,"column":0},"generated":{"line":4123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4122,"column":0},"generated":{"line":4124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4123,"column":0},"generated":{"line":4125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4124,"column":0},"generated":{"line":4126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4125,"column":0},"generated":{"line":4127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4126,"column":0},"generated":{"line":4128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4127,"column":0},"generated":{"line":4129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4128,"column":0},"generated":{"line":4130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4129,"column":0},"generated":{"line":4131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4130,"column":0},"generated":{"line":4132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4131,"column":0},"generated":{"line":4133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4132,"column":0},"generated":{"line":4134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4133,"column":0},"generated":{"line":4135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4134,"column":0},"generated":{"line":4136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4135,"column":0},"generated":{"line":4137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4136,"column":0},"generated":{"line":4138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4137,"column":0},"generated":{"line":4139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4138,"column":0},"generated":{"line":4140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4139,"column":0},"generated":{"line":4141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4140,"column":0},"generated":{"line":4142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4141,"column":0},"generated":{"line":4143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4142,"column":0},"generated":{"line":4144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4143,"column":0},"generated":{"line":4145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4144,"column":0},"generated":{"line":4146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4145,"column":0},"generated":{"line":4147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4146,"column":0},"generated":{"line":4148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4147,"column":0},"generated":{"line":4149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4148,"column":0},"generated":{"line":4150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4149,"column":0},"generated":{"line":4151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4150,"column":0},"generated":{"line":4152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4151,"column":0},"generated":{"line":4153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4152,"column":0},"generated":{"line":4154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4153,"column":0},"generated":{"line":4155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4154,"column":0},"generated":{"line":4156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4155,"column":0},"generated":{"line":4157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4156,"column":0},"generated":{"line":4158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4157,"column":0},"generated":{"line":4159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4158,"column":0},"generated":{"line":4160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4159,"column":0},"generated":{"line":4161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4160,"column":0},"generated":{"line":4162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4161,"column":0},"generated":{"line":4163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4162,"column":0},"generated":{"line":4164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4163,"column":0},"generated":{"line":4165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4164,"column":0},"generated":{"line":4166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4165,"column":0},"generated":{"line":4167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4166,"column":0},"generated":{"line":4168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4167,"column":0},"generated":{"line":4169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4168,"column":0},"generated":{"line":4170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4169,"column":0},"generated":{"line":4171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4170,"column":0},"generated":{"line":4172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4171,"column":0},"generated":{"line":4173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4172,"column":0},"generated":{"line":4174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4173,"column":0},"generated":{"line":4175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4174,"column":0},"generated":{"line":4176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4175,"column":0},"generated":{"line":4177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4176,"column":0},"generated":{"line":4178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4177,"column":0},"generated":{"line":4179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4178,"column":0},"generated":{"line":4180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4179,"column":0},"generated":{"line":4181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4180,"column":0},"generated":{"line":4182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4181,"column":0},"generated":{"line":4183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4182,"column":0},"generated":{"line":4184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4183,"column":0},"generated":{"line":4185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4184,"column":0},"generated":{"line":4186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4185,"column":0},"generated":{"line":4187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4186,"column":0},"generated":{"line":4188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4187,"column":0},"generated":{"line":4189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4188,"column":0},"generated":{"line":4190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4189,"column":0},"generated":{"line":4191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4190,"column":0},"generated":{"line":4192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4191,"column":0},"generated":{"line":4193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4192,"column":0},"generated":{"line":4194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4193,"column":0},"generated":{"line":4195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4194,"column":0},"generated":{"line":4196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4195,"column":0},"generated":{"line":4197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4196,"column":0},"generated":{"line":4198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4197,"column":0},"generated":{"line":4199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4198,"column":0},"generated":{"line":4200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4199,"column":0},"generated":{"line":4201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4200,"column":0},"generated":{"line":4202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4201,"column":0},"generated":{"line":4203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4202,"column":0},"generated":{"line":4204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4203,"column":0},"generated":{"line":4205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4204,"column":0},"generated":{"line":4206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4205,"column":0},"generated":{"line":4207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4206,"column":0},"generated":{"line":4208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4207,"column":0},"generated":{"line":4209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4208,"column":0},"generated":{"line":4210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4209,"column":0},"generated":{"line":4211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4210,"column":0},"generated":{"line":4212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4211,"column":0},"generated":{"line":4213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4212,"column":0},"generated":{"line":4214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4213,"column":0},"generated":{"line":4215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4214,"column":0},"generated":{"line":4216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4215,"column":0},"generated":{"line":4217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4216,"column":0},"generated":{"line":4218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4217,"column":0},"generated":{"line":4219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4218,"column":0},"generated":{"line":4220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4219,"column":0},"generated":{"line":4221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4220,"column":0},"generated":{"line":4222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4221,"column":0},"generated":{"line":4223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4222,"column":0},"generated":{"line":4224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4223,"column":0},"generated":{"line":4225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4224,"column":0},"generated":{"line":4226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4225,"column":0},"generated":{"line":4227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4226,"column":0},"generated":{"line":4228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4227,"column":0},"generated":{"line":4229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4228,"column":0},"generated":{"line":4230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4229,"column":0},"generated":{"line":4231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4230,"column":0},"generated":{"line":4232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4231,"column":0},"generated":{"line":4233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4232,"column":0},"generated":{"line":4234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4233,"column":0},"generated":{"line":4235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4234,"column":0},"generated":{"line":4236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4235,"column":0},"generated":{"line":4237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4236,"column":0},"generated":{"line":4238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4237,"column":0},"generated":{"line":4239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4238,"column":0},"generated":{"line":4240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4239,"column":0},"generated":{"line":4241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4240,"column":0},"generated":{"line":4242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4241,"column":0},"generated":{"line":4243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4242,"column":0},"generated":{"line":4244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4243,"column":0},"generated":{"line":4245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4244,"column":0},"generated":{"line":4246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4245,"column":0},"generated":{"line":4247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4246,"column":0},"generated":{"line":4248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4247,"column":0},"generated":{"line":4249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4248,"column":0},"generated":{"line":4250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4249,"column":0},"generated":{"line":4251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4250,"column":0},"generated":{"line":4252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4251,"column":0},"generated":{"line":4253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4252,"column":0},"generated":{"line":4254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4253,"column":0},"generated":{"line":4255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4254,"column":0},"generated":{"line":4256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4255,"column":0},"generated":{"line":4257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4256,"column":0},"generated":{"line":4258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4257,"column":0},"generated":{"line":4259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4258,"column":0},"generated":{"line":4260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4259,"column":0},"generated":{"line":4261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4260,"column":0},"generated":{"line":4262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4261,"column":0},"generated":{"line":4263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4262,"column":0},"generated":{"line":4264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4263,"column":0},"generated":{"line":4265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4264,"column":0},"generated":{"line":4266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4265,"column":0},"generated":{"line":4267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4266,"column":0},"generated":{"line":4268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4267,"column":0},"generated":{"line":4269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4268,"column":0},"generated":{"line":4270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4269,"column":0},"generated":{"line":4271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4270,"column":0},"generated":{"line":4272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4271,"column":0},"generated":{"line":4273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4272,"column":0},"generated":{"line":4274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4273,"column":0},"generated":{"line":4275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4274,"column":0},"generated":{"line":4276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4275,"column":0},"generated":{"line":4277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4276,"column":0},"generated":{"line":4278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4277,"column":0},"generated":{"line":4279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4278,"column":0},"generated":{"line":4280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4279,"column":0},"generated":{"line":4281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4280,"column":0},"generated":{"line":4282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4281,"column":0},"generated":{"line":4283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4282,"column":0},"generated":{"line":4284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4283,"column":0},"generated":{"line":4285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4284,"column":0},"generated":{"line":4286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4285,"column":0},"generated":{"line":4287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4286,"column":0},"generated":{"line":4288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4287,"column":0},"generated":{"line":4289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4288,"column":0},"generated":{"line":4290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4289,"column":0},"generated":{"line":4291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4290,"column":0},"generated":{"line":4292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4291,"column":0},"generated":{"line":4293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4292,"column":0},"generated":{"line":4294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4293,"column":0},"generated":{"line":4295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4294,"column":0},"generated":{"line":4296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4295,"column":0},"generated":{"line":4297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4296,"column":0},"generated":{"line":4298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4297,"column":0},"generated":{"line":4299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4298,"column":0},"generated":{"line":4300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4299,"column":0},"generated":{"line":4301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4300,"column":0},"generated":{"line":4302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4301,"column":0},"generated":{"line":4303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4302,"column":0},"generated":{"line":4304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4303,"column":0},"generated":{"line":4305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4304,"column":0},"generated":{"line":4306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4305,"column":0},"generated":{"line":4307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4306,"column":0},"generated":{"line":4308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4307,"column":0},"generated":{"line":4309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4308,"column":0},"generated":{"line":4310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4309,"column":0},"generated":{"line":4311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4310,"column":0},"generated":{"line":4312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4311,"column":0},"generated":{"line":4313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4312,"column":0},"generated":{"line":4314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4313,"column":0},"generated":{"line":4315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4314,"column":0},"generated":{"line":4316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4315,"column":0},"generated":{"line":4317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4316,"column":0},"generated":{"line":4318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4317,"column":0},"generated":{"line":4319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4318,"column":0},"generated":{"line":4320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4319,"column":0},"generated":{"line":4321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4320,"column":0},"generated":{"line":4322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4321,"column":0},"generated":{"line":4323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4322,"column":0},"generated":{"line":4324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4323,"column":0},"generated":{"line":4325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4324,"column":0},"generated":{"line":4326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4325,"column":0},"generated":{"line":4327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4326,"column":0},"generated":{"line":4328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4327,"column":0},"generated":{"line":4329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4328,"column":0},"generated":{"line":4330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4329,"column":0},"generated":{"line":4331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4330,"column":0},"generated":{"line":4332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4331,"column":0},"generated":{"line":4333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4332,"column":0},"generated":{"line":4334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4333,"column":0},"generated":{"line":4335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4334,"column":0},"generated":{"line":4336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4335,"column":0},"generated":{"line":4337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4336,"column":0},"generated":{"line":4338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4337,"column":0},"generated":{"line":4339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4338,"column":0},"generated":{"line":4340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4339,"column":0},"generated":{"line":4341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4340,"column":0},"generated":{"line":4342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4341,"column":0},"generated":{"line":4343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4342,"column":0},"generated":{"line":4344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4343,"column":0},"generated":{"line":4345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4344,"column":0},"generated":{"line":4346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4345,"column":0},"generated":{"line":4347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4346,"column":0},"generated":{"line":4348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4347,"column":0},"generated":{"line":4349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4348,"column":0},"generated":{"line":4350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4349,"column":0},"generated":{"line":4351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4350,"column":0},"generated":{"line":4352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4351,"column":0},"generated":{"line":4353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4352,"column":0},"generated":{"line":4354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4353,"column":0},"generated":{"line":4355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4354,"column":0},"generated":{"line":4356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4355,"column":0},"generated":{"line":4357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4356,"column":0},"generated":{"line":4358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4357,"column":0},"generated":{"line":4359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4358,"column":0},"generated":{"line":4360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4359,"column":0},"generated":{"line":4361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4360,"column":0},"generated":{"line":4362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4361,"column":0},"generated":{"line":4363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4362,"column":0},"generated":{"line":4364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4363,"column":0},"generated":{"line":4365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4364,"column":0},"generated":{"line":4366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4365,"column":0},"generated":{"line":4367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4366,"column":0},"generated":{"line":4368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4367,"column":0},"generated":{"line":4369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4368,"column":0},"generated":{"line":4370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4369,"column":0},"generated":{"line":4371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4370,"column":0},"generated":{"line":4372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4371,"column":0},"generated":{"line":4373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4372,"column":0},"generated":{"line":4374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4373,"column":0},"generated":{"line":4375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4374,"column":0},"generated":{"line":4376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4375,"column":0},"generated":{"line":4377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4376,"column":0},"generated":{"line":4378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4377,"column":0},"generated":{"line":4379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4378,"column":0},"generated":{"line":4380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4379,"column":0},"generated":{"line":4381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4380,"column":0},"generated":{"line":4382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4381,"column":0},"generated":{"line":4383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4382,"column":0},"generated":{"line":4384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4383,"column":0},"generated":{"line":4385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4384,"column":0},"generated":{"line":4386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4385,"column":0},"generated":{"line":4387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4386,"column":0},"generated":{"line":4388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4387,"column":0},"generated":{"line":4389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4388,"column":0},"generated":{"line":4390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4389,"column":0},"generated":{"line":4391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4390,"column":0},"generated":{"line":4392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4391,"column":0},"generated":{"line":4393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4392,"column":0},"generated":{"line":4394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4393,"column":0},"generated":{"line":4395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4394,"column":0},"generated":{"line":4396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4395,"column":0},"generated":{"line":4397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4396,"column":0},"generated":{"line":4398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4397,"column":0},"generated":{"line":4399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4398,"column":0},"generated":{"line":4400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4399,"column":0},"generated":{"line":4401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4400,"column":0},"generated":{"line":4402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4401,"column":0},"generated":{"line":4403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4402,"column":0},"generated":{"line":4404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4403,"column":0},"generated":{"line":4405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4404,"column":0},"generated":{"line":4406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4405,"column":0},"generated":{"line":4407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4406,"column":0},"generated":{"line":4408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4407,"column":0},"generated":{"line":4409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4408,"column":0},"generated":{"line":4410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4409,"column":0},"generated":{"line":4411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4410,"column":0},"generated":{"line":4412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4411,"column":0},"generated":{"line":4413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4412,"column":0},"generated":{"line":4414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4413,"column":0},"generated":{"line":4415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4414,"column":0},"generated":{"line":4416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4415,"column":0},"generated":{"line":4417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4416,"column":0},"generated":{"line":4418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4417,"column":0},"generated":{"line":4419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4418,"column":0},"generated":{"line":4420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4419,"column":0},"generated":{"line":4421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4420,"column":0},"generated":{"line":4422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4421,"column":0},"generated":{"line":4423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4422,"column":0},"generated":{"line":4424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4423,"column":0},"generated":{"line":4425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4424,"column":0},"generated":{"line":4426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4425,"column":0},"generated":{"line":4427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4426,"column":0},"generated":{"line":4428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4427,"column":0},"generated":{"line":4429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4428,"column":0},"generated":{"line":4430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4429,"column":0},"generated":{"line":4431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4430,"column":0},"generated":{"line":4432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4431,"column":0},"generated":{"line":4433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4432,"column":0},"generated":{"line":4434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4433,"column":0},"generated":{"line":4435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4434,"column":0},"generated":{"line":4436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4435,"column":0},"generated":{"line":4437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4436,"column":0},"generated":{"line":4438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4437,"column":0},"generated":{"line":4439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4438,"column":0},"generated":{"line":4440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4439,"column":0},"generated":{"line":4441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4440,"column":0},"generated":{"line":4442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4441,"column":0},"generated":{"line":4443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4442,"column":0},"generated":{"line":4444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4443,"column":0},"generated":{"line":4445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4444,"column":0},"generated":{"line":4446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4445,"column":0},"generated":{"line":4447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4446,"column":0},"generated":{"line":4448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4447,"column":0},"generated":{"line":4449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4448,"column":0},"generated":{"line":4450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4449,"column":0},"generated":{"line":4451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4450,"column":0},"generated":{"line":4452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4451,"column":0},"generated":{"line":4453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4452,"column":0},"generated":{"line":4454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4453,"column":0},"generated":{"line":4455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4454,"column":0},"generated":{"line":4456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4455,"column":0},"generated":{"line":4457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4456,"column":0},"generated":{"line":4458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4457,"column":0},"generated":{"line":4459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4458,"column":0},"generated":{"line":4460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4459,"column":0},"generated":{"line":4461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4460,"column":0},"generated":{"line":4462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4461,"column":0},"generated":{"line":4463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4462,"column":0},"generated":{"line":4464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4463,"column":0},"generated":{"line":4465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4464,"column":0},"generated":{"line":4466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4465,"column":0},"generated":{"line":4467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4466,"column":0},"generated":{"line":4468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4467,"column":0},"generated":{"line":4469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4468,"column":0},"generated":{"line":4470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4469,"column":0},"generated":{"line":4471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4470,"column":0},"generated":{"line":4472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4471,"column":0},"generated":{"line":4473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4472,"column":0},"generated":{"line":4474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4473,"column":0},"generated":{"line":4475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4474,"column":0},"generated":{"line":4476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4475,"column":0},"generated":{"line":4477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4476,"column":0},"generated":{"line":4478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4477,"column":0},"generated":{"line":4479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4478,"column":0},"generated":{"line":4480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4479,"column":0},"generated":{"line":4481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4480,"column":0},"generated":{"line":4482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4481,"column":0},"generated":{"line":4483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4482,"column":0},"generated":{"line":4484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4483,"column":0},"generated":{"line":4485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4484,"column":0},"generated":{"line":4486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4485,"column":0},"generated":{"line":4487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4486,"column":0},"generated":{"line":4488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4487,"column":0},"generated":{"line":4489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4488,"column":0},"generated":{"line":4490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4489,"column":0},"generated":{"line":4491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4490,"column":0},"generated":{"line":4492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4491,"column":0},"generated":{"line":4493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4492,"column":0},"generated":{"line":4494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4493,"column":0},"generated":{"line":4495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4494,"column":0},"generated":{"line":4496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4495,"column":0},"generated":{"line":4497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4496,"column":0},"generated":{"line":4498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4497,"column":0},"generated":{"line":4499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4498,"column":0},"generated":{"line":4500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4499,"column":0},"generated":{"line":4501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4500,"column":0},"generated":{"line":4502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4501,"column":0},"generated":{"line":4503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4502,"column":0},"generated":{"line":4504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4503,"column":0},"generated":{"line":4505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4504,"column":0},"generated":{"line":4506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4505,"column":0},"generated":{"line":4507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4506,"column":0},"generated":{"line":4508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4507,"column":0},"generated":{"line":4509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4508,"column":0},"generated":{"line":4510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4509,"column":0},"generated":{"line":4511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4510,"column":0},"generated":{"line":4512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4511,"column":0},"generated":{"line":4513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4512,"column":0},"generated":{"line":4514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4513,"column":0},"generated":{"line":4515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4514,"column":0},"generated":{"line":4516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4515,"column":0},"generated":{"line":4517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4516,"column":0},"generated":{"line":4518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4517,"column":0},"generated":{"line":4519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4518,"column":0},"generated":{"line":4520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4519,"column":0},"generated":{"line":4521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4520,"column":0},"generated":{"line":4522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4521,"column":0},"generated":{"line":4523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4522,"column":0},"generated":{"line":4524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4523,"column":0},"generated":{"line":4525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4524,"column":0},"generated":{"line":4526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4525,"column":0},"generated":{"line":4527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4526,"column":0},"generated":{"line":4528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4527,"column":0},"generated":{"line":4529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4528,"column":0},"generated":{"line":4530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4529,"column":0},"generated":{"line":4531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4530,"column":0},"generated":{"line":4532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4531,"column":0},"generated":{"line":4533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4532,"column":0},"generated":{"line":4534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4533,"column":0},"generated":{"line":4535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4534,"column":0},"generated":{"line":4536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4535,"column":0},"generated":{"line":4537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4536,"column":0},"generated":{"line":4538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4537,"column":0},"generated":{"line":4539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4538,"column":0},"generated":{"line":4540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4539,"column":0},"generated":{"line":4541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4540,"column":0},"generated":{"line":4542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4541,"column":0},"generated":{"line":4543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4542,"column":0},"generated":{"line":4544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4543,"column":0},"generated":{"line":4545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4544,"column":0},"generated":{"line":4546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4545,"column":0},"generated":{"line":4547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4546,"column":0},"generated":{"line":4548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4547,"column":0},"generated":{"line":4549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4548,"column":0},"generated":{"line":4550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4549,"column":0},"generated":{"line":4551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4550,"column":0},"generated":{"line":4552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4551,"column":0},"generated":{"line":4553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4552,"column":0},"generated":{"line":4554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4553,"column":0},"generated":{"line":4555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4554,"column":0},"generated":{"line":4556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4555,"column":0},"generated":{"line":4557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4556,"column":0},"generated":{"line":4558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4557,"column":0},"generated":{"line":4559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4558,"column":0},"generated":{"line":4560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4559,"column":0},"generated":{"line":4561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4560,"column":0},"generated":{"line":4562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4561,"column":0},"generated":{"line":4563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4562,"column":0},"generated":{"line":4564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4563,"column":0},"generated":{"line":4565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4564,"column":0},"generated":{"line":4566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4565,"column":0},"generated":{"line":4567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4566,"column":0},"generated":{"line":4568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4567,"column":0},"generated":{"line":4569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4568,"column":0},"generated":{"line":4570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4569,"column":0},"generated":{"line":4571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4570,"column":0},"generated":{"line":4572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4571,"column":0},"generated":{"line":4573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4572,"column":0},"generated":{"line":4574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4573,"column":0},"generated":{"line":4575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4574,"column":0},"generated":{"line":4576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4575,"column":0},"generated":{"line":4577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4576,"column":0},"generated":{"line":4578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4577,"column":0},"generated":{"line":4579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4578,"column":0},"generated":{"line":4580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4579,"column":0},"generated":{"line":4581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4580,"column":0},"generated":{"line":4582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4581,"column":0},"generated":{"line":4583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4582,"column":0},"generated":{"line":4584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4583,"column":0},"generated":{"line":4585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4584,"column":0},"generated":{"line":4586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4585,"column":0},"generated":{"line":4587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4586,"column":0},"generated":{"line":4588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4587,"column":0},"generated":{"line":4589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4588,"column":0},"generated":{"line":4590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4589,"column":0},"generated":{"line":4591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4590,"column":0},"generated":{"line":4592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4591,"column":0},"generated":{"line":4593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4592,"column":0},"generated":{"line":4594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4593,"column":0},"generated":{"line":4595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4594,"column":0},"generated":{"line":4596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4595,"column":0},"generated":{"line":4597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4596,"column":0},"generated":{"line":4598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4597,"column":0},"generated":{"line":4599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4598,"column":0},"generated":{"line":4600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4599,"column":0},"generated":{"line":4601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4600,"column":0},"generated":{"line":4602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4601,"column":0},"generated":{"line":4603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4602,"column":0},"generated":{"line":4604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4603,"column":0},"generated":{"line":4605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4604,"column":0},"generated":{"line":4606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4605,"column":0},"generated":{"line":4607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4606,"column":0},"generated":{"line":4608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4607,"column":0},"generated":{"line":4609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4608,"column":0},"generated":{"line":4610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4609,"column":0},"generated":{"line":4611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4610,"column":0},"generated":{"line":4612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4611,"column":0},"generated":{"line":4613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4612,"column":0},"generated":{"line":4614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4613,"column":0},"generated":{"line":4615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4614,"column":0},"generated":{"line":4616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4615,"column":0},"generated":{"line":4617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4616,"column":0},"generated":{"line":4618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4617,"column":0},"generated":{"line":4619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4618,"column":0},"generated":{"line":4620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4619,"column":0},"generated":{"line":4621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4620,"column":0},"generated":{"line":4622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4621,"column":0},"generated":{"line":4623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4622,"column":0},"generated":{"line":4624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4623,"column":0},"generated":{"line":4625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4624,"column":0},"generated":{"line":4626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4625,"column":0},"generated":{"line":4627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4626,"column":0},"generated":{"line":4628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4627,"column":0},"generated":{"line":4629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4628,"column":0},"generated":{"line":4630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4629,"column":0},"generated":{"line":4631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4630,"column":0},"generated":{"line":4632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4631,"column":0},"generated":{"line":4633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4632,"column":0},"generated":{"line":4634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4633,"column":0},"generated":{"line":4635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4634,"column":0},"generated":{"line":4636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4635,"column":0},"generated":{"line":4637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4636,"column":0},"generated":{"line":4638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4637,"column":0},"generated":{"line":4639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4638,"column":0},"generated":{"line":4640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4639,"column":0},"generated":{"line":4641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4640,"column":0},"generated":{"line":4642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4641,"column":0},"generated":{"line":4643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4642,"column":0},"generated":{"line":4644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4643,"column":0},"generated":{"line":4645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4644,"column":0},"generated":{"line":4646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4645,"column":0},"generated":{"line":4647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4646,"column":0},"generated":{"line":4648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4647,"column":0},"generated":{"line":4649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4648,"column":0},"generated":{"line":4650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4649,"column":0},"generated":{"line":4651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4650,"column":0},"generated":{"line":4652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4651,"column":0},"generated":{"line":4653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4652,"column":0},"generated":{"line":4654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4653,"column":0},"generated":{"line":4655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4654,"column":0},"generated":{"line":4656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4655,"column":0},"generated":{"line":4657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4656,"column":0},"generated":{"line":4658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4657,"column":0},"generated":{"line":4659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4658,"column":0},"generated":{"line":4660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4659,"column":0},"generated":{"line":4661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4660,"column":0},"generated":{"line":4662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4661,"column":0},"generated":{"line":4663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4662,"column":0},"generated":{"line":4664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4663,"column":0},"generated":{"line":4665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4664,"column":0},"generated":{"line":4666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4665,"column":0},"generated":{"line":4667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4666,"column":0},"generated":{"line":4668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4667,"column":0},"generated":{"line":4669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4668,"column":0},"generated":{"line":4670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4669,"column":0},"generated":{"line":4671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4670,"column":0},"generated":{"line":4672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4671,"column":0},"generated":{"line":4673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4672,"column":0},"generated":{"line":4674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4673,"column":0},"generated":{"line":4675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4674,"column":0},"generated":{"line":4676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4675,"column":0},"generated":{"line":4677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4676,"column":0},"generated":{"line":4678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4677,"column":0},"generated":{"line":4679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4678,"column":0},"generated":{"line":4680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4679,"column":0},"generated":{"line":4681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4680,"column":0},"generated":{"line":4682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4681,"column":0},"generated":{"line":4683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4682,"column":0},"generated":{"line":4684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4683,"column":0},"generated":{"line":4685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4684,"column":0},"generated":{"line":4686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4685,"column":0},"generated":{"line":4687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4686,"column":0},"generated":{"line":4688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4687,"column":0},"generated":{"line":4689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4688,"column":0},"generated":{"line":4690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4689,"column":0},"generated":{"line":4691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4690,"column":0},"generated":{"line":4692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4691,"column":0},"generated":{"line":4693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4692,"column":0},"generated":{"line":4694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4693,"column":0},"generated":{"line":4695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4694,"column":0},"generated":{"line":4696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4695,"column":0},"generated":{"line":4697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4696,"column":0},"generated":{"line":4698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4697,"column":0},"generated":{"line":4699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4698,"column":0},"generated":{"line":4700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4699,"column":0},"generated":{"line":4701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4700,"column":0},"generated":{"line":4702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4701,"column":0},"generated":{"line":4703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4702,"column":0},"generated":{"line":4704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4703,"column":0},"generated":{"line":4705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4704,"column":0},"generated":{"line":4706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4705,"column":0},"generated":{"line":4707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4706,"column":0},"generated":{"line":4708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4707,"column":0},"generated":{"line":4709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4708,"column":0},"generated":{"line":4710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4709,"column":0},"generated":{"line":4711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4710,"column":0},"generated":{"line":4712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4711,"column":0},"generated":{"line":4713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4712,"column":0},"generated":{"line":4714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4713,"column":0},"generated":{"line":4715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4714,"column":0},"generated":{"line":4716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4715,"column":0},"generated":{"line":4717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4716,"column":0},"generated":{"line":4718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4717,"column":0},"generated":{"line":4719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4718,"column":0},"generated":{"line":4720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4719,"column":0},"generated":{"line":4721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4720,"column":0},"generated":{"line":4722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4721,"column":0},"generated":{"line":4723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4722,"column":0},"generated":{"line":4724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4723,"column":0},"generated":{"line":4725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4724,"column":0},"generated":{"line":4726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4725,"column":0},"generated":{"line":4727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4726,"column":0},"generated":{"line":4728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4727,"column":0},"generated":{"line":4729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4728,"column":0},"generated":{"line":4730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4729,"column":0},"generated":{"line":4731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4730,"column":0},"generated":{"line":4732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4731,"column":0},"generated":{"line":4733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4732,"column":0},"generated":{"line":4734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4733,"column":0},"generated":{"line":4735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4734,"column":0},"generated":{"line":4736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4735,"column":0},"generated":{"line":4737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4736,"column":0},"generated":{"line":4738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4737,"column":0},"generated":{"line":4739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4738,"column":0},"generated":{"line":4740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4739,"column":0},"generated":{"line":4741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4740,"column":0},"generated":{"line":4742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4741,"column":0},"generated":{"line":4743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4742,"column":0},"generated":{"line":4744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4743,"column":0},"generated":{"line":4745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4744,"column":0},"generated":{"line":4746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4745,"column":0},"generated":{"line":4747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4746,"column":0},"generated":{"line":4748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4747,"column":0},"generated":{"line":4749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4748,"column":0},"generated":{"line":4750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4749,"column":0},"generated":{"line":4751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4750,"column":0},"generated":{"line":4752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4751,"column":0},"generated":{"line":4753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4752,"column":0},"generated":{"line":4754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4753,"column":0},"generated":{"line":4755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4754,"column":0},"generated":{"line":4756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4755,"column":0},"generated":{"line":4757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4756,"column":0},"generated":{"line":4758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4757,"column":0},"generated":{"line":4759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4758,"column":0},"generated":{"line":4760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4759,"column":0},"generated":{"line":4761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4760,"column":0},"generated":{"line":4762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4761,"column":0},"generated":{"line":4763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4762,"column":0},"generated":{"line":4764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4763,"column":0},"generated":{"line":4765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4764,"column":0},"generated":{"line":4766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4765,"column":0},"generated":{"line":4767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4766,"column":0},"generated":{"line":4768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4767,"column":0},"generated":{"line":4769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4768,"column":0},"generated":{"line":4770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4769,"column":0},"generated":{"line":4771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4770,"column":0},"generated":{"line":4772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4771,"column":0},"generated":{"line":4773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4772,"column":0},"generated":{"line":4774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4773,"column":0},"generated":{"line":4775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4774,"column":0},"generated":{"line":4776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4775,"column":0},"generated":{"line":4777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4776,"column":0},"generated":{"line":4778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4777,"column":0},"generated":{"line":4779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4778,"column":0},"generated":{"line":4780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4779,"column":0},"generated":{"line":4781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4780,"column":0},"generated":{"line":4782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4781,"column":0},"generated":{"line":4783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4782,"column":0},"generated":{"line":4784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4783,"column":0},"generated":{"line":4785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4784,"column":0},"generated":{"line":4786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4785,"column":0},"generated":{"line":4787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4786,"column":0},"generated":{"line":4788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4787,"column":0},"generated":{"line":4789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4788,"column":0},"generated":{"line":4790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4789,"column":0},"generated":{"line":4791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4790,"column":0},"generated":{"line":4792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4791,"column":0},"generated":{"line":4793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4792,"column":0},"generated":{"line":4794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4793,"column":0},"generated":{"line":4795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4794,"column":0},"generated":{"line":4796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4795,"column":0},"generated":{"line":4797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4796,"column":0},"generated":{"line":4798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4797,"column":0},"generated":{"line":4799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4798,"column":0},"generated":{"line":4800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4799,"column":0},"generated":{"line":4801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4800,"column":0},"generated":{"line":4802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4801,"column":0},"generated":{"line":4803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4802,"column":0},"generated":{"line":4804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4803,"column":0},"generated":{"line":4805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4804,"column":0},"generated":{"line":4806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4805,"column":0},"generated":{"line":4807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4806,"column":0},"generated":{"line":4808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4807,"column":0},"generated":{"line":4809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4808,"column":0},"generated":{"line":4810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4809,"column":0},"generated":{"line":4811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4810,"column":0},"generated":{"line":4812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4811,"column":0},"generated":{"line":4813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4812,"column":0},"generated":{"line":4814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4813,"column":0},"generated":{"line":4815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4814,"column":0},"generated":{"line":4816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4815,"column":0},"generated":{"line":4817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4816,"column":0},"generated":{"line":4818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4817,"column":0},"generated":{"line":4819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4818,"column":0},"generated":{"line":4820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4819,"column":0},"generated":{"line":4821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4820,"column":0},"generated":{"line":4822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4821,"column":0},"generated":{"line":4823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4822,"column":0},"generated":{"line":4824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4823,"column":0},"generated":{"line":4825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4824,"column":0},"generated":{"line":4826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4825,"column":0},"generated":{"line":4827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4826,"column":0},"generated":{"line":4828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4827,"column":0},"generated":{"line":4829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4828,"column":0},"generated":{"line":4830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4829,"column":0},"generated":{"line":4831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4830,"column":0},"generated":{"line":4832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4831,"column":0},"generated":{"line":4833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4832,"column":0},"generated":{"line":4834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4833,"column":0},"generated":{"line":4835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4834,"column":0},"generated":{"line":4836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4835,"column":0},"generated":{"line":4837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4836,"column":0},"generated":{"line":4838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4837,"column":0},"generated":{"line":4839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4838,"column":0},"generated":{"line":4840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4839,"column":0},"generated":{"line":4841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4840,"column":0},"generated":{"line":4842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4841,"column":0},"generated":{"line":4843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4842,"column":0},"generated":{"line":4844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4843,"column":0},"generated":{"line":4845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4844,"column":0},"generated":{"line":4846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4845,"column":0},"generated":{"line":4847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4846,"column":0},"generated":{"line":4848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4847,"column":0},"generated":{"line":4849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4848,"column":0},"generated":{"line":4850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4849,"column":0},"generated":{"line":4851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4850,"column":0},"generated":{"line":4852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4851,"column":0},"generated":{"line":4853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4852,"column":0},"generated":{"line":4854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4853,"column":0},"generated":{"line":4855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4854,"column":0},"generated":{"line":4856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4855,"column":0},"generated":{"line":4857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4856,"column":0},"generated":{"line":4858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4857,"column":0},"generated":{"line":4859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4858,"column":0},"generated":{"line":4860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4859,"column":0},"generated":{"line":4861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4860,"column":0},"generated":{"line":4862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4861,"column":0},"generated":{"line":4863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4862,"column":0},"generated":{"line":4864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4863,"column":0},"generated":{"line":4865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4864,"column":0},"generated":{"line":4866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4865,"column":0},"generated":{"line":4867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4866,"column":0},"generated":{"line":4868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4867,"column":0},"generated":{"line":4869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4868,"column":0},"generated":{"line":4870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4869,"column":0},"generated":{"line":4871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4870,"column":0},"generated":{"line":4872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4871,"column":0},"generated":{"line":4873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4872,"column":0},"generated":{"line":4874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4873,"column":0},"generated":{"line":4875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4874,"column":0},"generated":{"line":4876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4875,"column":0},"generated":{"line":4877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4876,"column":0},"generated":{"line":4878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4877,"column":0},"generated":{"line":4879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4878,"column":0},"generated":{"line":4880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4879,"column":0},"generated":{"line":4881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4880,"column":0},"generated":{"line":4882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4881,"column":0},"generated":{"line":4883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4882,"column":0},"generated":{"line":4884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4883,"column":0},"generated":{"line":4885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4884,"column":0},"generated":{"line":4886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4885,"column":0},"generated":{"line":4887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4886,"column":0},"generated":{"line":4888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4887,"column":0},"generated":{"line":4889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4888,"column":0},"generated":{"line":4890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4889,"column":0},"generated":{"line":4891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4890,"column":0},"generated":{"line":4892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4891,"column":0},"generated":{"line":4893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4892,"column":0},"generated":{"line":4894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4893,"column":0},"generated":{"line":4895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4894,"column":0},"generated":{"line":4896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4895,"column":0},"generated":{"line":4897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4896,"column":0},"generated":{"line":4898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4897,"column":0},"generated":{"line":4899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4898,"column":0},"generated":{"line":4900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4899,"column":0},"generated":{"line":4901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4900,"column":0},"generated":{"line":4902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4901,"column":0},"generated":{"line":4903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4902,"column":0},"generated":{"line":4904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4903,"column":0},"generated":{"line":4905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4904,"column":0},"generated":{"line":4906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4905,"column":0},"generated":{"line":4907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4906,"column":0},"generated":{"line":4908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4907,"column":0},"generated":{"line":4909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4908,"column":0},"generated":{"line":4910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4909,"column":0},"generated":{"line":4911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4910,"column":0},"generated":{"line":4912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4911,"column":0},"generated":{"line":4913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4912,"column":0},"generated":{"line":4914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4913,"column":0},"generated":{"line":4915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4914,"column":0},"generated":{"line":4916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4915,"column":0},"generated":{"line":4917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4916,"column":0},"generated":{"line":4918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4917,"column":0},"generated":{"line":4919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4918,"column":0},"generated":{"line":4920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4919,"column":0},"generated":{"line":4921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4920,"column":0},"generated":{"line":4922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4921,"column":0},"generated":{"line":4923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4922,"column":0},"generated":{"line":4924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4923,"column":0},"generated":{"line":4925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4924,"column":0},"generated":{"line":4926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4925,"column":0},"generated":{"line":4927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4926,"column":0},"generated":{"line":4928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4927,"column":0},"generated":{"line":4929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4928,"column":0},"generated":{"line":4930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4929,"column":0},"generated":{"line":4931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4930,"column":0},"generated":{"line":4932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4931,"column":0},"generated":{"line":4933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4932,"column":0},"generated":{"line":4934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4933,"column":0},"generated":{"line":4935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4934,"column":0},"generated":{"line":4936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4935,"column":0},"generated":{"line":4937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4936,"column":0},"generated":{"line":4938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4937,"column":0},"generated":{"line":4939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4938,"column":0},"generated":{"line":4940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4939,"column":0},"generated":{"line":4941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4940,"column":0},"generated":{"line":4942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4941,"column":0},"generated":{"line":4943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4942,"column":0},"generated":{"line":4944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4943,"column":0},"generated":{"line":4945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4944,"column":0},"generated":{"line":4946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4945,"column":0},"generated":{"line":4947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4946,"column":0},"generated":{"line":4948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4947,"column":0},"generated":{"line":4949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4948,"column":0},"generated":{"line":4950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4949,"column":0},"generated":{"line":4951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4950,"column":0},"generated":{"line":4952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4951,"column":0},"generated":{"line":4953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4952,"column":0},"generated":{"line":4954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4953,"column":0},"generated":{"line":4955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4954,"column":0},"generated":{"line":4956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4955,"column":0},"generated":{"line":4957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4956,"column":0},"generated":{"line":4958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4957,"column":0},"generated":{"line":4959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4958,"column":0},"generated":{"line":4960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4959,"column":0},"generated":{"line":4961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4960,"column":0},"generated":{"line":4962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4961,"column":0},"generated":{"line":4963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4962,"column":0},"generated":{"line":4964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4963,"column":0},"generated":{"line":4965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4964,"column":0},"generated":{"line":4966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4965,"column":0},"generated":{"line":4967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4966,"column":0},"generated":{"line":4968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4967,"column":0},"generated":{"line":4969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4968,"column":0},"generated":{"line":4970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4969,"column":0},"generated":{"line":4971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4970,"column":0},"generated":{"line":4972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4971,"column":0},"generated":{"line":4973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4972,"column":0},"generated":{"line":4974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4973,"column":0},"generated":{"line":4975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4974,"column":0},"generated":{"line":4976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4975,"column":0},"generated":{"line":4977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4976,"column":0},"generated":{"line":4978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4977,"column":0},"generated":{"line":4979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4978,"column":0},"generated":{"line":4980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4979,"column":0},"generated":{"line":4981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4980,"column":0},"generated":{"line":4982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4981,"column":0},"generated":{"line":4983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4982,"column":0},"generated":{"line":4984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4983,"column":0},"generated":{"line":4985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4984,"column":0},"generated":{"line":4986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4985,"column":0},"generated":{"line":4987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4986,"column":0},"generated":{"line":4988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4987,"column":0},"generated":{"line":4989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4988,"column":0},"generated":{"line":4990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4989,"column":0},"generated":{"line":4991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4990,"column":0},"generated":{"line":4992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4991,"column":0},"generated":{"line":4993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4992,"column":0},"generated":{"line":4994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4993,"column":0},"generated":{"line":4995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4994,"column":0},"generated":{"line":4996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4995,"column":0},"generated":{"line":4997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4996,"column":0},"generated":{"line":4998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4997,"column":0},"generated":{"line":4999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4998,"column":0},"generated":{"line":5000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":4999,"column":0},"generated":{"line":5001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5000,"column":0},"generated":{"line":5002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5001,"column":0},"generated":{"line":5003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5002,"column":0},"generated":{"line":5004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5003,"column":0},"generated":{"line":5005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5004,"column":0},"generated":{"line":5006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5005,"column":0},"generated":{"line":5007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5006,"column":0},"generated":{"line":5008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5007,"column":0},"generated":{"line":5009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5008,"column":0},"generated":{"line":5010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5009,"column":0},"generated":{"line":5011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5010,"column":0},"generated":{"line":5012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5011,"column":0},"generated":{"line":5013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5012,"column":0},"generated":{"line":5014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5013,"column":0},"generated":{"line":5015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5014,"column":0},"generated":{"line":5016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5015,"column":0},"generated":{"line":5017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5016,"column":0},"generated":{"line":5018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5017,"column":0},"generated":{"line":5019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5018,"column":0},"generated":{"line":5020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5019,"column":0},"generated":{"line":5021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5020,"column":0},"generated":{"line":5022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5021,"column":0},"generated":{"line":5023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5022,"column":0},"generated":{"line":5024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5023,"column":0},"generated":{"line":5025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5024,"column":0},"generated":{"line":5026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5025,"column":0},"generated":{"line":5027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5026,"column":0},"generated":{"line":5028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5027,"column":0},"generated":{"line":5029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5028,"column":0},"generated":{"line":5030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5029,"column":0},"generated":{"line":5031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5030,"column":0},"generated":{"line":5032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5031,"column":0},"generated":{"line":5033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5032,"column":0},"generated":{"line":5034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5033,"column":0},"generated":{"line":5035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5034,"column":0},"generated":{"line":5036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5035,"column":0},"generated":{"line":5037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5036,"column":0},"generated":{"line":5038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5037,"column":0},"generated":{"line":5039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5038,"column":0},"generated":{"line":5040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5039,"column":0},"generated":{"line":5041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5040,"column":0},"generated":{"line":5042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5041,"column":0},"generated":{"line":5043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5042,"column":0},"generated":{"line":5044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5043,"column":0},"generated":{"line":5045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5044,"column":0},"generated":{"line":5046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5045,"column":0},"generated":{"line":5047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5046,"column":0},"generated":{"line":5048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5047,"column":0},"generated":{"line":5049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5048,"column":0},"generated":{"line":5050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5049,"column":0},"generated":{"line":5051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5050,"column":0},"generated":{"line":5052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5051,"column":0},"generated":{"line":5053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5052,"column":0},"generated":{"line":5054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5053,"column":0},"generated":{"line":5055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5054,"column":0},"generated":{"line":5056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5055,"column":0},"generated":{"line":5057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5056,"column":0},"generated":{"line":5058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5057,"column":0},"generated":{"line":5059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5058,"column":0},"generated":{"line":5060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5059,"column":0},"generated":{"line":5061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5060,"column":0},"generated":{"line":5062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5061,"column":0},"generated":{"line":5063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5062,"column":0},"generated":{"line":5064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5063,"column":0},"generated":{"line":5065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5064,"column":0},"generated":{"line":5066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5065,"column":0},"generated":{"line":5067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5066,"column":0},"generated":{"line":5068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5067,"column":0},"generated":{"line":5069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5068,"column":0},"generated":{"line":5070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5069,"column":0},"generated":{"line":5071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5070,"column":0},"generated":{"line":5072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5071,"column":0},"generated":{"line":5073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5072,"column":0},"generated":{"line":5074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5073,"column":0},"generated":{"line":5075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5074,"column":0},"generated":{"line":5076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5075,"column":0},"generated":{"line":5077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5076,"column":0},"generated":{"line":5078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5077,"column":0},"generated":{"line":5079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5078,"column":0},"generated":{"line":5080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5079,"column":0},"generated":{"line":5081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5080,"column":0},"generated":{"line":5082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5081,"column":0},"generated":{"line":5083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5082,"column":0},"generated":{"line":5084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5083,"column":0},"generated":{"line":5085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5084,"column":0},"generated":{"line":5086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5085,"column":0},"generated":{"line":5087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5086,"column":0},"generated":{"line":5088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5087,"column":0},"generated":{"line":5089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5088,"column":0},"generated":{"line":5090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5089,"column":0},"generated":{"line":5091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5090,"column":0},"generated":{"line":5092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5091,"column":0},"generated":{"line":5093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5092,"column":0},"generated":{"line":5094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5093,"column":0},"generated":{"line":5095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5094,"column":0},"generated":{"line":5096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5095,"column":0},"generated":{"line":5097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5096,"column":0},"generated":{"line":5098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5097,"column":0},"generated":{"line":5099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5098,"column":0},"generated":{"line":5100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5099,"column":0},"generated":{"line":5101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5100,"column":0},"generated":{"line":5102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5101,"column":0},"generated":{"line":5103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5102,"column":0},"generated":{"line":5104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5103,"column":0},"generated":{"line":5105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5104,"column":0},"generated":{"line":5106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5105,"column":0},"generated":{"line":5107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5106,"column":0},"generated":{"line":5108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5107,"column":0},"generated":{"line":5109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5108,"column":0},"generated":{"line":5110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5109,"column":0},"generated":{"line":5111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5110,"column":0},"generated":{"line":5112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5111,"column":0},"generated":{"line":5113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5112,"column":0},"generated":{"line":5114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5113,"column":0},"generated":{"line":5115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5114,"column":0},"generated":{"line":5116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5115,"column":0},"generated":{"line":5117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5116,"column":0},"generated":{"line":5118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5117,"column":0},"generated":{"line":5119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5118,"column":0},"generated":{"line":5120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5119,"column":0},"generated":{"line":5121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5120,"column":0},"generated":{"line":5122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5121,"column":0},"generated":{"line":5123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5122,"column":0},"generated":{"line":5124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5123,"column":0},"generated":{"line":5125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5124,"column":0},"generated":{"line":5126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5125,"column":0},"generated":{"line":5127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5126,"column":0},"generated":{"line":5128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5127,"column":0},"generated":{"line":5129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5128,"column":0},"generated":{"line":5130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5129,"column":0},"generated":{"line":5131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5130,"column":0},"generated":{"line":5132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5131,"column":0},"generated":{"line":5133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5132,"column":0},"generated":{"line":5134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5133,"column":0},"generated":{"line":5135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5134,"column":0},"generated":{"line":5136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5135,"column":0},"generated":{"line":5137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5136,"column":0},"generated":{"line":5138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5137,"column":0},"generated":{"line":5139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5138,"column":0},"generated":{"line":5140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5139,"column":0},"generated":{"line":5141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5140,"column":0},"generated":{"line":5142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5141,"column":0},"generated":{"line":5143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5142,"column":0},"generated":{"line":5144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5143,"column":0},"generated":{"line":5145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5144,"column":0},"generated":{"line":5146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5145,"column":0},"generated":{"line":5147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5146,"column":0},"generated":{"line":5148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5147,"column":0},"generated":{"line":5149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5148,"column":0},"generated":{"line":5150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5149,"column":0},"generated":{"line":5151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5150,"column":0},"generated":{"line":5152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5151,"column":0},"generated":{"line":5153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5152,"column":0},"generated":{"line":5154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5153,"column":0},"generated":{"line":5155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5154,"column":0},"generated":{"line":5156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5155,"column":0},"generated":{"line":5157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5156,"column":0},"generated":{"line":5158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5157,"column":0},"generated":{"line":5159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5158,"column":0},"generated":{"line":5160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5159,"column":0},"generated":{"line":5161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5160,"column":0},"generated":{"line":5162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5161,"column":0},"generated":{"line":5163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5162,"column":0},"generated":{"line":5164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5163,"column":0},"generated":{"line":5165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5164,"column":0},"generated":{"line":5166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5165,"column":0},"generated":{"line":5167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5166,"column":0},"generated":{"line":5168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5167,"column":0},"generated":{"line":5169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5168,"column":0},"generated":{"line":5170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5169,"column":0},"generated":{"line":5171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5170,"column":0},"generated":{"line":5172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5171,"column":0},"generated":{"line":5173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5172,"column":0},"generated":{"line":5174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5173,"column":0},"generated":{"line":5175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5174,"column":0},"generated":{"line":5176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5175,"column":0},"generated":{"line":5177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5176,"column":0},"generated":{"line":5178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5177,"column":0},"generated":{"line":5179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5178,"column":0},"generated":{"line":5180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5179,"column":0},"generated":{"line":5181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5180,"column":0},"generated":{"line":5182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5181,"column":0},"generated":{"line":5183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5182,"column":0},"generated":{"line":5184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5183,"column":0},"generated":{"line":5185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5184,"column":0},"generated":{"line":5186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5185,"column":0},"generated":{"line":5187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5186,"column":0},"generated":{"line":5188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5187,"column":0},"generated":{"line":5189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5188,"column":0},"generated":{"line":5190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5189,"column":0},"generated":{"line":5191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5190,"column":0},"generated":{"line":5192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5191,"column":0},"generated":{"line":5193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5192,"column":0},"generated":{"line":5194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5193,"column":0},"generated":{"line":5195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5194,"column":0},"generated":{"line":5196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5195,"column":0},"generated":{"line":5197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5196,"column":0},"generated":{"line":5198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5197,"column":0},"generated":{"line":5199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5198,"column":0},"generated":{"line":5200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5199,"column":0},"generated":{"line":5201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5200,"column":0},"generated":{"line":5202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5201,"column":0},"generated":{"line":5203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5202,"column":0},"generated":{"line":5204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5203,"column":0},"generated":{"line":5205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5204,"column":0},"generated":{"line":5206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5205,"column":0},"generated":{"line":5207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5206,"column":0},"generated":{"line":5208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5207,"column":0},"generated":{"line":5209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5208,"column":0},"generated":{"line":5210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5209,"column":0},"generated":{"line":5211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5210,"column":0},"generated":{"line":5212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5211,"column":0},"generated":{"line":5213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5212,"column":0},"generated":{"line":5214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5213,"column":0},"generated":{"line":5215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5214,"column":0},"generated":{"line":5216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5215,"column":0},"generated":{"line":5217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5216,"column":0},"generated":{"line":5218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5217,"column":0},"generated":{"line":5219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5218,"column":0},"generated":{"line":5220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5219,"column":0},"generated":{"line":5221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5220,"column":0},"generated":{"line":5222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5221,"column":0},"generated":{"line":5223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5222,"column":0},"generated":{"line":5224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5223,"column":0},"generated":{"line":5225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5224,"column":0},"generated":{"line":5226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5225,"column":0},"generated":{"line":5227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5226,"column":0},"generated":{"line":5228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5227,"column":0},"generated":{"line":5229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5228,"column":0},"generated":{"line":5230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5229,"column":0},"generated":{"line":5231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5230,"column":0},"generated":{"line":5232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5231,"column":0},"generated":{"line":5233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5232,"column":0},"generated":{"line":5234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5233,"column":0},"generated":{"line":5235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5234,"column":0},"generated":{"line":5236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5235,"column":0},"generated":{"line":5237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5236,"column":0},"generated":{"line":5238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5237,"column":0},"generated":{"line":5239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5238,"column":0},"generated":{"line":5240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5239,"column":0},"generated":{"line":5241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5240,"column":0},"generated":{"line":5242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5241,"column":0},"generated":{"line":5243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5242,"column":0},"generated":{"line":5244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5243,"column":0},"generated":{"line":5245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5244,"column":0},"generated":{"line":5246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5245,"column":0},"generated":{"line":5247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5246,"column":0},"generated":{"line":5248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5247,"column":0},"generated":{"line":5249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5248,"column":0},"generated":{"line":5250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5249,"column":0},"generated":{"line":5251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5250,"column":0},"generated":{"line":5252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5251,"column":0},"generated":{"line":5253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5252,"column":0},"generated":{"line":5254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5253,"column":0},"generated":{"line":5255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5254,"column":0},"generated":{"line":5256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5255,"column":0},"generated":{"line":5257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5256,"column":0},"generated":{"line":5258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5257,"column":0},"generated":{"line":5259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5258,"column":0},"generated":{"line":5260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5259,"column":0},"generated":{"line":5261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5260,"column":0},"generated":{"line":5262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5261,"column":0},"generated":{"line":5263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5262,"column":0},"generated":{"line":5264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5263,"column":0},"generated":{"line":5265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5264,"column":0},"generated":{"line":5266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5265,"column":0},"generated":{"line":5267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5266,"column":0},"generated":{"line":5268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5267,"column":0},"generated":{"line":5269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5268,"column":0},"generated":{"line":5270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5269,"column":0},"generated":{"line":5271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5270,"column":0},"generated":{"line":5272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5271,"column":0},"generated":{"line":5273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5272,"column":0},"generated":{"line":5274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5273,"column":0},"generated":{"line":5275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5274,"column":0},"generated":{"line":5276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5275,"column":0},"generated":{"line":5277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5276,"column":0},"generated":{"line":5278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5277,"column":0},"generated":{"line":5279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5278,"column":0},"generated":{"line":5280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5279,"column":0},"generated":{"line":5281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5280,"column":0},"generated":{"line":5282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5281,"column":0},"generated":{"line":5283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5282,"column":0},"generated":{"line":5284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5283,"column":0},"generated":{"line":5285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5284,"column":0},"generated":{"line":5286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5285,"column":0},"generated":{"line":5287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5286,"column":0},"generated":{"line":5288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5287,"column":0},"generated":{"line":5289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5288,"column":0},"generated":{"line":5290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5289,"column":0},"generated":{"line":5291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5290,"column":0},"generated":{"line":5292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5291,"column":0},"generated":{"line":5293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5292,"column":0},"generated":{"line":5294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5293,"column":0},"generated":{"line":5295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5294,"column":0},"generated":{"line":5296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5295,"column":0},"generated":{"line":5297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5296,"column":0},"generated":{"line":5298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5297,"column":0},"generated":{"line":5299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5298,"column":0},"generated":{"line":5300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5299,"column":0},"generated":{"line":5301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5300,"column":0},"generated":{"line":5302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5301,"column":0},"generated":{"line":5303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5302,"column":0},"generated":{"line":5304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5303,"column":0},"generated":{"line":5305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5304,"column":0},"generated":{"line":5306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5305,"column":0},"generated":{"line":5307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5306,"column":0},"generated":{"line":5308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5307,"column":0},"generated":{"line":5309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5308,"column":0},"generated":{"line":5310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5309,"column":0},"generated":{"line":5311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5310,"column":0},"generated":{"line":5312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5311,"column":0},"generated":{"line":5313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5312,"column":0},"generated":{"line":5314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5313,"column":0},"generated":{"line":5315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5314,"column":0},"generated":{"line":5316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5315,"column":0},"generated":{"line":5317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5316,"column":0},"generated":{"line":5318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5317,"column":0},"generated":{"line":5319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5318,"column":0},"generated":{"line":5320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5319,"column":0},"generated":{"line":5321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5320,"column":0},"generated":{"line":5322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5321,"column":0},"generated":{"line":5323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5322,"column":0},"generated":{"line":5324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5323,"column":0},"generated":{"line":5325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5324,"column":0},"generated":{"line":5326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5325,"column":0},"generated":{"line":5327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5326,"column":0},"generated":{"line":5328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5327,"column":0},"generated":{"line":5329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5328,"column":0},"generated":{"line":5330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5329,"column":0},"generated":{"line":5331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5330,"column":0},"generated":{"line":5332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5331,"column":0},"generated":{"line":5333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5332,"column":0},"generated":{"line":5334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5333,"column":0},"generated":{"line":5335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5334,"column":0},"generated":{"line":5336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5335,"column":0},"generated":{"line":5337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5336,"column":0},"generated":{"line":5338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5337,"column":0},"generated":{"line":5339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5338,"column":0},"generated":{"line":5340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5339,"column":0},"generated":{"line":5341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5340,"column":0},"generated":{"line":5342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5341,"column":0},"generated":{"line":5343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5342,"column":0},"generated":{"line":5344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5343,"column":0},"generated":{"line":5345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5344,"column":0},"generated":{"line":5346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5345,"column":0},"generated":{"line":5347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5346,"column":0},"generated":{"line":5348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5347,"column":0},"generated":{"line":5349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5348,"column":0},"generated":{"line":5350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5349,"column":0},"generated":{"line":5351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5350,"column":0},"generated":{"line":5352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5351,"column":0},"generated":{"line":5353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5352,"column":0},"generated":{"line":5354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5353,"column":0},"generated":{"line":5355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5354,"column":0},"generated":{"line":5356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5355,"column":0},"generated":{"line":5357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5356,"column":0},"generated":{"line":5358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5357,"column":0},"generated":{"line":5359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5358,"column":0},"generated":{"line":5360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5359,"column":0},"generated":{"line":5361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5360,"column":0},"generated":{"line":5362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5361,"column":0},"generated":{"line":5363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5362,"column":0},"generated":{"line":5364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5363,"column":0},"generated":{"line":5365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5364,"column":0},"generated":{"line":5366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5365,"column":0},"generated":{"line":5367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5366,"column":0},"generated":{"line":5368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5367,"column":0},"generated":{"line":5369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5368,"column":0},"generated":{"line":5370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5369,"column":0},"generated":{"line":5371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5370,"column":0},"generated":{"line":5372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5371,"column":0},"generated":{"line":5373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5372,"column":0},"generated":{"line":5374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5373,"column":0},"generated":{"line":5375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5374,"column":0},"generated":{"line":5376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5375,"column":0},"generated":{"line":5377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5376,"column":0},"generated":{"line":5378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5377,"column":0},"generated":{"line":5379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5378,"column":0},"generated":{"line":5380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5379,"column":0},"generated":{"line":5381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5380,"column":0},"generated":{"line":5382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5381,"column":0},"generated":{"line":5383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5382,"column":0},"generated":{"line":5384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5383,"column":0},"generated":{"line":5385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5384,"column":0},"generated":{"line":5386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5385,"column":0},"generated":{"line":5387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5386,"column":0},"generated":{"line":5388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5387,"column":0},"generated":{"line":5389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5388,"column":0},"generated":{"line":5390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5389,"column":0},"generated":{"line":5391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5390,"column":0},"generated":{"line":5392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5391,"column":0},"generated":{"line":5393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5392,"column":0},"generated":{"line":5394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5393,"column":0},"generated":{"line":5395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5394,"column":0},"generated":{"line":5396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5395,"column":0},"generated":{"line":5397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5396,"column":0},"generated":{"line":5398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5397,"column":0},"generated":{"line":5399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5398,"column":0},"generated":{"line":5400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5399,"column":0},"generated":{"line":5401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5400,"column":0},"generated":{"line":5402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5401,"column":0},"generated":{"line":5403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5402,"column":0},"generated":{"line":5404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5403,"column":0},"generated":{"line":5405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5404,"column":0},"generated":{"line":5406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5405,"column":0},"generated":{"line":5407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5406,"column":0},"generated":{"line":5408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5407,"column":0},"generated":{"line":5409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5408,"column":0},"generated":{"line":5410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5409,"column":0},"generated":{"line":5411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5410,"column":0},"generated":{"line":5412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5411,"column":0},"generated":{"line":5413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5412,"column":0},"generated":{"line":5414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5413,"column":0},"generated":{"line":5415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5414,"column":0},"generated":{"line":5416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5415,"column":0},"generated":{"line":5417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5416,"column":0},"generated":{"line":5418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5417,"column":0},"generated":{"line":5419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5418,"column":0},"generated":{"line":5420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5419,"column":0},"generated":{"line":5421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5420,"column":0},"generated":{"line":5422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5421,"column":0},"generated":{"line":5423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5422,"column":0},"generated":{"line":5424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5423,"column":0},"generated":{"line":5425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5424,"column":0},"generated":{"line":5426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5425,"column":0},"generated":{"line":5427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5426,"column":0},"generated":{"line":5428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5427,"column":0},"generated":{"line":5429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5428,"column":0},"generated":{"line":5430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5429,"column":0},"generated":{"line":5431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5430,"column":0},"generated":{"line":5432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5431,"column":0},"generated":{"line":5433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5432,"column":0},"generated":{"line":5434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5433,"column":0},"generated":{"line":5435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5434,"column":0},"generated":{"line":5436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5435,"column":0},"generated":{"line":5437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5436,"column":0},"generated":{"line":5438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5437,"column":0},"generated":{"line":5439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5438,"column":0},"generated":{"line":5440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5439,"column":0},"generated":{"line":5441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5440,"column":0},"generated":{"line":5442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5441,"column":0},"generated":{"line":5443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5442,"column":0},"generated":{"line":5444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5443,"column":0},"generated":{"line":5445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5444,"column":0},"generated":{"line":5446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5445,"column":0},"generated":{"line":5447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5446,"column":0},"generated":{"line":5448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5447,"column":0},"generated":{"line":5449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5448,"column":0},"generated":{"line":5450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5449,"column":0},"generated":{"line":5451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5450,"column":0},"generated":{"line":5452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5451,"column":0},"generated":{"line":5453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5452,"column":0},"generated":{"line":5454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5453,"column":0},"generated":{"line":5455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5454,"column":0},"generated":{"line":5456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5455,"column":0},"generated":{"line":5457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5456,"column":0},"generated":{"line":5458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5457,"column":0},"generated":{"line":5459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5458,"column":0},"generated":{"line":5460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5459,"column":0},"generated":{"line":5461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5460,"column":0},"generated":{"line":5462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5461,"column":0},"generated":{"line":5463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5462,"column":0},"generated":{"line":5464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5463,"column":0},"generated":{"line":5465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5464,"column":0},"generated":{"line":5466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5465,"column":0},"generated":{"line":5467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5466,"column":0},"generated":{"line":5468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5467,"column":0},"generated":{"line":5469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5468,"column":0},"generated":{"line":5470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5469,"column":0},"generated":{"line":5471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5470,"column":0},"generated":{"line":5472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5471,"column":0},"generated":{"line":5473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5472,"column":0},"generated":{"line":5474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5473,"column":0},"generated":{"line":5475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5474,"column":0},"generated":{"line":5476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5475,"column":0},"generated":{"line":5477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5476,"column":0},"generated":{"line":5478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5477,"column":0},"generated":{"line":5479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5478,"column":0},"generated":{"line":5480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5479,"column":0},"generated":{"line":5481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5480,"column":0},"generated":{"line":5482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5481,"column":0},"generated":{"line":5483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5482,"column":0},"generated":{"line":5484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5483,"column":0},"generated":{"line":5485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5484,"column":0},"generated":{"line":5486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5485,"column":0},"generated":{"line":5487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5486,"column":0},"generated":{"line":5488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5487,"column":0},"generated":{"line":5489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5488,"column":0},"generated":{"line":5490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5489,"column":0},"generated":{"line":5491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5490,"column":0},"generated":{"line":5492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5491,"column":0},"generated":{"line":5493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5492,"column":0},"generated":{"line":5494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5493,"column":0},"generated":{"line":5495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5494,"column":0},"generated":{"line":5496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5495,"column":0},"generated":{"line":5497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5496,"column":0},"generated":{"line":5498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5497,"column":0},"generated":{"line":5499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5498,"column":0},"generated":{"line":5500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5499,"column":0},"generated":{"line":5501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5500,"column":0},"generated":{"line":5502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5501,"column":0},"generated":{"line":5503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5502,"column":0},"generated":{"line":5504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5503,"column":0},"generated":{"line":5505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5504,"column":0},"generated":{"line":5506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5505,"column":0},"generated":{"line":5507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5506,"column":0},"generated":{"line":5508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5507,"column":0},"generated":{"line":5509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5508,"column":0},"generated":{"line":5510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5509,"column":0},"generated":{"line":5511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5510,"column":0},"generated":{"line":5512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5511,"column":0},"generated":{"line":5513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5512,"column":0},"generated":{"line":5514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5513,"column":0},"generated":{"line":5515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5514,"column":0},"generated":{"line":5516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5515,"column":0},"generated":{"line":5517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5516,"column":0},"generated":{"line":5518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5517,"column":0},"generated":{"line":5519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5518,"column":0},"generated":{"line":5520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5519,"column":0},"generated":{"line":5521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5520,"column":0},"generated":{"line":5522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5521,"column":0},"generated":{"line":5523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5522,"column":0},"generated":{"line":5524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5523,"column":0},"generated":{"line":5525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5524,"column":0},"generated":{"line":5526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5525,"column":0},"generated":{"line":5527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5526,"column":0},"generated":{"line":5528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5527,"column":0},"generated":{"line":5529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5528,"column":0},"generated":{"line":5530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5529,"column":0},"generated":{"line":5531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5530,"column":0},"generated":{"line":5532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5531,"column":0},"generated":{"line":5533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5532,"column":0},"generated":{"line":5534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5533,"column":0},"generated":{"line":5535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5534,"column":0},"generated":{"line":5536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5535,"column":0},"generated":{"line":5537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5536,"column":0},"generated":{"line":5538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5537,"column":0},"generated":{"line":5539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5538,"column":0},"generated":{"line":5540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5539,"column":0},"generated":{"line":5541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5540,"column":0},"generated":{"line":5542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5541,"column":0},"generated":{"line":5543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5542,"column":0},"generated":{"line":5544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5543,"column":0},"generated":{"line":5545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5544,"column":0},"generated":{"line":5546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5545,"column":0},"generated":{"line":5547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5546,"column":0},"generated":{"line":5548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5547,"column":0},"generated":{"line":5549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5548,"column":0},"generated":{"line":5550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5549,"column":0},"generated":{"line":5551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5550,"column":0},"generated":{"line":5552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5551,"column":0},"generated":{"line":5553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5552,"column":0},"generated":{"line":5554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5553,"column":0},"generated":{"line":5555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5554,"column":0},"generated":{"line":5556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5555,"column":0},"generated":{"line":5557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5556,"column":0},"generated":{"line":5558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5557,"column":0},"generated":{"line":5559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5558,"column":0},"generated":{"line":5560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5559,"column":0},"generated":{"line":5561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5560,"column":0},"generated":{"line":5562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5561,"column":0},"generated":{"line":5563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5562,"column":0},"generated":{"line":5564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5563,"column":0},"generated":{"line":5565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5564,"column":0},"generated":{"line":5566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5565,"column":0},"generated":{"line":5567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5566,"column":0},"generated":{"line":5568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5567,"column":0},"generated":{"line":5569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5568,"column":0},"generated":{"line":5570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5569,"column":0},"generated":{"line":5571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5570,"column":0},"generated":{"line":5572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5571,"column":0},"generated":{"line":5573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5572,"column":0},"generated":{"line":5574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5573,"column":0},"generated":{"line":5575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5574,"column":0},"generated":{"line":5576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5575,"column":0},"generated":{"line":5577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5576,"column":0},"generated":{"line":5578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5577,"column":0},"generated":{"line":5579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5578,"column":0},"generated":{"line":5580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5579,"column":0},"generated":{"line":5581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5580,"column":0},"generated":{"line":5582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5581,"column":0},"generated":{"line":5583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5582,"column":0},"generated":{"line":5584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5583,"column":0},"generated":{"line":5585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5584,"column":0},"generated":{"line":5586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5585,"column":0},"generated":{"line":5587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5586,"column":0},"generated":{"line":5588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5587,"column":0},"generated":{"line":5589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5588,"column":0},"generated":{"line":5590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5589,"column":0},"generated":{"line":5591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5590,"column":0},"generated":{"line":5592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5591,"column":0},"generated":{"line":5593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5592,"column":0},"generated":{"line":5594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5593,"column":0},"generated":{"line":5595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5594,"column":0},"generated":{"line":5596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5595,"column":0},"generated":{"line":5597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5596,"column":0},"generated":{"line":5598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5597,"column":0},"generated":{"line":5599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5598,"column":0},"generated":{"line":5600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5599,"column":0},"generated":{"line":5601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5600,"column":0},"generated":{"line":5602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5601,"column":0},"generated":{"line":5603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5602,"column":0},"generated":{"line":5604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5603,"column":0},"generated":{"line":5605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5604,"column":0},"generated":{"line":5606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5605,"column":0},"generated":{"line":5607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5606,"column":0},"generated":{"line":5608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5607,"column":0},"generated":{"line":5609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5608,"column":0},"generated":{"line":5610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5609,"column":0},"generated":{"line":5611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5610,"column":0},"generated":{"line":5612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5611,"column":0},"generated":{"line":5613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5612,"column":0},"generated":{"line":5614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5613,"column":0},"generated":{"line":5615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5614,"column":0},"generated":{"line":5616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5615,"column":0},"generated":{"line":5617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5616,"column":0},"generated":{"line":5618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5617,"column":0},"generated":{"line":5619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5618,"column":0},"generated":{"line":5620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5619,"column":0},"generated":{"line":5621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5620,"column":0},"generated":{"line":5622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5621,"column":0},"generated":{"line":5623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5622,"column":0},"generated":{"line":5624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5623,"column":0},"generated":{"line":5625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5624,"column":0},"generated":{"line":5626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5625,"column":0},"generated":{"line":5627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5626,"column":0},"generated":{"line":5628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5627,"column":0},"generated":{"line":5629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5628,"column":0},"generated":{"line":5630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5629,"column":0},"generated":{"line":5631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5630,"column":0},"generated":{"line":5632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5631,"column":0},"generated":{"line":5633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5632,"column":0},"generated":{"line":5634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5633,"column":0},"generated":{"line":5635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5634,"column":0},"generated":{"line":5636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5635,"column":0},"generated":{"line":5637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5636,"column":0},"generated":{"line":5638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5637,"column":0},"generated":{"line":5639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5638,"column":0},"generated":{"line":5640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5639,"column":0},"generated":{"line":5641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5640,"column":0},"generated":{"line":5642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5641,"column":0},"generated":{"line":5643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5642,"column":0},"generated":{"line":5644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5643,"column":0},"generated":{"line":5645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5644,"column":0},"generated":{"line":5646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5645,"column":0},"generated":{"line":5647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5646,"column":0},"generated":{"line":5648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5647,"column":0},"generated":{"line":5649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5648,"column":0},"generated":{"line":5650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5649,"column":0},"generated":{"line":5651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5650,"column":0},"generated":{"line":5652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5651,"column":0},"generated":{"line":5653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5652,"column":0},"generated":{"line":5654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5653,"column":0},"generated":{"line":5655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5654,"column":0},"generated":{"line":5656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5655,"column":0},"generated":{"line":5657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5656,"column":0},"generated":{"line":5658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5657,"column":0},"generated":{"line":5659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5658,"column":0},"generated":{"line":5660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5659,"column":0},"generated":{"line":5661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5660,"column":0},"generated":{"line":5662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5661,"column":0},"generated":{"line":5663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5662,"column":0},"generated":{"line":5664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5663,"column":0},"generated":{"line":5665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5664,"column":0},"generated":{"line":5666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5665,"column":0},"generated":{"line":5667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5666,"column":0},"generated":{"line":5668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5667,"column":0},"generated":{"line":5669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5668,"column":0},"generated":{"line":5670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5669,"column":0},"generated":{"line":5671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5670,"column":0},"generated":{"line":5672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5671,"column":0},"generated":{"line":5673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5672,"column":0},"generated":{"line":5674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5673,"column":0},"generated":{"line":5675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5674,"column":0},"generated":{"line":5676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5675,"column":0},"generated":{"line":5677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5676,"column":0},"generated":{"line":5678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5677,"column":0},"generated":{"line":5679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5678,"column":0},"generated":{"line":5680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5679,"column":0},"generated":{"line":5681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5680,"column":0},"generated":{"line":5682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5681,"column":0},"generated":{"line":5683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5682,"column":0},"generated":{"line":5684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5683,"column":0},"generated":{"line":5685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5684,"column":0},"generated":{"line":5686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5685,"column":0},"generated":{"line":5687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5686,"column":0},"generated":{"line":5688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5687,"column":0},"generated":{"line":5689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5688,"column":0},"generated":{"line":5690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5689,"column":0},"generated":{"line":5691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5690,"column":0},"generated":{"line":5692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5691,"column":0},"generated":{"line":5693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5692,"column":0},"generated":{"line":5694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5693,"column":0},"generated":{"line":5695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5694,"column":0},"generated":{"line":5696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5695,"column":0},"generated":{"line":5697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5696,"column":0},"generated":{"line":5698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5697,"column":0},"generated":{"line":5699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5698,"column":0},"generated":{"line":5700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5699,"column":0},"generated":{"line":5701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5700,"column":0},"generated":{"line":5702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5701,"column":0},"generated":{"line":5703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5702,"column":0},"generated":{"line":5704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5703,"column":0},"generated":{"line":5705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5704,"column":0},"generated":{"line":5706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5705,"column":0},"generated":{"line":5707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5706,"column":0},"generated":{"line":5708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5707,"column":0},"generated":{"line":5709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5708,"column":0},"generated":{"line":5710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5709,"column":0},"generated":{"line":5711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5710,"column":0},"generated":{"line":5712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5711,"column":0},"generated":{"line":5713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5712,"column":0},"generated":{"line":5714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5713,"column":0},"generated":{"line":5715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5714,"column":0},"generated":{"line":5716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5715,"column":0},"generated":{"line":5717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5716,"column":0},"generated":{"line":5718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5717,"column":0},"generated":{"line":5719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5718,"column":0},"generated":{"line":5720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5719,"column":0},"generated":{"line":5721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5720,"column":0},"generated":{"line":5722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5721,"column":0},"generated":{"line":5723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5722,"column":0},"generated":{"line":5724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5723,"column":0},"generated":{"line":5725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5724,"column":0},"generated":{"line":5726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5725,"column":0},"generated":{"line":5727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5726,"column":0},"generated":{"line":5728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5727,"column":0},"generated":{"line":5729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5728,"column":0},"generated":{"line":5730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5729,"column":0},"generated":{"line":5731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5730,"column":0},"generated":{"line":5732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5731,"column":0},"generated":{"line":5733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5732,"column":0},"generated":{"line":5734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5733,"column":0},"generated":{"line":5735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5734,"column":0},"generated":{"line":5736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5735,"column":0},"generated":{"line":5737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5736,"column":0},"generated":{"line":5738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5737,"column":0},"generated":{"line":5739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5738,"column":0},"generated":{"line":5740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5739,"column":0},"generated":{"line":5741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5740,"column":0},"generated":{"line":5742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5741,"column":0},"generated":{"line":5743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5742,"column":0},"generated":{"line":5744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5743,"column":0},"generated":{"line":5745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5744,"column":0},"generated":{"line":5746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5745,"column":0},"generated":{"line":5747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5746,"column":0},"generated":{"line":5748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5747,"column":0},"generated":{"line":5749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5748,"column":0},"generated":{"line":5750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5749,"column":0},"generated":{"line":5751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5750,"column":0},"generated":{"line":5752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5751,"column":0},"generated":{"line":5753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5752,"column":0},"generated":{"line":5754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5753,"column":0},"generated":{"line":5755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5754,"column":0},"generated":{"line":5756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5755,"column":0},"generated":{"line":5757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5756,"column":0},"generated":{"line":5758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5757,"column":0},"generated":{"line":5759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5758,"column":0},"generated":{"line":5760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5759,"column":0},"generated":{"line":5761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5760,"column":0},"generated":{"line":5762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5761,"column":0},"generated":{"line":5763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5762,"column":0},"generated":{"line":5764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5763,"column":0},"generated":{"line":5765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5764,"column":0},"generated":{"line":5766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5765,"column":0},"generated":{"line":5767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5766,"column":0},"generated":{"line":5768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5767,"column":0},"generated":{"line":5769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5768,"column":0},"generated":{"line":5770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5769,"column":0},"generated":{"line":5771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5770,"column":0},"generated":{"line":5772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5771,"column":0},"generated":{"line":5773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5772,"column":0},"generated":{"line":5774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5773,"column":0},"generated":{"line":5775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5774,"column":0},"generated":{"line":5776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5775,"column":0},"generated":{"line":5777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5776,"column":0},"generated":{"line":5778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5777,"column":0},"generated":{"line":5779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5778,"column":0},"generated":{"line":5780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5779,"column":0},"generated":{"line":5781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5780,"column":0},"generated":{"line":5782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5781,"column":0},"generated":{"line":5783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5782,"column":0},"generated":{"line":5784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5783,"column":0},"generated":{"line":5785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5784,"column":0},"generated":{"line":5786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5785,"column":0},"generated":{"line":5787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5786,"column":0},"generated":{"line":5788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5787,"column":0},"generated":{"line":5789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5788,"column":0},"generated":{"line":5790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5789,"column":0},"generated":{"line":5791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5790,"column":0},"generated":{"line":5792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5791,"column":0},"generated":{"line":5793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5792,"column":0},"generated":{"line":5794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5793,"column":0},"generated":{"line":5795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5794,"column":0},"generated":{"line":5796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5795,"column":0},"generated":{"line":5797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5796,"column":0},"generated":{"line":5798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5797,"column":0},"generated":{"line":5799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5798,"column":0},"generated":{"line":5800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5799,"column":0},"generated":{"line":5801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5800,"column":0},"generated":{"line":5802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5801,"column":0},"generated":{"line":5803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5802,"column":0},"generated":{"line":5804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5803,"column":0},"generated":{"line":5805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5804,"column":0},"generated":{"line":5806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5805,"column":0},"generated":{"line":5807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5806,"column":0},"generated":{"line":5808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5807,"column":0},"generated":{"line":5809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5808,"column":0},"generated":{"line":5810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5809,"column":0},"generated":{"line":5811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5810,"column":0},"generated":{"line":5812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5811,"column":0},"generated":{"line":5813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5812,"column":0},"generated":{"line":5814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5813,"column":0},"generated":{"line":5815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5814,"column":0},"generated":{"line":5816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5815,"column":0},"generated":{"line":5817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5816,"column":0},"generated":{"line":5818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5817,"column":0},"generated":{"line":5819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5818,"column":0},"generated":{"line":5820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5819,"column":0},"generated":{"line":5821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5820,"column":0},"generated":{"line":5822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5821,"column":0},"generated":{"line":5823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5822,"column":0},"generated":{"line":5824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5823,"column":0},"generated":{"line":5825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5824,"column":0},"generated":{"line":5826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5825,"column":0},"generated":{"line":5827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5826,"column":0},"generated":{"line":5828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5827,"column":0},"generated":{"line":5829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5828,"column":0},"generated":{"line":5830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5829,"column":0},"generated":{"line":5831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5830,"column":0},"generated":{"line":5832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5831,"column":0},"generated":{"line":5833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5832,"column":0},"generated":{"line":5834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5833,"column":0},"generated":{"line":5835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5834,"column":0},"generated":{"line":5836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5835,"column":0},"generated":{"line":5837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5836,"column":0},"generated":{"line":5838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5837,"column":0},"generated":{"line":5839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5838,"column":0},"generated":{"line":5840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5839,"column":0},"generated":{"line":5841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5840,"column":0},"generated":{"line":5842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5841,"column":0},"generated":{"line":5843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5842,"column":0},"generated":{"line":5844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5843,"column":0},"generated":{"line":5845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5844,"column":0},"generated":{"line":5846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5845,"column":0},"generated":{"line":5847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5846,"column":0},"generated":{"line":5848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5847,"column":0},"generated":{"line":5849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5848,"column":0},"generated":{"line":5850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5849,"column":0},"generated":{"line":5851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5850,"column":0},"generated":{"line":5852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5851,"column":0},"generated":{"line":5853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5852,"column":0},"generated":{"line":5854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5853,"column":0},"generated":{"line":5855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5854,"column":0},"generated":{"line":5856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5855,"column":0},"generated":{"line":5857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5856,"column":0},"generated":{"line":5858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5857,"column":0},"generated":{"line":5859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5858,"column":0},"generated":{"line":5860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5859,"column":0},"generated":{"line":5861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5860,"column":0},"generated":{"line":5862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5861,"column":0},"generated":{"line":5863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5862,"column":0},"generated":{"line":5864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5863,"column":0},"generated":{"line":5865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5864,"column":0},"generated":{"line":5866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5865,"column":0},"generated":{"line":5867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5866,"column":0},"generated":{"line":5868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5867,"column":0},"generated":{"line":5869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5868,"column":0},"generated":{"line":5870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5869,"column":0},"generated":{"line":5871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5870,"column":0},"generated":{"line":5872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5871,"column":0},"generated":{"line":5873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5872,"column":0},"generated":{"line":5874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5873,"column":0},"generated":{"line":5875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5874,"column":0},"generated":{"line":5876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5875,"column":0},"generated":{"line":5877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5876,"column":0},"generated":{"line":5878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5877,"column":0},"generated":{"line":5879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5878,"column":0},"generated":{"line":5880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5879,"column":0},"generated":{"line":5881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5880,"column":0},"generated":{"line":5882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5881,"column":0},"generated":{"line":5883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5882,"column":0},"generated":{"line":5884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5883,"column":0},"generated":{"line":5885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5884,"column":0},"generated":{"line":5886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5885,"column":0},"generated":{"line":5887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5886,"column":0},"generated":{"line":5888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5887,"column":0},"generated":{"line":5889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5888,"column":0},"generated":{"line":5890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5889,"column":0},"generated":{"line":5891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5890,"column":0},"generated":{"line":5892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5891,"column":0},"generated":{"line":5893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5892,"column":0},"generated":{"line":5894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5893,"column":0},"generated":{"line":5895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5894,"column":0},"generated":{"line":5896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5895,"column":0},"generated":{"line":5897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5896,"column":0},"generated":{"line":5898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5897,"column":0},"generated":{"line":5899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5898,"column":0},"generated":{"line":5900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5899,"column":0},"generated":{"line":5901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5900,"column":0},"generated":{"line":5902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5901,"column":0},"generated":{"line":5903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5902,"column":0},"generated":{"line":5904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5903,"column":0},"generated":{"line":5905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5904,"column":0},"generated":{"line":5906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5905,"column":0},"generated":{"line":5907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5906,"column":0},"generated":{"line":5908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5907,"column":0},"generated":{"line":5909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5908,"column":0},"generated":{"line":5910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5909,"column":0},"generated":{"line":5911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5910,"column":0},"generated":{"line":5912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5911,"column":0},"generated":{"line":5913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5912,"column":0},"generated":{"line":5914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5913,"column":0},"generated":{"line":5915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5914,"column":0},"generated":{"line":5916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5915,"column":0},"generated":{"line":5917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5916,"column":0},"generated":{"line":5918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5917,"column":0},"generated":{"line":5919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5918,"column":0},"generated":{"line":5920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5919,"column":0},"generated":{"line":5921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5920,"column":0},"generated":{"line":5922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5921,"column":0},"generated":{"line":5923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5922,"column":0},"generated":{"line":5924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5923,"column":0},"generated":{"line":5925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5924,"column":0},"generated":{"line":5926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5925,"column":0},"generated":{"line":5927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5926,"column":0},"generated":{"line":5928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5927,"column":0},"generated":{"line":5929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5928,"column":0},"generated":{"line":5930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5929,"column":0},"generated":{"line":5931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5930,"column":0},"generated":{"line":5932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5931,"column":0},"generated":{"line":5933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5932,"column":0},"generated":{"line":5934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5933,"column":0},"generated":{"line":5935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5934,"column":0},"generated":{"line":5936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5935,"column":0},"generated":{"line":5937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5936,"column":0},"generated":{"line":5938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5937,"column":0},"generated":{"line":5939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5938,"column":0},"generated":{"line":5940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5939,"column":0},"generated":{"line":5941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5940,"column":0},"generated":{"line":5942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5941,"column":0},"generated":{"line":5943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5942,"column":0},"generated":{"line":5944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5943,"column":0},"generated":{"line":5945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5944,"column":0},"generated":{"line":5946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5945,"column":0},"generated":{"line":5947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5946,"column":0},"generated":{"line":5948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5947,"column":0},"generated":{"line":5949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5948,"column":0},"generated":{"line":5950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5949,"column":0},"generated":{"line":5951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5950,"column":0},"generated":{"line":5952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5951,"column":0},"generated":{"line":5953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5952,"column":0},"generated":{"line":5954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5953,"column":0},"generated":{"line":5955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5954,"column":0},"generated":{"line":5956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5955,"column":0},"generated":{"line":5957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5956,"column":0},"generated":{"line":5958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5957,"column":0},"generated":{"line":5959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5958,"column":0},"generated":{"line":5960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5959,"column":0},"generated":{"line":5961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5960,"column":0},"generated":{"line":5962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5961,"column":0},"generated":{"line":5963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5962,"column":0},"generated":{"line":5964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5963,"column":0},"generated":{"line":5965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5964,"column":0},"generated":{"line":5966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5965,"column":0},"generated":{"line":5967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5966,"column":0},"generated":{"line":5968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5967,"column":0},"generated":{"line":5969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5968,"column":0},"generated":{"line":5970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5969,"column":0},"generated":{"line":5971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5970,"column":0},"generated":{"line":5972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5971,"column":0},"generated":{"line":5973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5972,"column":0},"generated":{"line":5974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5973,"column":0},"generated":{"line":5975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5974,"column":0},"generated":{"line":5976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5975,"column":0},"generated":{"line":5977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5976,"column":0},"generated":{"line":5978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5977,"column":0},"generated":{"line":5979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5978,"column":0},"generated":{"line":5980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5979,"column":0},"generated":{"line":5981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5980,"column":0},"generated":{"line":5982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5981,"column":0},"generated":{"line":5983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5982,"column":0},"generated":{"line":5984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5983,"column":0},"generated":{"line":5985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5984,"column":0},"generated":{"line":5986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5985,"column":0},"generated":{"line":5987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5986,"column":0},"generated":{"line":5988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5987,"column":0},"generated":{"line":5989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5988,"column":0},"generated":{"line":5990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5989,"column":0},"generated":{"line":5991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5990,"column":0},"generated":{"line":5992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5991,"column":0},"generated":{"line":5993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5992,"column":0},"generated":{"line":5994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5993,"column":0},"generated":{"line":5995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5994,"column":0},"generated":{"line":5996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5995,"column":0},"generated":{"line":5997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5996,"column":0},"generated":{"line":5998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5997,"column":0},"generated":{"line":5999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5998,"column":0},"generated":{"line":6000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":5999,"column":0},"generated":{"line":6001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6000,"column":0},"generated":{"line":6002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6001,"column":0},"generated":{"line":6003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6002,"column":0},"generated":{"line":6004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6003,"column":0},"generated":{"line":6005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6004,"column":0},"generated":{"line":6006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6005,"column":0},"generated":{"line":6007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6006,"column":0},"generated":{"line":6008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6007,"column":0},"generated":{"line":6009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6008,"column":0},"generated":{"line":6010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6009,"column":0},"generated":{"line":6011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6010,"column":0},"generated":{"line":6012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6011,"column":0},"generated":{"line":6013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6012,"column":0},"generated":{"line":6014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6013,"column":0},"generated":{"line":6015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6014,"column":0},"generated":{"line":6016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6015,"column":0},"generated":{"line":6017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6016,"column":0},"generated":{"line":6018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6017,"column":0},"generated":{"line":6019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6018,"column":0},"generated":{"line":6020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6019,"column":0},"generated":{"line":6021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6020,"column":0},"generated":{"line":6022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6021,"column":0},"generated":{"line":6023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6022,"column":0},"generated":{"line":6024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6023,"column":0},"generated":{"line":6025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6024,"column":0},"generated":{"line":6026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6025,"column":0},"generated":{"line":6027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6026,"column":0},"generated":{"line":6028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6027,"column":0},"generated":{"line":6029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6028,"column":0},"generated":{"line":6030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6029,"column":0},"generated":{"line":6031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6030,"column":0},"generated":{"line":6032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6031,"column":0},"generated":{"line":6033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6032,"column":0},"generated":{"line":6034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6033,"column":0},"generated":{"line":6035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6034,"column":0},"generated":{"line":6036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6035,"column":0},"generated":{"line":6037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6036,"column":0},"generated":{"line":6038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6037,"column":0},"generated":{"line":6039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6038,"column":0},"generated":{"line":6040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6039,"column":0},"generated":{"line":6041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6040,"column":0},"generated":{"line":6042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6041,"column":0},"generated":{"line":6043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6042,"column":0},"generated":{"line":6044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6043,"column":0},"generated":{"line":6045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6044,"column":0},"generated":{"line":6046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6045,"column":0},"generated":{"line":6047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6046,"column":0},"generated":{"line":6048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6047,"column":0},"generated":{"line":6049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6048,"column":0},"generated":{"line":6050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6049,"column":0},"generated":{"line":6051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6050,"column":0},"generated":{"line":6052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6051,"column":0},"generated":{"line":6053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6052,"column":0},"generated":{"line":6054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6053,"column":0},"generated":{"line":6055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6054,"column":0},"generated":{"line":6056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6055,"column":0},"generated":{"line":6057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6056,"column":0},"generated":{"line":6058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6057,"column":0},"generated":{"line":6059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6058,"column":0},"generated":{"line":6060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6059,"column":0},"generated":{"line":6061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6060,"column":0},"generated":{"line":6062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6061,"column":0},"generated":{"line":6063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6062,"column":0},"generated":{"line":6064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6063,"column":0},"generated":{"line":6065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6064,"column":0},"generated":{"line":6066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6065,"column":0},"generated":{"line":6067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6066,"column":0},"generated":{"line":6068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6067,"column":0},"generated":{"line":6069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6068,"column":0},"generated":{"line":6070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6069,"column":0},"generated":{"line":6071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6070,"column":0},"generated":{"line":6072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6071,"column":0},"generated":{"line":6073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6072,"column":0},"generated":{"line":6074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6073,"column":0},"generated":{"line":6075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6074,"column":0},"generated":{"line":6076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6075,"column":0},"generated":{"line":6077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6076,"column":0},"generated":{"line":6078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6077,"column":0},"generated":{"line":6079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6078,"column":0},"generated":{"line":6080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6079,"column":0},"generated":{"line":6081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6080,"column":0},"generated":{"line":6082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6081,"column":0},"generated":{"line":6083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6082,"column":0},"generated":{"line":6084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6083,"column":0},"generated":{"line":6085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6084,"column":0},"generated":{"line":6086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6085,"column":0},"generated":{"line":6087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6086,"column":0},"generated":{"line":6088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6087,"column":0},"generated":{"line":6089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6088,"column":0},"generated":{"line":6090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6089,"column":0},"generated":{"line":6091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6090,"column":0},"generated":{"line":6092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6091,"column":0},"generated":{"line":6093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6092,"column":0},"generated":{"line":6094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6093,"column":0},"generated":{"line":6095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6094,"column":0},"generated":{"line":6096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6095,"column":0},"generated":{"line":6097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6096,"column":0},"generated":{"line":6098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6097,"column":0},"generated":{"line":6099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6098,"column":0},"generated":{"line":6100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6099,"column":0},"generated":{"line":6101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6100,"column":0},"generated":{"line":6102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6101,"column":0},"generated":{"line":6103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6102,"column":0},"generated":{"line":6104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6103,"column":0},"generated":{"line":6105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6104,"column":0},"generated":{"line":6106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6105,"column":0},"generated":{"line":6107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6106,"column":0},"generated":{"line":6108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6107,"column":0},"generated":{"line":6109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6108,"column":0},"generated":{"line":6110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6109,"column":0},"generated":{"line":6111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6110,"column":0},"generated":{"line":6112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6111,"column":0},"generated":{"line":6113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6112,"column":0},"generated":{"line":6114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6113,"column":0},"generated":{"line":6115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6114,"column":0},"generated":{"line":6116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6115,"column":0},"generated":{"line":6117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6116,"column":0},"generated":{"line":6118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6117,"column":0},"generated":{"line":6119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6118,"column":0},"generated":{"line":6120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6119,"column":0},"generated":{"line":6121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6120,"column":0},"generated":{"line":6122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6121,"column":0},"generated":{"line":6123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6122,"column":0},"generated":{"line":6124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6123,"column":0},"generated":{"line":6125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6124,"column":0},"generated":{"line":6126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6125,"column":0},"generated":{"line":6127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6126,"column":0},"generated":{"line":6128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6127,"column":0},"generated":{"line":6129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6128,"column":0},"generated":{"line":6130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6129,"column":0},"generated":{"line":6131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6130,"column":0},"generated":{"line":6132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6131,"column":0},"generated":{"line":6133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6132,"column":0},"generated":{"line":6134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6133,"column":0},"generated":{"line":6135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6134,"column":0},"generated":{"line":6136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6135,"column":0},"generated":{"line":6137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6136,"column":0},"generated":{"line":6138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6137,"column":0},"generated":{"line":6139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6138,"column":0},"generated":{"line":6140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6139,"column":0},"generated":{"line":6141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6140,"column":0},"generated":{"line":6142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6141,"column":0},"generated":{"line":6143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6142,"column":0},"generated":{"line":6144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6143,"column":0},"generated":{"line":6145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6144,"column":0},"generated":{"line":6146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6145,"column":0},"generated":{"line":6147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6146,"column":0},"generated":{"line":6148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6147,"column":0},"generated":{"line":6149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6148,"column":0},"generated":{"line":6150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6149,"column":0},"generated":{"line":6151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6150,"column":0},"generated":{"line":6152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6151,"column":0},"generated":{"line":6153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6152,"column":0},"generated":{"line":6154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6153,"column":0},"generated":{"line":6155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6154,"column":0},"generated":{"line":6156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6155,"column":0},"generated":{"line":6157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6156,"column":0},"generated":{"line":6158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6157,"column":0},"generated":{"line":6159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6158,"column":0},"generated":{"line":6160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6159,"column":0},"generated":{"line":6161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6160,"column":0},"generated":{"line":6162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6161,"column":0},"generated":{"line":6163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6162,"column":0},"generated":{"line":6164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6163,"column":0},"generated":{"line":6165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6164,"column":0},"generated":{"line":6166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6165,"column":0},"generated":{"line":6167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6166,"column":0},"generated":{"line":6168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6167,"column":0},"generated":{"line":6169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6168,"column":0},"generated":{"line":6170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6169,"column":0},"generated":{"line":6171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6170,"column":0},"generated":{"line":6172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6171,"column":0},"generated":{"line":6173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6172,"column":0},"generated":{"line":6174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6173,"column":0},"generated":{"line":6175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6174,"column":0},"generated":{"line":6176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6175,"column":0},"generated":{"line":6177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6176,"column":0},"generated":{"line":6178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6177,"column":0},"generated":{"line":6179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6178,"column":0},"generated":{"line":6180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6179,"column":0},"generated":{"line":6181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6180,"column":0},"generated":{"line":6182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6181,"column":0},"generated":{"line":6183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6182,"column":0},"generated":{"line":6184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6183,"column":0},"generated":{"line":6185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6184,"column":0},"generated":{"line":6186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6185,"column":0},"generated":{"line":6187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6186,"column":0},"generated":{"line":6188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6187,"column":0},"generated":{"line":6189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6188,"column":0},"generated":{"line":6190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6189,"column":0},"generated":{"line":6191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6190,"column":0},"generated":{"line":6192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6191,"column":0},"generated":{"line":6193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6192,"column":0},"generated":{"line":6194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6193,"column":0},"generated":{"line":6195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6194,"column":0},"generated":{"line":6196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6195,"column":0},"generated":{"line":6197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6196,"column":0},"generated":{"line":6198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6197,"column":0},"generated":{"line":6199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6198,"column":0},"generated":{"line":6200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6199,"column":0},"generated":{"line":6201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6200,"column":0},"generated":{"line":6202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6201,"column":0},"generated":{"line":6203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6202,"column":0},"generated":{"line":6204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6203,"column":0},"generated":{"line":6205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6204,"column":0},"generated":{"line":6206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6205,"column":0},"generated":{"line":6207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6206,"column":0},"generated":{"line":6208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6207,"column":0},"generated":{"line":6209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6208,"column":0},"generated":{"line":6210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6209,"column":0},"generated":{"line":6211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6210,"column":0},"generated":{"line":6212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6211,"column":0},"generated":{"line":6213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6212,"column":0},"generated":{"line":6214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6213,"column":0},"generated":{"line":6215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6214,"column":0},"generated":{"line":6216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6215,"column":0},"generated":{"line":6217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6216,"column":0},"generated":{"line":6218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6217,"column":0},"generated":{"line":6219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6218,"column":0},"generated":{"line":6220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6219,"column":0},"generated":{"line":6221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6220,"column":0},"generated":{"line":6222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6221,"column":0},"generated":{"line":6223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6222,"column":0},"generated":{"line":6224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6223,"column":0},"generated":{"line":6225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6224,"column":0},"generated":{"line":6226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6225,"column":0},"generated":{"line":6227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6226,"column":0},"generated":{"line":6228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6227,"column":0},"generated":{"line":6229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6228,"column":0},"generated":{"line":6230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6229,"column":0},"generated":{"line":6231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6230,"column":0},"generated":{"line":6232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6231,"column":0},"generated":{"line":6233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6232,"column":0},"generated":{"line":6234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6233,"column":0},"generated":{"line":6235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6234,"column":0},"generated":{"line":6236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6235,"column":0},"generated":{"line":6237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6236,"column":0},"generated":{"line":6238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6237,"column":0},"generated":{"line":6239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6238,"column":0},"generated":{"line":6240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6239,"column":0},"generated":{"line":6241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6240,"column":0},"generated":{"line":6242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6241,"column":0},"generated":{"line":6243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6242,"column":0},"generated":{"line":6244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6243,"column":0},"generated":{"line":6245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6244,"column":0},"generated":{"line":6246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6245,"column":0},"generated":{"line":6247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6246,"column":0},"generated":{"line":6248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6247,"column":0},"generated":{"line":6249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6248,"column":0},"generated":{"line":6250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6249,"column":0},"generated":{"line":6251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6250,"column":0},"generated":{"line":6252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6251,"column":0},"generated":{"line":6253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6252,"column":0},"generated":{"line":6254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6253,"column":0},"generated":{"line":6255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6254,"column":0},"generated":{"line":6256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6255,"column":0},"generated":{"line":6257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6256,"column":0},"generated":{"line":6258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6257,"column":0},"generated":{"line":6259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6258,"column":0},"generated":{"line":6260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6259,"column":0},"generated":{"line":6261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6260,"column":0},"generated":{"line":6262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6261,"column":0},"generated":{"line":6263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6262,"column":0},"generated":{"line":6264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6263,"column":0},"generated":{"line":6265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6264,"column":0},"generated":{"line":6266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6265,"column":0},"generated":{"line":6267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6266,"column":0},"generated":{"line":6268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6267,"column":0},"generated":{"line":6269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6268,"column":0},"generated":{"line":6270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6269,"column":0},"generated":{"line":6271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6270,"column":0},"generated":{"line":6272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6271,"column":0},"generated":{"line":6273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6272,"column":0},"generated":{"line":6274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6273,"column":0},"generated":{"line":6275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6274,"column":0},"generated":{"line":6276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6275,"column":0},"generated":{"line":6277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6276,"column":0},"generated":{"line":6278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6277,"column":0},"generated":{"line":6279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6278,"column":0},"generated":{"line":6280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6279,"column":0},"generated":{"line":6281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6280,"column":0},"generated":{"line":6282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6281,"column":0},"generated":{"line":6283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6282,"column":0},"generated":{"line":6284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6283,"column":0},"generated":{"line":6285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6284,"column":0},"generated":{"line":6286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6285,"column":0},"generated":{"line":6287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6286,"column":0},"generated":{"line":6288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6287,"column":0},"generated":{"line":6289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6288,"column":0},"generated":{"line":6290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6289,"column":0},"generated":{"line":6291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6290,"column":0},"generated":{"line":6292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6291,"column":0},"generated":{"line":6293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6292,"column":0},"generated":{"line":6294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6293,"column":0},"generated":{"line":6295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6294,"column":0},"generated":{"line":6296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6295,"column":0},"generated":{"line":6297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6296,"column":0},"generated":{"line":6298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6297,"column":0},"generated":{"line":6299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6298,"column":0},"generated":{"line":6300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6299,"column":0},"generated":{"line":6301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6300,"column":0},"generated":{"line":6302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6301,"column":0},"generated":{"line":6303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6302,"column":0},"generated":{"line":6304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6303,"column":0},"generated":{"line":6305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6304,"column":0},"generated":{"line":6306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6305,"column":0},"generated":{"line":6307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6306,"column":0},"generated":{"line":6308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6307,"column":0},"generated":{"line":6309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6308,"column":0},"generated":{"line":6310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6309,"column":0},"generated":{"line":6311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6310,"column":0},"generated":{"line":6312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6311,"column":0},"generated":{"line":6313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6312,"column":0},"generated":{"line":6314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6313,"column":0},"generated":{"line":6315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6314,"column":0},"generated":{"line":6316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6315,"column":0},"generated":{"line":6317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6316,"column":0},"generated":{"line":6318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6317,"column":0},"generated":{"line":6319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6318,"column":0},"generated":{"line":6320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6319,"column":0},"generated":{"line":6321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6320,"column":0},"generated":{"line":6322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6321,"column":0},"generated":{"line":6323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6322,"column":0},"generated":{"line":6324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6323,"column":0},"generated":{"line":6325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6324,"column":0},"generated":{"line":6326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6325,"column":0},"generated":{"line":6327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6326,"column":0},"generated":{"line":6328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6327,"column":0},"generated":{"line":6329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6328,"column":0},"generated":{"line":6330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6329,"column":0},"generated":{"line":6331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6330,"column":0},"generated":{"line":6332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6331,"column":0},"generated":{"line":6333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6332,"column":0},"generated":{"line":6334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6333,"column":0},"generated":{"line":6335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6334,"column":0},"generated":{"line":6336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6335,"column":0},"generated":{"line":6337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6336,"column":0},"generated":{"line":6338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6337,"column":0},"generated":{"line":6339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6338,"column":0},"generated":{"line":6340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6339,"column":0},"generated":{"line":6341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6340,"column":0},"generated":{"line":6342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6341,"column":0},"generated":{"line":6343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6342,"column":0},"generated":{"line":6344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6343,"column":0},"generated":{"line":6345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6344,"column":0},"generated":{"line":6346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6345,"column":0},"generated":{"line":6347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6346,"column":0},"generated":{"line":6348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6347,"column":0},"generated":{"line":6349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6348,"column":0},"generated":{"line":6350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6349,"column":0},"generated":{"line":6351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6350,"column":0},"generated":{"line":6352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6351,"column":0},"generated":{"line":6353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6352,"column":0},"generated":{"line":6354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6353,"column":0},"generated":{"line":6355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6354,"column":0},"generated":{"line":6356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6355,"column":0},"generated":{"line":6357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6356,"column":0},"generated":{"line":6358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6357,"column":0},"generated":{"line":6359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6358,"column":0},"generated":{"line":6360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6359,"column":0},"generated":{"line":6361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6360,"column":0},"generated":{"line":6362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6361,"column":0},"generated":{"line":6363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6362,"column":0},"generated":{"line":6364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6363,"column":0},"generated":{"line":6365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6364,"column":0},"generated":{"line":6366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6365,"column":0},"generated":{"line":6367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6366,"column":0},"generated":{"line":6368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6367,"column":0},"generated":{"line":6369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6368,"column":0},"generated":{"line":6370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6369,"column":0},"generated":{"line":6371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6370,"column":0},"generated":{"line":6372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6371,"column":0},"generated":{"line":6373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6372,"column":0},"generated":{"line":6374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6373,"column":0},"generated":{"line":6375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6374,"column":0},"generated":{"line":6376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6375,"column":0},"generated":{"line":6377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6376,"column":0},"generated":{"line":6378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6377,"column":0},"generated":{"line":6379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6378,"column":0},"generated":{"line":6380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6379,"column":0},"generated":{"line":6381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6380,"column":0},"generated":{"line":6382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6381,"column":0},"generated":{"line":6383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6382,"column":0},"generated":{"line":6384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6383,"column":0},"generated":{"line":6385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6384,"column":0},"generated":{"line":6386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6385,"column":0},"generated":{"line":6387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6386,"column":0},"generated":{"line":6388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6387,"column":0},"generated":{"line":6389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6388,"column":0},"generated":{"line":6390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6389,"column":0},"generated":{"line":6391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6390,"column":0},"generated":{"line":6392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6391,"column":0},"generated":{"line":6393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6392,"column":0},"generated":{"line":6394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6393,"column":0},"generated":{"line":6395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6394,"column":0},"generated":{"line":6396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6395,"column":0},"generated":{"line":6397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6396,"column":0},"generated":{"line":6398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6397,"column":0},"generated":{"line":6399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6398,"column":0},"generated":{"line":6400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6399,"column":0},"generated":{"line":6401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6400,"column":0},"generated":{"line":6402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6401,"column":0},"generated":{"line":6403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6402,"column":0},"generated":{"line":6404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6403,"column":0},"generated":{"line":6405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6404,"column":0},"generated":{"line":6406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6405,"column":0},"generated":{"line":6407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6406,"column":0},"generated":{"line":6408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6407,"column":0},"generated":{"line":6409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6408,"column":0},"generated":{"line":6410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6409,"column":0},"generated":{"line":6411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6410,"column":0},"generated":{"line":6412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6411,"column":0},"generated":{"line":6413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6412,"column":0},"generated":{"line":6414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6413,"column":0},"generated":{"line":6415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6414,"column":0},"generated":{"line":6416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6415,"column":0},"generated":{"line":6417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6416,"column":0},"generated":{"line":6418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6417,"column":0},"generated":{"line":6419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6418,"column":0},"generated":{"line":6420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6419,"column":0},"generated":{"line":6421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6420,"column":0},"generated":{"line":6422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6421,"column":0},"generated":{"line":6423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6422,"column":0},"generated":{"line":6424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6423,"column":0},"generated":{"line":6425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6424,"column":0},"generated":{"line":6426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6425,"column":0},"generated":{"line":6427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6426,"column":0},"generated":{"line":6428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6427,"column":0},"generated":{"line":6429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6428,"column":0},"generated":{"line":6430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6429,"column":0},"generated":{"line":6431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6430,"column":0},"generated":{"line":6432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6431,"column":0},"generated":{"line":6433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6432,"column":0},"generated":{"line":6434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6433,"column":0},"generated":{"line":6435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6434,"column":0},"generated":{"line":6436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6435,"column":0},"generated":{"line":6437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6436,"column":0},"generated":{"line":6438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6437,"column":0},"generated":{"line":6439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6438,"column":0},"generated":{"line":6440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6439,"column":0},"generated":{"line":6441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6440,"column":0},"generated":{"line":6442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6441,"column":0},"generated":{"line":6443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6442,"column":0},"generated":{"line":6444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6443,"column":0},"generated":{"line":6445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6444,"column":0},"generated":{"line":6446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6445,"column":0},"generated":{"line":6447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6446,"column":0},"generated":{"line":6448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6447,"column":0},"generated":{"line":6449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6448,"column":0},"generated":{"line":6450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6449,"column":0},"generated":{"line":6451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6450,"column":0},"generated":{"line":6452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6451,"column":0},"generated":{"line":6453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6452,"column":0},"generated":{"line":6454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6453,"column":0},"generated":{"line":6455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6454,"column":0},"generated":{"line":6456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6455,"column":0},"generated":{"line":6457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6456,"column":0},"generated":{"line":6458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6457,"column":0},"generated":{"line":6459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6458,"column":0},"generated":{"line":6460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6459,"column":0},"generated":{"line":6461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6460,"column":0},"generated":{"line":6462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6461,"column":0},"generated":{"line":6463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6462,"column":0},"generated":{"line":6464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6463,"column":0},"generated":{"line":6465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6464,"column":0},"generated":{"line":6466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6465,"column":0},"generated":{"line":6467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6466,"column":0},"generated":{"line":6468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6467,"column":0},"generated":{"line":6469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6468,"column":0},"generated":{"line":6470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6469,"column":0},"generated":{"line":6471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6470,"column":0},"generated":{"line":6472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6471,"column":0},"generated":{"line":6473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6472,"column":0},"generated":{"line":6474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6473,"column":0},"generated":{"line":6475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6474,"column":0},"generated":{"line":6476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6475,"column":0},"generated":{"line":6477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6476,"column":0},"generated":{"line":6478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6477,"column":0},"generated":{"line":6479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6478,"column":0},"generated":{"line":6480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6479,"column":0},"generated":{"line":6481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6480,"column":0},"generated":{"line":6482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6481,"column":0},"generated":{"line":6483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6482,"column":0},"generated":{"line":6484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6483,"column":0},"generated":{"line":6485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6484,"column":0},"generated":{"line":6486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6485,"column":0},"generated":{"line":6487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6486,"column":0},"generated":{"line":6488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6487,"column":0},"generated":{"line":6489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6488,"column":0},"generated":{"line":6490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6489,"column":0},"generated":{"line":6491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6490,"column":0},"generated":{"line":6492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6491,"column":0},"generated":{"line":6493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6492,"column":0},"generated":{"line":6494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6493,"column":0},"generated":{"line":6495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6494,"column":0},"generated":{"line":6496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6495,"column":0},"generated":{"line":6497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6496,"column":0},"generated":{"line":6498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6497,"column":0},"generated":{"line":6499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6498,"column":0},"generated":{"line":6500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6499,"column":0},"generated":{"line":6501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6500,"column":0},"generated":{"line":6502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6501,"column":0},"generated":{"line":6503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6502,"column":0},"generated":{"line":6504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6503,"column":0},"generated":{"line":6505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6504,"column":0},"generated":{"line":6506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6505,"column":0},"generated":{"line":6507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6506,"column":0},"generated":{"line":6508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6507,"column":0},"generated":{"line":6509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6508,"column":0},"generated":{"line":6510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6509,"column":0},"generated":{"line":6511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6510,"column":0},"generated":{"line":6512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6511,"column":0},"generated":{"line":6513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6512,"column":0},"generated":{"line":6514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6513,"column":0},"generated":{"line":6515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6514,"column":0},"generated":{"line":6516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6515,"column":0},"generated":{"line":6517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6516,"column":0},"generated":{"line":6518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6517,"column":0},"generated":{"line":6519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6518,"column":0},"generated":{"line":6520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6519,"column":0},"generated":{"line":6521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6520,"column":0},"generated":{"line":6522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6521,"column":0},"generated":{"line":6523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6522,"column":0},"generated":{"line":6524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6523,"column":0},"generated":{"line":6525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6524,"column":0},"generated":{"line":6526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6525,"column":0},"generated":{"line":6527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6526,"column":0},"generated":{"line":6528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6527,"column":0},"generated":{"line":6529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6528,"column":0},"generated":{"line":6530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6529,"column":0},"generated":{"line":6531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6530,"column":0},"generated":{"line":6532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6531,"column":0},"generated":{"line":6533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6532,"column":0},"generated":{"line":6534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6533,"column":0},"generated":{"line":6535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6534,"column":0},"generated":{"line":6536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6535,"column":0},"generated":{"line":6537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6536,"column":0},"generated":{"line":6538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6537,"column":0},"generated":{"line":6539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6538,"column":0},"generated":{"line":6540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6539,"column":0},"generated":{"line":6541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6540,"column":0},"generated":{"line":6542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6541,"column":0},"generated":{"line":6543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6542,"column":0},"generated":{"line":6544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6543,"column":0},"generated":{"line":6545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6544,"column":0},"generated":{"line":6546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6545,"column":0},"generated":{"line":6547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6546,"column":0},"generated":{"line":6548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6547,"column":0},"generated":{"line":6549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6548,"column":0},"generated":{"line":6550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6549,"column":0},"generated":{"line":6551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6550,"column":0},"generated":{"line":6552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6551,"column":0},"generated":{"line":6553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6552,"column":0},"generated":{"line":6554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6553,"column":0},"generated":{"line":6555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6554,"column":0},"generated":{"line":6556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6555,"column":0},"generated":{"line":6557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6556,"column":0},"generated":{"line":6558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6557,"column":0},"generated":{"line":6559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6558,"column":0},"generated":{"line":6560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6559,"column":0},"generated":{"line":6561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6560,"column":0},"generated":{"line":6562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6561,"column":0},"generated":{"line":6563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6562,"column":0},"generated":{"line":6564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6563,"column":0},"generated":{"line":6565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6564,"column":0},"generated":{"line":6566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6565,"column":0},"generated":{"line":6567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6566,"column":0},"generated":{"line":6568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6567,"column":0},"generated":{"line":6569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6568,"column":0},"generated":{"line":6570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6569,"column":0},"generated":{"line":6571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6570,"column":0},"generated":{"line":6572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6571,"column":0},"generated":{"line":6573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6572,"column":0},"generated":{"line":6574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6573,"column":0},"generated":{"line":6575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6574,"column":0},"generated":{"line":6576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6575,"column":0},"generated":{"line":6577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6576,"column":0},"generated":{"line":6578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6577,"column":0},"generated":{"line":6579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6578,"column":0},"generated":{"line":6580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6579,"column":0},"generated":{"line":6581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6580,"column":0},"generated":{"line":6582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6581,"column":0},"generated":{"line":6583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6582,"column":0},"generated":{"line":6584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6583,"column":0},"generated":{"line":6585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6584,"column":0},"generated":{"line":6586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6585,"column":0},"generated":{"line":6587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6586,"column":0},"generated":{"line":6588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6587,"column":0},"generated":{"line":6589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6588,"column":0},"generated":{"line":6590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6589,"column":0},"generated":{"line":6591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6590,"column":0},"generated":{"line":6592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6591,"column":0},"generated":{"line":6593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6592,"column":0},"generated":{"line":6594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6593,"column":0},"generated":{"line":6595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6594,"column":0},"generated":{"line":6596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6595,"column":0},"generated":{"line":6597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6596,"column":0},"generated":{"line":6598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6597,"column":0},"generated":{"line":6599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6598,"column":0},"generated":{"line":6600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6599,"column":0},"generated":{"line":6601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6600,"column":0},"generated":{"line":6602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6601,"column":0},"generated":{"line":6603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6602,"column":0},"generated":{"line":6604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6603,"column":0},"generated":{"line":6605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6604,"column":0},"generated":{"line":6606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6605,"column":0},"generated":{"line":6607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6606,"column":0},"generated":{"line":6608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6607,"column":0},"generated":{"line":6609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6608,"column":0},"generated":{"line":6610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6609,"column":0},"generated":{"line":6611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6610,"column":0},"generated":{"line":6612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6611,"column":0},"generated":{"line":6613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6612,"column":0},"generated":{"line":6614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6613,"column":0},"generated":{"line":6615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6614,"column":0},"generated":{"line":6616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6615,"column":0},"generated":{"line":6617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6616,"column":0},"generated":{"line":6618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6617,"column":0},"generated":{"line":6619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6618,"column":0},"generated":{"line":6620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6619,"column":0},"generated":{"line":6621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6620,"column":0},"generated":{"line":6622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6621,"column":0},"generated":{"line":6623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6622,"column":0},"generated":{"line":6624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6623,"column":0},"generated":{"line":6625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6624,"column":0},"generated":{"line":6626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6625,"column":0},"generated":{"line":6627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6626,"column":0},"generated":{"line":6628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6627,"column":0},"generated":{"line":6629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6628,"column":0},"generated":{"line":6630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6629,"column":0},"generated":{"line":6631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6630,"column":0},"generated":{"line":6632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6631,"column":0},"generated":{"line":6633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6632,"column":0},"generated":{"line":6634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6633,"column":0},"generated":{"line":6635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6634,"column":0},"generated":{"line":6636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6635,"column":0},"generated":{"line":6637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6636,"column":0},"generated":{"line":6638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6637,"column":0},"generated":{"line":6639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6638,"column":0},"generated":{"line":6640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6639,"column":0},"generated":{"line":6641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6640,"column":0},"generated":{"line":6642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6641,"column":0},"generated":{"line":6643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6642,"column":0},"generated":{"line":6644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6643,"column":0},"generated":{"line":6645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6644,"column":0},"generated":{"line":6646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6645,"column":0},"generated":{"line":6647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6646,"column":0},"generated":{"line":6648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6647,"column":0},"generated":{"line":6649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6648,"column":0},"generated":{"line":6650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6649,"column":0},"generated":{"line":6651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6650,"column":0},"generated":{"line":6652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6651,"column":0},"generated":{"line":6653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6652,"column":0},"generated":{"line":6654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6653,"column":0},"generated":{"line":6655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6654,"column":0},"generated":{"line":6656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6655,"column":0},"generated":{"line":6657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6656,"column":0},"generated":{"line":6658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6657,"column":0},"generated":{"line":6659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6658,"column":0},"generated":{"line":6660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6659,"column":0},"generated":{"line":6661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6660,"column":0},"generated":{"line":6662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6661,"column":0},"generated":{"line":6663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6662,"column":0},"generated":{"line":6664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6663,"column":0},"generated":{"line":6665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6664,"column":0},"generated":{"line":6666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6665,"column":0},"generated":{"line":6667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6666,"column":0},"generated":{"line":6668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6667,"column":0},"generated":{"line":6669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6668,"column":0},"generated":{"line":6670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6669,"column":0},"generated":{"line":6671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6670,"column":0},"generated":{"line":6672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6671,"column":0},"generated":{"line":6673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6672,"column":0},"generated":{"line":6674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6673,"column":0},"generated":{"line":6675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6674,"column":0},"generated":{"line":6676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6675,"column":0},"generated":{"line":6677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6676,"column":0},"generated":{"line":6678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6677,"column":0},"generated":{"line":6679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6678,"column":0},"generated":{"line":6680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6679,"column":0},"generated":{"line":6681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6680,"column":0},"generated":{"line":6682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6681,"column":0},"generated":{"line":6683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6682,"column":0},"generated":{"line":6684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6683,"column":0},"generated":{"line":6685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6684,"column":0},"generated":{"line":6686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6685,"column":0},"generated":{"line":6687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6686,"column":0},"generated":{"line":6688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6687,"column":0},"generated":{"line":6689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6688,"column":0},"generated":{"line":6690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6689,"column":0},"generated":{"line":6691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6690,"column":0},"generated":{"line":6692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6691,"column":0},"generated":{"line":6693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6692,"column":0},"generated":{"line":6694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6693,"column":0},"generated":{"line":6695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6694,"column":0},"generated":{"line":6696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6695,"column":0},"generated":{"line":6697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6696,"column":0},"generated":{"line":6698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6697,"column":0},"generated":{"line":6699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6698,"column":0},"generated":{"line":6700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6699,"column":0},"generated":{"line":6701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6700,"column":0},"generated":{"line":6702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6701,"column":0},"generated":{"line":6703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6702,"column":0},"generated":{"line":6704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6703,"column":0},"generated":{"line":6705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6704,"column":0},"generated":{"line":6706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6705,"column":0},"generated":{"line":6707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6706,"column":0},"generated":{"line":6708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6707,"column":0},"generated":{"line":6709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6708,"column":0},"generated":{"line":6710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6709,"column":0},"generated":{"line":6711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6710,"column":0},"generated":{"line":6712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6711,"column":0},"generated":{"line":6713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6712,"column":0},"generated":{"line":6714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6713,"column":0},"generated":{"line":6715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6714,"column":0},"generated":{"line":6716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6715,"column":0},"generated":{"line":6717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6716,"column":0},"generated":{"line":6718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6717,"column":0},"generated":{"line":6719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6718,"column":0},"generated":{"line":6720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6719,"column":0},"generated":{"line":6721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6720,"column":0},"generated":{"line":6722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6721,"column":0},"generated":{"line":6723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6722,"column":0},"generated":{"line":6724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6723,"column":0},"generated":{"line":6725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6724,"column":0},"generated":{"line":6726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6725,"column":0},"generated":{"line":6727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6726,"column":0},"generated":{"line":6728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6727,"column":0},"generated":{"line":6729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6728,"column":0},"generated":{"line":6730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6729,"column":0},"generated":{"line":6731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6730,"column":0},"generated":{"line":6732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6731,"column":0},"generated":{"line":6733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6732,"column":0},"generated":{"line":6734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6733,"column":0},"generated":{"line":6735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6734,"column":0},"generated":{"line":6736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6735,"column":0},"generated":{"line":6737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6736,"column":0},"generated":{"line":6738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6737,"column":0},"generated":{"line":6739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6738,"column":0},"generated":{"line":6740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6739,"column":0},"generated":{"line":6741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6740,"column":0},"generated":{"line":6742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6741,"column":0},"generated":{"line":6743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6742,"column":0},"generated":{"line":6744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6743,"column":0},"generated":{"line":6745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6744,"column":0},"generated":{"line":6746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6745,"column":0},"generated":{"line":6747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6746,"column":0},"generated":{"line":6748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6747,"column":0},"generated":{"line":6749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6748,"column":0},"generated":{"line":6750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6749,"column":0},"generated":{"line":6751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6750,"column":0},"generated":{"line":6752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6751,"column":0},"generated":{"line":6753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6752,"column":0},"generated":{"line":6754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6753,"column":0},"generated":{"line":6755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6754,"column":0},"generated":{"line":6756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6755,"column":0},"generated":{"line":6757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6756,"column":0},"generated":{"line":6758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6757,"column":0},"generated":{"line":6759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6758,"column":0},"generated":{"line":6760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6759,"column":0},"generated":{"line":6761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6760,"column":0},"generated":{"line":6762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6761,"column":0},"generated":{"line":6763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6762,"column":0},"generated":{"line":6764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6763,"column":0},"generated":{"line":6765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6764,"column":0},"generated":{"line":6766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6765,"column":0},"generated":{"line":6767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6766,"column":0},"generated":{"line":6768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6767,"column":0},"generated":{"line":6769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6768,"column":0},"generated":{"line":6770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6769,"column":0},"generated":{"line":6771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6770,"column":0},"generated":{"line":6772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6771,"column":0},"generated":{"line":6773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6772,"column":0},"generated":{"line":6774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6773,"column":0},"generated":{"line":6775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6774,"column":0},"generated":{"line":6776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6775,"column":0},"generated":{"line":6777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6776,"column":0},"generated":{"line":6778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6777,"column":0},"generated":{"line":6779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6778,"column":0},"generated":{"line":6780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6779,"column":0},"generated":{"line":6781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6780,"column":0},"generated":{"line":6782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6781,"column":0},"generated":{"line":6783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6782,"column":0},"generated":{"line":6784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6783,"column":0},"generated":{"line":6785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6784,"column":0},"generated":{"line":6786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6785,"column":0},"generated":{"line":6787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6786,"column":0},"generated":{"line":6788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6787,"column":0},"generated":{"line":6789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6788,"column":0},"generated":{"line":6790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6789,"column":0},"generated":{"line":6791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6790,"column":0},"generated":{"line":6792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6791,"column":0},"generated":{"line":6793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6792,"column":0},"generated":{"line":6794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6793,"column":0},"generated":{"line":6795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6794,"column":0},"generated":{"line":6796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6795,"column":0},"generated":{"line":6797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6796,"column":0},"generated":{"line":6798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6797,"column":0},"generated":{"line":6799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6798,"column":0},"generated":{"line":6800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6799,"column":0},"generated":{"line":6801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6800,"column":0},"generated":{"line":6802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6801,"column":0},"generated":{"line":6803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6802,"column":0},"generated":{"line":6804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6803,"column":0},"generated":{"line":6805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6804,"column":0},"generated":{"line":6806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6805,"column":0},"generated":{"line":6807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6806,"column":0},"generated":{"line":6808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6807,"column":0},"generated":{"line":6809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6808,"column":0},"generated":{"line":6810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6809,"column":0},"generated":{"line":6811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6810,"column":0},"generated":{"line":6812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6811,"column":0},"generated":{"line":6813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6812,"column":0},"generated":{"line":6814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6813,"column":0},"generated":{"line":6815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6814,"column":0},"generated":{"line":6816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6815,"column":0},"generated":{"line":6817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6816,"column":0},"generated":{"line":6818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6817,"column":0},"generated":{"line":6819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6818,"column":0},"generated":{"line":6820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6819,"column":0},"generated":{"line":6821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6820,"column":0},"generated":{"line":6822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6821,"column":0},"generated":{"line":6823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6822,"column":0},"generated":{"line":6824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6823,"column":0},"generated":{"line":6825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6824,"column":0},"generated":{"line":6826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6825,"column":0},"generated":{"line":6827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6826,"column":0},"generated":{"line":6828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6827,"column":0},"generated":{"line":6829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6828,"column":0},"generated":{"line":6830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6829,"column":0},"generated":{"line":6831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6830,"column":0},"generated":{"line":6832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6831,"column":0},"generated":{"line":6833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6832,"column":0},"generated":{"line":6834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6833,"column":0},"generated":{"line":6835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6834,"column":0},"generated":{"line":6836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6835,"column":0},"generated":{"line":6837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6836,"column":0},"generated":{"line":6838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6837,"column":0},"generated":{"line":6839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6838,"column":0},"generated":{"line":6840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6839,"column":0},"generated":{"line":6841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6840,"column":0},"generated":{"line":6842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6841,"column":0},"generated":{"line":6843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6842,"column":0},"generated":{"line":6844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6843,"column":0},"generated":{"line":6845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6844,"column":0},"generated":{"line":6846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6845,"column":0},"generated":{"line":6847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6846,"column":0},"generated":{"line":6848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6847,"column":0},"generated":{"line":6849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6848,"column":0},"generated":{"line":6850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6849,"column":0},"generated":{"line":6851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6850,"column":0},"generated":{"line":6852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6851,"column":0},"generated":{"line":6853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6852,"column":0},"generated":{"line":6854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6853,"column":0},"generated":{"line":6855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6854,"column":0},"generated":{"line":6856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6855,"column":0},"generated":{"line":6857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6856,"column":0},"generated":{"line":6858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6857,"column":0},"generated":{"line":6859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6858,"column":0},"generated":{"line":6860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6859,"column":0},"generated":{"line":6861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6860,"column":0},"generated":{"line":6862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6861,"column":0},"generated":{"line":6863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6862,"column":0},"generated":{"line":6864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6863,"column":0},"generated":{"line":6865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6864,"column":0},"generated":{"line":6866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6865,"column":0},"generated":{"line":6867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6866,"column":0},"generated":{"line":6868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6867,"column":0},"generated":{"line":6869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6868,"column":0},"generated":{"line":6870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6869,"column":0},"generated":{"line":6871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6870,"column":0},"generated":{"line":6872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6871,"column":0},"generated":{"line":6873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6872,"column":0},"generated":{"line":6874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6873,"column":0},"generated":{"line":6875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6874,"column":0},"generated":{"line":6876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6875,"column":0},"generated":{"line":6877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6876,"column":0},"generated":{"line":6878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6877,"column":0},"generated":{"line":6879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6878,"column":0},"generated":{"line":6880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6879,"column":0},"generated":{"line":6881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6880,"column":0},"generated":{"line":6882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6881,"column":0},"generated":{"line":6883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6882,"column":0},"generated":{"line":6884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6883,"column":0},"generated":{"line":6885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6884,"column":0},"generated":{"line":6886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6885,"column":0},"generated":{"line":6887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6886,"column":0},"generated":{"line":6888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6887,"column":0},"generated":{"line":6889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6888,"column":0},"generated":{"line":6890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6889,"column":0},"generated":{"line":6891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6890,"column":0},"generated":{"line":6892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6891,"column":0},"generated":{"line":6893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6892,"column":0},"generated":{"line":6894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6893,"column":0},"generated":{"line":6895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6894,"column":0},"generated":{"line":6896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6895,"column":0},"generated":{"line":6897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6896,"column":0},"generated":{"line":6898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6897,"column":0},"generated":{"line":6899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6898,"column":0},"generated":{"line":6900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6899,"column":0},"generated":{"line":6901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6900,"column":0},"generated":{"line":6902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6901,"column":0},"generated":{"line":6903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6902,"column":0},"generated":{"line":6904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6903,"column":0},"generated":{"line":6905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6904,"column":0},"generated":{"line":6906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6905,"column":0},"generated":{"line":6907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6906,"column":0},"generated":{"line":6908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6907,"column":0},"generated":{"line":6909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6908,"column":0},"generated":{"line":6910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6909,"column":0},"generated":{"line":6911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6910,"column":0},"generated":{"line":6912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6911,"column":0},"generated":{"line":6913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6912,"column":0},"generated":{"line":6914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6913,"column":0},"generated":{"line":6915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6914,"column":0},"generated":{"line":6916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6915,"column":0},"generated":{"line":6917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6916,"column":0},"generated":{"line":6918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6917,"column":0},"generated":{"line":6919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6918,"column":0},"generated":{"line":6920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6919,"column":0},"generated":{"line":6921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6920,"column":0},"generated":{"line":6922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6921,"column":0},"generated":{"line":6923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6922,"column":0},"generated":{"line":6924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6923,"column":0},"generated":{"line":6925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6924,"column":0},"generated":{"line":6926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6925,"column":0},"generated":{"line":6927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6926,"column":0},"generated":{"line":6928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6927,"column":0},"generated":{"line":6929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6928,"column":0},"generated":{"line":6930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6929,"column":0},"generated":{"line":6931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6930,"column":0},"generated":{"line":6932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6931,"column":0},"generated":{"line":6933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6932,"column":0},"generated":{"line":6934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6933,"column":0},"generated":{"line":6935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6934,"column":0},"generated":{"line":6936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6935,"column":0},"generated":{"line":6937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6936,"column":0},"generated":{"line":6938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6937,"column":0},"generated":{"line":6939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6938,"column":0},"generated":{"line":6940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6939,"column":0},"generated":{"line":6941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6940,"column":0},"generated":{"line":6942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6941,"column":0},"generated":{"line":6943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6942,"column":0},"generated":{"line":6944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6943,"column":0},"generated":{"line":6945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6944,"column":0},"generated":{"line":6946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6945,"column":0},"generated":{"line":6947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6946,"column":0},"generated":{"line":6948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6947,"column":0},"generated":{"line":6949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6948,"column":0},"generated":{"line":6950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6949,"column":0},"generated":{"line":6951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6950,"column":0},"generated":{"line":6952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6951,"column":0},"generated":{"line":6953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6952,"column":0},"generated":{"line":6954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6953,"column":0},"generated":{"line":6955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6954,"column":0},"generated":{"line":6956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6955,"column":0},"generated":{"line":6957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6956,"column":0},"generated":{"line":6958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6957,"column":0},"generated":{"line":6959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6958,"column":0},"generated":{"line":6960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6959,"column":0},"generated":{"line":6961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6960,"column":0},"generated":{"line":6962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6961,"column":0},"generated":{"line":6963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6962,"column":0},"generated":{"line":6964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6963,"column":0},"generated":{"line":6965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6964,"column":0},"generated":{"line":6966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6965,"column":0},"generated":{"line":6967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6966,"column":0},"generated":{"line":6968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6967,"column":0},"generated":{"line":6969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6968,"column":0},"generated":{"line":6970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6969,"column":0},"generated":{"line":6971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6970,"column":0},"generated":{"line":6972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6971,"column":0},"generated":{"line":6973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6972,"column":0},"generated":{"line":6974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6973,"column":0},"generated":{"line":6975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6974,"column":0},"generated":{"line":6976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6975,"column":0},"generated":{"line":6977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6976,"column":0},"generated":{"line":6978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6977,"column":0},"generated":{"line":6979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6978,"column":0},"generated":{"line":6980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6979,"column":0},"generated":{"line":6981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6980,"column":0},"generated":{"line":6982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6981,"column":0},"generated":{"line":6983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6982,"column":0},"generated":{"line":6984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6983,"column":0},"generated":{"line":6985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6984,"column":0},"generated":{"line":6986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6985,"column":0},"generated":{"line":6987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6986,"column":0},"generated":{"line":6988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6987,"column":0},"generated":{"line":6989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6988,"column":0},"generated":{"line":6990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6989,"column":0},"generated":{"line":6991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6990,"column":0},"generated":{"line":6992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6991,"column":0},"generated":{"line":6993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6992,"column":0},"generated":{"line":6994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6993,"column":0},"generated":{"line":6995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6994,"column":0},"generated":{"line":6996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6995,"column":0},"generated":{"line":6997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6996,"column":0},"generated":{"line":6998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6997,"column":0},"generated":{"line":6999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6998,"column":0},"generated":{"line":7000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":6999,"column":0},"generated":{"line":7001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7000,"column":0},"generated":{"line":7002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7001,"column":0},"generated":{"line":7003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7002,"column":0},"generated":{"line":7004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7003,"column":0},"generated":{"line":7005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7004,"column":0},"generated":{"line":7006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7005,"column":0},"generated":{"line":7007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7006,"column":0},"generated":{"line":7008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7007,"column":0},"generated":{"line":7009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7008,"column":0},"generated":{"line":7010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7009,"column":0},"generated":{"line":7011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7010,"column":0},"generated":{"line":7012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7011,"column":0},"generated":{"line":7013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7012,"column":0},"generated":{"line":7014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7013,"column":0},"generated":{"line":7015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7014,"column":0},"generated":{"line":7016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7015,"column":0},"generated":{"line":7017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7016,"column":0},"generated":{"line":7018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7017,"column":0},"generated":{"line":7019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7018,"column":0},"generated":{"line":7020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7019,"column":0},"generated":{"line":7021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7020,"column":0},"generated":{"line":7022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7021,"column":0},"generated":{"line":7023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7022,"column":0},"generated":{"line":7024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7023,"column":0},"generated":{"line":7025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7024,"column":0},"generated":{"line":7026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7025,"column":0},"generated":{"line":7027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7026,"column":0},"generated":{"line":7028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7027,"column":0},"generated":{"line":7029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7028,"column":0},"generated":{"line":7030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7029,"column":0},"generated":{"line":7031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7030,"column":0},"generated":{"line":7032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7031,"column":0},"generated":{"line":7033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7032,"column":0},"generated":{"line":7034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7033,"column":0},"generated":{"line":7035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7034,"column":0},"generated":{"line":7036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7035,"column":0},"generated":{"line":7037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7036,"column":0},"generated":{"line":7038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7037,"column":0},"generated":{"line":7039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7038,"column":0},"generated":{"line":7040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7039,"column":0},"generated":{"line":7041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7040,"column":0},"generated":{"line":7042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7041,"column":0},"generated":{"line":7043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7042,"column":0},"generated":{"line":7044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7043,"column":0},"generated":{"line":7045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7044,"column":0},"generated":{"line":7046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7045,"column":0},"generated":{"line":7047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7046,"column":0},"generated":{"line":7048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7047,"column":0},"generated":{"line":7049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7048,"column":0},"generated":{"line":7050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7049,"column":0},"generated":{"line":7051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7050,"column":0},"generated":{"line":7052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7051,"column":0},"generated":{"line":7053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7052,"column":0},"generated":{"line":7054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7053,"column":0},"generated":{"line":7055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7054,"column":0},"generated":{"line":7056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7055,"column":0},"generated":{"line":7057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7056,"column":0},"generated":{"line":7058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7057,"column":0},"generated":{"line":7059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7058,"column":0},"generated":{"line":7060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7059,"column":0},"generated":{"line":7061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7060,"column":0},"generated":{"line":7062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7061,"column":0},"generated":{"line":7063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7062,"column":0},"generated":{"line":7064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7063,"column":0},"generated":{"line":7065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7064,"column":0},"generated":{"line":7066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7065,"column":0},"generated":{"line":7067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7066,"column":0},"generated":{"line":7068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7067,"column":0},"generated":{"line":7069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7068,"column":0},"generated":{"line":7070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7069,"column":0},"generated":{"line":7071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7070,"column":0},"generated":{"line":7072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7071,"column":0},"generated":{"line":7073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7072,"column":0},"generated":{"line":7074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7073,"column":0},"generated":{"line":7075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7074,"column":0},"generated":{"line":7076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7075,"column":0},"generated":{"line":7077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7076,"column":0},"generated":{"line":7078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7077,"column":0},"generated":{"line":7079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7078,"column":0},"generated":{"line":7080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7079,"column":0},"generated":{"line":7081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7080,"column":0},"generated":{"line":7082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7081,"column":0},"generated":{"line":7083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7082,"column":0},"generated":{"line":7084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7083,"column":0},"generated":{"line":7085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7084,"column":0},"generated":{"line":7086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7085,"column":0},"generated":{"line":7087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7086,"column":0},"generated":{"line":7088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7087,"column":0},"generated":{"line":7089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7088,"column":0},"generated":{"line":7090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7089,"column":0},"generated":{"line":7091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7090,"column":0},"generated":{"line":7092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7091,"column":0},"generated":{"line":7093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7092,"column":0},"generated":{"line":7094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7093,"column":0},"generated":{"line":7095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7094,"column":0},"generated":{"line":7096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7095,"column":0},"generated":{"line":7097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7096,"column":0},"generated":{"line":7098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7097,"column":0},"generated":{"line":7099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7098,"column":0},"generated":{"line":7100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7099,"column":0},"generated":{"line":7101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7100,"column":0},"generated":{"line":7102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7101,"column":0},"generated":{"line":7103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7102,"column":0},"generated":{"line":7104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7103,"column":0},"generated":{"line":7105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7104,"column":0},"generated":{"line":7106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7105,"column":0},"generated":{"line":7107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7106,"column":0},"generated":{"line":7108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7107,"column":0},"generated":{"line":7109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7108,"column":0},"generated":{"line":7110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7109,"column":0},"generated":{"line":7111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7110,"column":0},"generated":{"line":7112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7111,"column":0},"generated":{"line":7113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7112,"column":0},"generated":{"line":7114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7113,"column":0},"generated":{"line":7115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7114,"column":0},"generated":{"line":7116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7115,"column":0},"generated":{"line":7117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7116,"column":0},"generated":{"line":7118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7117,"column":0},"generated":{"line":7119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7118,"column":0},"generated":{"line":7120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7119,"column":0},"generated":{"line":7121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7120,"column":0},"generated":{"line":7122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7121,"column":0},"generated":{"line":7123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7122,"column":0},"generated":{"line":7124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7123,"column":0},"generated":{"line":7125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7124,"column":0},"generated":{"line":7126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7125,"column":0},"generated":{"line":7127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7126,"column":0},"generated":{"line":7128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7127,"column":0},"generated":{"line":7129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7128,"column":0},"generated":{"line":7130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7129,"column":0},"generated":{"line":7131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7130,"column":0},"generated":{"line":7132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7131,"column":0},"generated":{"line":7133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7132,"column":0},"generated":{"line":7134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7133,"column":0},"generated":{"line":7135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7134,"column":0},"generated":{"line":7136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7135,"column":0},"generated":{"line":7137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7136,"column":0},"generated":{"line":7138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7137,"column":0},"generated":{"line":7139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7138,"column":0},"generated":{"line":7140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7139,"column":0},"generated":{"line":7141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7140,"column":0},"generated":{"line":7142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7141,"column":0},"generated":{"line":7143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7142,"column":0},"generated":{"line":7144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7143,"column":0},"generated":{"line":7145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7144,"column":0},"generated":{"line":7146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7145,"column":0},"generated":{"line":7147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7146,"column":0},"generated":{"line":7148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7147,"column":0},"generated":{"line":7149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7148,"column":0},"generated":{"line":7150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7149,"column":0},"generated":{"line":7151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7150,"column":0},"generated":{"line":7152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7151,"column":0},"generated":{"line":7153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7152,"column":0},"generated":{"line":7154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7153,"column":0},"generated":{"line":7155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7154,"column":0},"generated":{"line":7156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7155,"column":0},"generated":{"line":7157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7156,"column":0},"generated":{"line":7158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7157,"column":0},"generated":{"line":7159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7158,"column":0},"generated":{"line":7160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7159,"column":0},"generated":{"line":7161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7160,"column":0},"generated":{"line":7162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7161,"column":0},"generated":{"line":7163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7162,"column":0},"generated":{"line":7164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7163,"column":0},"generated":{"line":7165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7164,"column":0},"generated":{"line":7166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7165,"column":0},"generated":{"line":7167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7166,"column":0},"generated":{"line":7168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7167,"column":0},"generated":{"line":7169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7168,"column":0},"generated":{"line":7170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7169,"column":0},"generated":{"line":7171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7170,"column":0},"generated":{"line":7172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7171,"column":0},"generated":{"line":7173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7172,"column":0},"generated":{"line":7174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7173,"column":0},"generated":{"line":7175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7174,"column":0},"generated":{"line":7176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7175,"column":0},"generated":{"line":7177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7176,"column":0},"generated":{"line":7178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7177,"column":0},"generated":{"line":7179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7178,"column":0},"generated":{"line":7180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7179,"column":0},"generated":{"line":7181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7180,"column":0},"generated":{"line":7182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7181,"column":0},"generated":{"line":7183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7182,"column":0},"generated":{"line":7184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7183,"column":0},"generated":{"line":7185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7184,"column":0},"generated":{"line":7186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7185,"column":0},"generated":{"line":7187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7186,"column":0},"generated":{"line":7188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7187,"column":0},"generated":{"line":7189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7188,"column":0},"generated":{"line":7190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7189,"column":0},"generated":{"line":7191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7190,"column":0},"generated":{"line":7192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7191,"column":0},"generated":{"line":7193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7192,"column":0},"generated":{"line":7194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7193,"column":0},"generated":{"line":7195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7194,"column":0},"generated":{"line":7196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7195,"column":0},"generated":{"line":7197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7196,"column":0},"generated":{"line":7198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7197,"column":0},"generated":{"line":7199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7198,"column":0},"generated":{"line":7200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7199,"column":0},"generated":{"line":7201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7200,"column":0},"generated":{"line":7202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7201,"column":0},"generated":{"line":7203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7202,"column":0},"generated":{"line":7204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7203,"column":0},"generated":{"line":7205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7204,"column":0},"generated":{"line":7206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7205,"column":0},"generated":{"line":7207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7206,"column":0},"generated":{"line":7208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7207,"column":0},"generated":{"line":7209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7208,"column":0},"generated":{"line":7210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7209,"column":0},"generated":{"line":7211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7210,"column":0},"generated":{"line":7212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7211,"column":0},"generated":{"line":7213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7212,"column":0},"generated":{"line":7214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7213,"column":0},"generated":{"line":7215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7214,"column":0},"generated":{"line":7216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7215,"column":0},"generated":{"line":7217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7216,"column":0},"generated":{"line":7218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7217,"column":0},"generated":{"line":7219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7218,"column":0},"generated":{"line":7220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7219,"column":0},"generated":{"line":7221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7220,"column":0},"generated":{"line":7222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7221,"column":0},"generated":{"line":7223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7222,"column":0},"generated":{"line":7224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7223,"column":0},"generated":{"line":7225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7224,"column":0},"generated":{"line":7226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7225,"column":0},"generated":{"line":7227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7226,"column":0},"generated":{"line":7228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7227,"column":0},"generated":{"line":7229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7228,"column":0},"generated":{"line":7230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7229,"column":0},"generated":{"line":7231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7230,"column":0},"generated":{"line":7232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7231,"column":0},"generated":{"line":7233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7232,"column":0},"generated":{"line":7234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7233,"column":0},"generated":{"line":7235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7234,"column":0},"generated":{"line":7236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7235,"column":0},"generated":{"line":7237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7236,"column":0},"generated":{"line":7238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7237,"column":0},"generated":{"line":7239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7238,"column":0},"generated":{"line":7240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7239,"column":0},"generated":{"line":7241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7240,"column":0},"generated":{"line":7242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7241,"column":0},"generated":{"line":7243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7242,"column":0},"generated":{"line":7244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7243,"column":0},"generated":{"line":7245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7244,"column":0},"generated":{"line":7246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7245,"column":0},"generated":{"line":7247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7246,"column":0},"generated":{"line":7248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7247,"column":0},"generated":{"line":7249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7248,"column":0},"generated":{"line":7250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7249,"column":0},"generated":{"line":7251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7250,"column":0},"generated":{"line":7252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7251,"column":0},"generated":{"line":7253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7252,"column":0},"generated":{"line":7254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7253,"column":0},"generated":{"line":7255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7254,"column":0},"generated":{"line":7256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7255,"column":0},"generated":{"line":7257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7256,"column":0},"generated":{"line":7258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7257,"column":0},"generated":{"line":7259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7258,"column":0},"generated":{"line":7260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7259,"column":0},"generated":{"line":7261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7260,"column":0},"generated":{"line":7262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7261,"column":0},"generated":{"line":7263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7262,"column":0},"generated":{"line":7264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7263,"column":0},"generated":{"line":7265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7264,"column":0},"generated":{"line":7266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7265,"column":0},"generated":{"line":7267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7266,"column":0},"generated":{"line":7268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7267,"column":0},"generated":{"line":7269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7268,"column":0},"generated":{"line":7270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7269,"column":0},"generated":{"line":7271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7270,"column":0},"generated":{"line":7272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7271,"column":0},"generated":{"line":7273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7272,"column":0},"generated":{"line":7274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7273,"column":0},"generated":{"line":7275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7274,"column":0},"generated":{"line":7276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7275,"column":0},"generated":{"line":7277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7276,"column":0},"generated":{"line":7278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7277,"column":0},"generated":{"line":7279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7278,"column":0},"generated":{"line":7280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7279,"column":0},"generated":{"line":7281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7280,"column":0},"generated":{"line":7282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7281,"column":0},"generated":{"line":7283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7282,"column":0},"generated":{"line":7284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7283,"column":0},"generated":{"line":7285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7284,"column":0},"generated":{"line":7286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7285,"column":0},"generated":{"line":7287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7286,"column":0},"generated":{"line":7288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7287,"column":0},"generated":{"line":7289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7288,"column":0},"generated":{"line":7290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7289,"column":0},"generated":{"line":7291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7290,"column":0},"generated":{"line":7292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7291,"column":0},"generated":{"line":7293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7292,"column":0},"generated":{"line":7294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7293,"column":0},"generated":{"line":7295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7294,"column":0},"generated":{"line":7296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7295,"column":0},"generated":{"line":7297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7296,"column":0},"generated":{"line":7298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7297,"column":0},"generated":{"line":7299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7298,"column":0},"generated":{"line":7300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7299,"column":0},"generated":{"line":7301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7300,"column":0},"generated":{"line":7302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7301,"column":0},"generated":{"line":7303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7302,"column":0},"generated":{"line":7304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7303,"column":0},"generated":{"line":7305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7304,"column":0},"generated":{"line":7306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7305,"column":0},"generated":{"line":7307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7306,"column":0},"generated":{"line":7308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7307,"column":0},"generated":{"line":7309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7308,"column":0},"generated":{"line":7310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7309,"column":0},"generated":{"line":7311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7310,"column":0},"generated":{"line":7312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7311,"column":0},"generated":{"line":7313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7312,"column":0},"generated":{"line":7314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7313,"column":0},"generated":{"line":7315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7314,"column":0},"generated":{"line":7316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7315,"column":0},"generated":{"line":7317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7316,"column":0},"generated":{"line":7318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7317,"column":0},"generated":{"line":7319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7318,"column":0},"generated":{"line":7320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7319,"column":0},"generated":{"line":7321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7320,"column":0},"generated":{"line":7322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7321,"column":0},"generated":{"line":7323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7322,"column":0},"generated":{"line":7324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7323,"column":0},"generated":{"line":7325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7324,"column":0},"generated":{"line":7326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7325,"column":0},"generated":{"line":7327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7326,"column":0},"generated":{"line":7328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7327,"column":0},"generated":{"line":7329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7328,"column":0},"generated":{"line":7330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7329,"column":0},"generated":{"line":7331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7330,"column":0},"generated":{"line":7332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7331,"column":0},"generated":{"line":7333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7332,"column":0},"generated":{"line":7334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7333,"column":0},"generated":{"line":7335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7334,"column":0},"generated":{"line":7336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7335,"column":0},"generated":{"line":7337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7336,"column":0},"generated":{"line":7338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7337,"column":0},"generated":{"line":7339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7338,"column":0},"generated":{"line":7340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7339,"column":0},"generated":{"line":7341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7340,"column":0},"generated":{"line":7342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7341,"column":0},"generated":{"line":7343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7342,"column":0},"generated":{"line":7344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7343,"column":0},"generated":{"line":7345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7344,"column":0},"generated":{"line":7346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7345,"column":0},"generated":{"line":7347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7346,"column":0},"generated":{"line":7348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7347,"column":0},"generated":{"line":7349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7348,"column":0},"generated":{"line":7350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7349,"column":0},"generated":{"line":7351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7350,"column":0},"generated":{"line":7352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7351,"column":0},"generated":{"line":7353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7352,"column":0},"generated":{"line":7354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7353,"column":0},"generated":{"line":7355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7354,"column":0},"generated":{"line":7356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7355,"column":0},"generated":{"line":7357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7356,"column":0},"generated":{"line":7358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7357,"column":0},"generated":{"line":7359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7358,"column":0},"generated":{"line":7360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7359,"column":0},"generated":{"line":7361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7360,"column":0},"generated":{"line":7362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7361,"column":0},"generated":{"line":7363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7362,"column":0},"generated":{"line":7364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7363,"column":0},"generated":{"line":7365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7364,"column":0},"generated":{"line":7366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7365,"column":0},"generated":{"line":7367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7366,"column":0},"generated":{"line":7368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7367,"column":0},"generated":{"line":7369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7368,"column":0},"generated":{"line":7370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7369,"column":0},"generated":{"line":7371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7370,"column":0},"generated":{"line":7372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7371,"column":0},"generated":{"line":7373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7372,"column":0},"generated":{"line":7374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7373,"column":0},"generated":{"line":7375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7374,"column":0},"generated":{"line":7376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7375,"column":0},"generated":{"line":7377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7376,"column":0},"generated":{"line":7378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7377,"column":0},"generated":{"line":7379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7378,"column":0},"generated":{"line":7380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7379,"column":0},"generated":{"line":7381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7380,"column":0},"generated":{"line":7382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7381,"column":0},"generated":{"line":7383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7382,"column":0},"generated":{"line":7384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7383,"column":0},"generated":{"line":7385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7384,"column":0},"generated":{"line":7386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7385,"column":0},"generated":{"line":7387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7386,"column":0},"generated":{"line":7388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7387,"column":0},"generated":{"line":7389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7388,"column":0},"generated":{"line":7390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7389,"column":0},"generated":{"line":7391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7390,"column":0},"generated":{"line":7392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7391,"column":0},"generated":{"line":7393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7392,"column":0},"generated":{"line":7394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7393,"column":0},"generated":{"line":7395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7394,"column":0},"generated":{"line":7396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7395,"column":0},"generated":{"line":7397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7396,"column":0},"generated":{"line":7398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7397,"column":0},"generated":{"line":7399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7398,"column":0},"generated":{"line":7400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7399,"column":0},"generated":{"line":7401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7400,"column":0},"generated":{"line":7402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7401,"column":0},"generated":{"line":7403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7402,"column":0},"generated":{"line":7404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7403,"column":0},"generated":{"line":7405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7404,"column":0},"generated":{"line":7406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7405,"column":0},"generated":{"line":7407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7406,"column":0},"generated":{"line":7408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7407,"column":0},"generated":{"line":7409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7408,"column":0},"generated":{"line":7410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7409,"column":0},"generated":{"line":7411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7410,"column":0},"generated":{"line":7412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7411,"column":0},"generated":{"line":7413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7412,"column":0},"generated":{"line":7414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7413,"column":0},"generated":{"line":7415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7414,"column":0},"generated":{"line":7416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7415,"column":0},"generated":{"line":7417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7416,"column":0},"generated":{"line":7418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7417,"column":0},"generated":{"line":7419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7418,"column":0},"generated":{"line":7420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7419,"column":0},"generated":{"line":7421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7420,"column":0},"generated":{"line":7422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7421,"column":0},"generated":{"line":7423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7422,"column":0},"generated":{"line":7424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7423,"column":0},"generated":{"line":7425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7424,"column":0},"generated":{"line":7426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7425,"column":0},"generated":{"line":7427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7426,"column":0},"generated":{"line":7428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7427,"column":0},"generated":{"line":7429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7428,"column":0},"generated":{"line":7430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7429,"column":0},"generated":{"line":7431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7430,"column":0},"generated":{"line":7432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7431,"column":0},"generated":{"line":7433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7432,"column":0},"generated":{"line":7434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7433,"column":0},"generated":{"line":7435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7434,"column":0},"generated":{"line":7436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7435,"column":0},"generated":{"line":7437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7436,"column":0},"generated":{"line":7438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7437,"column":0},"generated":{"line":7439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7438,"column":0},"generated":{"line":7440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7439,"column":0},"generated":{"line":7441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7440,"column":0},"generated":{"line":7442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7441,"column":0},"generated":{"line":7443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7442,"column":0},"generated":{"line":7444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7443,"column":0},"generated":{"line":7445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7444,"column":0},"generated":{"line":7446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7445,"column":0},"generated":{"line":7447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7446,"column":0},"generated":{"line":7448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7447,"column":0},"generated":{"line":7449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7448,"column":0},"generated":{"line":7450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7449,"column":0},"generated":{"line":7451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7450,"column":0},"generated":{"line":7452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7451,"column":0},"generated":{"line":7453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7452,"column":0},"generated":{"line":7454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7453,"column":0},"generated":{"line":7455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7454,"column":0},"generated":{"line":7456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7455,"column":0},"generated":{"line":7457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7456,"column":0},"generated":{"line":7458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7457,"column":0},"generated":{"line":7459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7458,"column":0},"generated":{"line":7460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7459,"column":0},"generated":{"line":7461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7460,"column":0},"generated":{"line":7462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7461,"column":0},"generated":{"line":7463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7462,"column":0},"generated":{"line":7464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7463,"column":0},"generated":{"line":7465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7464,"column":0},"generated":{"line":7466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7465,"column":0},"generated":{"line":7467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7466,"column":0},"generated":{"line":7468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7467,"column":0},"generated":{"line":7469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7468,"column":0},"generated":{"line":7470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7469,"column":0},"generated":{"line":7471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7470,"column":0},"generated":{"line":7472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7471,"column":0},"generated":{"line":7473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7472,"column":0},"generated":{"line":7474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7473,"column":0},"generated":{"line":7475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7474,"column":0},"generated":{"line":7476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7475,"column":0},"generated":{"line":7477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7476,"column":0},"generated":{"line":7478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7477,"column":0},"generated":{"line":7479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7478,"column":0},"generated":{"line":7480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7479,"column":0},"generated":{"line":7481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7480,"column":0},"generated":{"line":7482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7481,"column":0},"generated":{"line":7483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7482,"column":0},"generated":{"line":7484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7483,"column":0},"generated":{"line":7485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7484,"column":0},"generated":{"line":7486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7485,"column":0},"generated":{"line":7487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7486,"column":0},"generated":{"line":7488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7487,"column":0},"generated":{"line":7489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7488,"column":0},"generated":{"line":7490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7489,"column":0},"generated":{"line":7491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7490,"column":0},"generated":{"line":7492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7491,"column":0},"generated":{"line":7493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7492,"column":0},"generated":{"line":7494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7493,"column":0},"generated":{"line":7495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7494,"column":0},"generated":{"line":7496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7495,"column":0},"generated":{"line":7497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7496,"column":0},"generated":{"line":7498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7497,"column":0},"generated":{"line":7499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7498,"column":0},"generated":{"line":7500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7499,"column":0},"generated":{"line":7501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7500,"column":0},"generated":{"line":7502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7501,"column":0},"generated":{"line":7503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7502,"column":0},"generated":{"line":7504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7503,"column":0},"generated":{"line":7505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7504,"column":0},"generated":{"line":7506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7505,"column":0},"generated":{"line":7507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7506,"column":0},"generated":{"line":7508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7507,"column":0},"generated":{"line":7509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7508,"column":0},"generated":{"line":7510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7509,"column":0},"generated":{"line":7511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7510,"column":0},"generated":{"line":7512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7511,"column":0},"generated":{"line":7513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7512,"column":0},"generated":{"line":7514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7513,"column":0},"generated":{"line":7515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7514,"column":0},"generated":{"line":7516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7515,"column":0},"generated":{"line":7517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7516,"column":0},"generated":{"line":7518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7517,"column":0},"generated":{"line":7519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7518,"column":0},"generated":{"line":7520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7519,"column":0},"generated":{"line":7521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7520,"column":0},"generated":{"line":7522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7521,"column":0},"generated":{"line":7523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7522,"column":0},"generated":{"line":7524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7523,"column":0},"generated":{"line":7525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7524,"column":0},"generated":{"line":7526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7525,"column":0},"generated":{"line":7527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7526,"column":0},"generated":{"line":7528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7527,"column":0},"generated":{"line":7529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7528,"column":0},"generated":{"line":7530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7529,"column":0},"generated":{"line":7531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7530,"column":0},"generated":{"line":7532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7531,"column":0},"generated":{"line":7533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7532,"column":0},"generated":{"line":7534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7533,"column":0},"generated":{"line":7535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7534,"column":0},"generated":{"line":7536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7535,"column":0},"generated":{"line":7537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7536,"column":0},"generated":{"line":7538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7537,"column":0},"generated":{"line":7539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7538,"column":0},"generated":{"line":7540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7539,"column":0},"generated":{"line":7541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7540,"column":0},"generated":{"line":7542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7541,"column":0},"generated":{"line":7543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7542,"column":0},"generated":{"line":7544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7543,"column":0},"generated":{"line":7545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7544,"column":0},"generated":{"line":7546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7545,"column":0},"generated":{"line":7547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7546,"column":0},"generated":{"line":7548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7547,"column":0},"generated":{"line":7549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7548,"column":0},"generated":{"line":7550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7549,"column":0},"generated":{"line":7551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7550,"column":0},"generated":{"line":7552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7551,"column":0},"generated":{"line":7553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7552,"column":0},"generated":{"line":7554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7553,"column":0},"generated":{"line":7555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7554,"column":0},"generated":{"line":7556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7555,"column":0},"generated":{"line":7557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7556,"column":0},"generated":{"line":7558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7557,"column":0},"generated":{"line":7559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7558,"column":0},"generated":{"line":7560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7559,"column":0},"generated":{"line":7561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7560,"column":0},"generated":{"line":7562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7561,"column":0},"generated":{"line":7563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7562,"column":0},"generated":{"line":7564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7563,"column":0},"generated":{"line":7565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7564,"column":0},"generated":{"line":7566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7565,"column":0},"generated":{"line":7567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7566,"column":0},"generated":{"line":7568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7567,"column":0},"generated":{"line":7569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7568,"column":0},"generated":{"line":7570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7569,"column":0},"generated":{"line":7571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7570,"column":0},"generated":{"line":7572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7571,"column":0},"generated":{"line":7573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7572,"column":0},"generated":{"line":7574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7573,"column":0},"generated":{"line":7575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7574,"column":0},"generated":{"line":7576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7575,"column":0},"generated":{"line":7577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7576,"column":0},"generated":{"line":7578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7577,"column":0},"generated":{"line":7579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7578,"column":0},"generated":{"line":7580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7579,"column":0},"generated":{"line":7581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7580,"column":0},"generated":{"line":7582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7581,"column":0},"generated":{"line":7583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7582,"column":0},"generated":{"line":7584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7583,"column":0},"generated":{"line":7585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7584,"column":0},"generated":{"line":7586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7585,"column":0},"generated":{"line":7587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7586,"column":0},"generated":{"line":7588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7587,"column":0},"generated":{"line":7589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7588,"column":0},"generated":{"line":7590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7589,"column":0},"generated":{"line":7591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7590,"column":0},"generated":{"line":7592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7591,"column":0},"generated":{"line":7593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7592,"column":0},"generated":{"line":7594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7593,"column":0},"generated":{"line":7595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7594,"column":0},"generated":{"line":7596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7595,"column":0},"generated":{"line":7597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7596,"column":0},"generated":{"line":7598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7597,"column":0},"generated":{"line":7599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7598,"column":0},"generated":{"line":7600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7599,"column":0},"generated":{"line":7601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7600,"column":0},"generated":{"line":7602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7601,"column":0},"generated":{"line":7603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7602,"column":0},"generated":{"line":7604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7603,"column":0},"generated":{"line":7605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7604,"column":0},"generated":{"line":7606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7605,"column":0},"generated":{"line":7607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7606,"column":0},"generated":{"line":7608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7607,"column":0},"generated":{"line":7609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7608,"column":0},"generated":{"line":7610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7609,"column":0},"generated":{"line":7611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7610,"column":0},"generated":{"line":7612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7611,"column":0},"generated":{"line":7613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7612,"column":0},"generated":{"line":7614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7613,"column":0},"generated":{"line":7615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7614,"column":0},"generated":{"line":7616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7615,"column":0},"generated":{"line":7617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7616,"column":0},"generated":{"line":7618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7617,"column":0},"generated":{"line":7619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7618,"column":0},"generated":{"line":7620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7619,"column":0},"generated":{"line":7621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7620,"column":0},"generated":{"line":7622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7621,"column":0},"generated":{"line":7623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7622,"column":0},"generated":{"line":7624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7623,"column":0},"generated":{"line":7625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7624,"column":0},"generated":{"line":7626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7625,"column":0},"generated":{"line":7627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7626,"column":0},"generated":{"line":7628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7627,"column":0},"generated":{"line":7629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7628,"column":0},"generated":{"line":7630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7629,"column":0},"generated":{"line":7631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7630,"column":0},"generated":{"line":7632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7631,"column":0},"generated":{"line":7633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7632,"column":0},"generated":{"line":7634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7633,"column":0},"generated":{"line":7635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7634,"column":0},"generated":{"line":7636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7635,"column":0},"generated":{"line":7637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7636,"column":0},"generated":{"line":7638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7637,"column":0},"generated":{"line":7639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7638,"column":0},"generated":{"line":7640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7639,"column":0},"generated":{"line":7641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7640,"column":0},"generated":{"line":7642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7641,"column":0},"generated":{"line":7643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7642,"column":0},"generated":{"line":7644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7643,"column":0},"generated":{"line":7645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7644,"column":0},"generated":{"line":7646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7645,"column":0},"generated":{"line":7647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7646,"column":0},"generated":{"line":7648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7647,"column":0},"generated":{"line":7649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7648,"column":0},"generated":{"line":7650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7649,"column":0},"generated":{"line":7651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7650,"column":0},"generated":{"line":7652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7651,"column":0},"generated":{"line":7653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7652,"column":0},"generated":{"line":7654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7653,"column":0},"generated":{"line":7655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7654,"column":0},"generated":{"line":7656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7655,"column":0},"generated":{"line":7657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7656,"column":0},"generated":{"line":7658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7657,"column":0},"generated":{"line":7659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7658,"column":0},"generated":{"line":7660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7659,"column":0},"generated":{"line":7661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7660,"column":0},"generated":{"line":7662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7661,"column":0},"generated":{"line":7663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7662,"column":0},"generated":{"line":7664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7663,"column":0},"generated":{"line":7665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7664,"column":0},"generated":{"line":7666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7665,"column":0},"generated":{"line":7667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7666,"column":0},"generated":{"line":7668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7667,"column":0},"generated":{"line":7669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7668,"column":0},"generated":{"line":7670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7669,"column":0},"generated":{"line":7671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7670,"column":0},"generated":{"line":7672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7671,"column":0},"generated":{"line":7673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7672,"column":0},"generated":{"line":7674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7673,"column":0},"generated":{"line":7675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7674,"column":0},"generated":{"line":7676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7675,"column":0},"generated":{"line":7677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7676,"column":0},"generated":{"line":7678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7677,"column":0},"generated":{"line":7679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7678,"column":0},"generated":{"line":7680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7679,"column":0},"generated":{"line":7681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7680,"column":0},"generated":{"line":7682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7681,"column":0},"generated":{"line":7683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7682,"column":0},"generated":{"line":7684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7683,"column":0},"generated":{"line":7685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7684,"column":0},"generated":{"line":7686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7685,"column":0},"generated":{"line":7687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7686,"column":0},"generated":{"line":7688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7687,"column":0},"generated":{"line":7689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7688,"column":0},"generated":{"line":7690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7689,"column":0},"generated":{"line":7691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7690,"column":0},"generated":{"line":7692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7691,"column":0},"generated":{"line":7693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7692,"column":0},"generated":{"line":7694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7693,"column":0},"generated":{"line":7695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7694,"column":0},"generated":{"line":7696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7695,"column":0},"generated":{"line":7697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7696,"column":0},"generated":{"line":7698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7697,"column":0},"generated":{"line":7699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7698,"column":0},"generated":{"line":7700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7699,"column":0},"generated":{"line":7701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7700,"column":0},"generated":{"line":7702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7701,"column":0},"generated":{"line":7703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7702,"column":0},"generated":{"line":7704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7703,"column":0},"generated":{"line":7705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7704,"column":0},"generated":{"line":7706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7705,"column":0},"generated":{"line":7707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7706,"column":0},"generated":{"line":7708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7707,"column":0},"generated":{"line":7709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7708,"column":0},"generated":{"line":7710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7709,"column":0},"generated":{"line":7711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7710,"column":0},"generated":{"line":7712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7711,"column":0},"generated":{"line":7713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7712,"column":0},"generated":{"line":7714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7713,"column":0},"generated":{"line":7715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7714,"column":0},"generated":{"line":7716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7715,"column":0},"generated":{"line":7717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7716,"column":0},"generated":{"line":7718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7717,"column":0},"generated":{"line":7719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7718,"column":0},"generated":{"line":7720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7719,"column":0},"generated":{"line":7721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7720,"column":0},"generated":{"line":7722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7721,"column":0},"generated":{"line":7723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7722,"column":0},"generated":{"line":7724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7723,"column":0},"generated":{"line":7725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7724,"column":0},"generated":{"line":7726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7725,"column":0},"generated":{"line":7727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7726,"column":0},"generated":{"line":7728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7727,"column":0},"generated":{"line":7729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7728,"column":0},"generated":{"line":7730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7729,"column":0},"generated":{"line":7731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7730,"column":0},"generated":{"line":7732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7731,"column":0},"generated":{"line":7733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7732,"column":0},"generated":{"line":7734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7733,"column":0},"generated":{"line":7735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7734,"column":0},"generated":{"line":7736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7735,"column":0},"generated":{"line":7737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7736,"column":0},"generated":{"line":7738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7737,"column":0},"generated":{"line":7739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7738,"column":0},"generated":{"line":7740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7739,"column":0},"generated":{"line":7741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7740,"column":0},"generated":{"line":7742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7741,"column":0},"generated":{"line":7743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7742,"column":0},"generated":{"line":7744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7743,"column":0},"generated":{"line":7745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7744,"column":0},"generated":{"line":7746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7745,"column":0},"generated":{"line":7747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7746,"column":0},"generated":{"line":7748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7747,"column":0},"generated":{"line":7749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7748,"column":0},"generated":{"line":7750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7749,"column":0},"generated":{"line":7751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7750,"column":0},"generated":{"line":7752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7751,"column":0},"generated":{"line":7753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7752,"column":0},"generated":{"line":7754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7753,"column":0},"generated":{"line":7755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7754,"column":0},"generated":{"line":7756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7755,"column":0},"generated":{"line":7757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7756,"column":0},"generated":{"line":7758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7757,"column":0},"generated":{"line":7759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7758,"column":0},"generated":{"line":7760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7759,"column":0},"generated":{"line":7761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7760,"column":0},"generated":{"line":7762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7761,"column":0},"generated":{"line":7763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7762,"column":0},"generated":{"line":7764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7763,"column":0},"generated":{"line":7765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7764,"column":0},"generated":{"line":7766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7765,"column":0},"generated":{"line":7767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7766,"column":0},"generated":{"line":7768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7767,"column":0},"generated":{"line":7769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7768,"column":0},"generated":{"line":7770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7769,"column":0},"generated":{"line":7771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7770,"column":0},"generated":{"line":7772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7771,"column":0},"generated":{"line":7773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7772,"column":0},"generated":{"line":7774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7773,"column":0},"generated":{"line":7775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7774,"column":0},"generated":{"line":7776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7775,"column":0},"generated":{"line":7777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7776,"column":0},"generated":{"line":7778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7777,"column":0},"generated":{"line":7779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7778,"column":0},"generated":{"line":7780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7779,"column":0},"generated":{"line":7781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7780,"column":0},"generated":{"line":7782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7781,"column":0},"generated":{"line":7783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7782,"column":0},"generated":{"line":7784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7783,"column":0},"generated":{"line":7785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7784,"column":0},"generated":{"line":7786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7785,"column":0},"generated":{"line":7787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7786,"column":0},"generated":{"line":7788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7787,"column":0},"generated":{"line":7789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7788,"column":0},"generated":{"line":7790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7789,"column":0},"generated":{"line":7791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7790,"column":0},"generated":{"line":7792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7791,"column":0},"generated":{"line":7793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7792,"column":0},"generated":{"line":7794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7793,"column":0},"generated":{"line":7795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7794,"column":0},"generated":{"line":7796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7795,"column":0},"generated":{"line":7797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7796,"column":0},"generated":{"line":7798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7797,"column":0},"generated":{"line":7799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7798,"column":0},"generated":{"line":7800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7799,"column":0},"generated":{"line":7801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7800,"column":0},"generated":{"line":7802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7801,"column":0},"generated":{"line":7803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7802,"column":0},"generated":{"line":7804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7803,"column":0},"generated":{"line":7805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7804,"column":0},"generated":{"line":7806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7805,"column":0},"generated":{"line":7807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7806,"column":0},"generated":{"line":7808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7807,"column":0},"generated":{"line":7809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7808,"column":0},"generated":{"line":7810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7809,"column":0},"generated":{"line":7811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7810,"column":0},"generated":{"line":7812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7811,"column":0},"generated":{"line":7813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7812,"column":0},"generated":{"line":7814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7813,"column":0},"generated":{"line":7815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7814,"column":0},"generated":{"line":7816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7815,"column":0},"generated":{"line":7817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7816,"column":0},"generated":{"line":7818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7817,"column":0},"generated":{"line":7819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7818,"column":0},"generated":{"line":7820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7819,"column":0},"generated":{"line":7821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7820,"column":0},"generated":{"line":7822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7821,"column":0},"generated":{"line":7823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7822,"column":0},"generated":{"line":7824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7823,"column":0},"generated":{"line":7825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7824,"column":0},"generated":{"line":7826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7825,"column":0},"generated":{"line":7827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7826,"column":0},"generated":{"line":7828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7827,"column":0},"generated":{"line":7829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7828,"column":0},"generated":{"line":7830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7829,"column":0},"generated":{"line":7831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7830,"column":0},"generated":{"line":7832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7831,"column":0},"generated":{"line":7833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7832,"column":0},"generated":{"line":7834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7833,"column":0},"generated":{"line":7835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7834,"column":0},"generated":{"line":7836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7835,"column":0},"generated":{"line":7837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7836,"column":0},"generated":{"line":7838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7837,"column":0},"generated":{"line":7839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7838,"column":0},"generated":{"line":7840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7839,"column":0},"generated":{"line":7841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7840,"column":0},"generated":{"line":7842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7841,"column":0},"generated":{"line":7843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7842,"column":0},"generated":{"line":7844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7843,"column":0},"generated":{"line":7845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7844,"column":0},"generated":{"line":7846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7845,"column":0},"generated":{"line":7847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7846,"column":0},"generated":{"line":7848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7847,"column":0},"generated":{"line":7849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7848,"column":0},"generated":{"line":7850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7849,"column":0},"generated":{"line":7851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7850,"column":0},"generated":{"line":7852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7851,"column":0},"generated":{"line":7853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7852,"column":0},"generated":{"line":7854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7853,"column":0},"generated":{"line":7855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7854,"column":0},"generated":{"line":7856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7855,"column":0},"generated":{"line":7857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7856,"column":0},"generated":{"line":7858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7857,"column":0},"generated":{"line":7859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7858,"column":0},"generated":{"line":7860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7859,"column":0},"generated":{"line":7861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7860,"column":0},"generated":{"line":7862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7861,"column":0},"generated":{"line":7863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7862,"column":0},"generated":{"line":7864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7863,"column":0},"generated":{"line":7865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7864,"column":0},"generated":{"line":7866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7865,"column":0},"generated":{"line":7867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7866,"column":0},"generated":{"line":7868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7867,"column":0},"generated":{"line":7869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7868,"column":0},"generated":{"line":7870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7869,"column":0},"generated":{"line":7871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7870,"column":0},"generated":{"line":7872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7871,"column":0},"generated":{"line":7873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7872,"column":0},"generated":{"line":7874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7873,"column":0},"generated":{"line":7875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7874,"column":0},"generated":{"line":7876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7875,"column":0},"generated":{"line":7877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7876,"column":0},"generated":{"line":7878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7877,"column":0},"generated":{"line":7879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7878,"column":0},"generated":{"line":7880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7879,"column":0},"generated":{"line":7881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7880,"column":0},"generated":{"line":7882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7881,"column":0},"generated":{"line":7883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7882,"column":0},"generated":{"line":7884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7883,"column":0},"generated":{"line":7885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7884,"column":0},"generated":{"line":7886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7885,"column":0},"generated":{"line":7887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7886,"column":0},"generated":{"line":7888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7887,"column":0},"generated":{"line":7889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7888,"column":0},"generated":{"line":7890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7889,"column":0},"generated":{"line":7891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7890,"column":0},"generated":{"line":7892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7891,"column":0},"generated":{"line":7893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7892,"column":0},"generated":{"line":7894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7893,"column":0},"generated":{"line":7895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7894,"column":0},"generated":{"line":7896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7895,"column":0},"generated":{"line":7897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7896,"column":0},"generated":{"line":7898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7897,"column":0},"generated":{"line":7899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7898,"column":0},"generated":{"line":7900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7899,"column":0},"generated":{"line":7901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7900,"column":0},"generated":{"line":7902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7901,"column":0},"generated":{"line":7903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7902,"column":0},"generated":{"line":7904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7903,"column":0},"generated":{"line":7905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7904,"column":0},"generated":{"line":7906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7905,"column":0},"generated":{"line":7907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7906,"column":0},"generated":{"line":7908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7907,"column":0},"generated":{"line":7909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7908,"column":0},"generated":{"line":7910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7909,"column":0},"generated":{"line":7911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7910,"column":0},"generated":{"line":7912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7911,"column":0},"generated":{"line":7913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7912,"column":0},"generated":{"line":7914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7913,"column":0},"generated":{"line":7915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7914,"column":0},"generated":{"line":7916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7915,"column":0},"generated":{"line":7917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7916,"column":0},"generated":{"line":7918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7917,"column":0},"generated":{"line":7919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7918,"column":0},"generated":{"line":7920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7919,"column":0},"generated":{"line":7921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7920,"column":0},"generated":{"line":7922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7921,"column":0},"generated":{"line":7923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7922,"column":0},"generated":{"line":7924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7923,"column":0},"generated":{"line":7925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7924,"column":0},"generated":{"line":7926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7925,"column":0},"generated":{"line":7927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7926,"column":0},"generated":{"line":7928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7927,"column":0},"generated":{"line":7929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7928,"column":0},"generated":{"line":7930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7929,"column":0},"generated":{"line":7931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7930,"column":0},"generated":{"line":7932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7931,"column":0},"generated":{"line":7933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7932,"column":0},"generated":{"line":7934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7933,"column":0},"generated":{"line":7935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7934,"column":0},"generated":{"line":7936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7935,"column":0},"generated":{"line":7937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7936,"column":0},"generated":{"line":7938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7937,"column":0},"generated":{"line":7939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7938,"column":0},"generated":{"line":7940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7939,"column":0},"generated":{"line":7941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7940,"column":0},"generated":{"line":7942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7941,"column":0},"generated":{"line":7943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7942,"column":0},"generated":{"line":7944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7943,"column":0},"generated":{"line":7945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7944,"column":0},"generated":{"line":7946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7945,"column":0},"generated":{"line":7947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7946,"column":0},"generated":{"line":7948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7947,"column":0},"generated":{"line":7949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7948,"column":0},"generated":{"line":7950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7949,"column":0},"generated":{"line":7951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7950,"column":0},"generated":{"line":7952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7951,"column":0},"generated":{"line":7953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7952,"column":0},"generated":{"line":7954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7953,"column":0},"generated":{"line":7955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7954,"column":0},"generated":{"line":7956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7955,"column":0},"generated":{"line":7957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7956,"column":0},"generated":{"line":7958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7957,"column":0},"generated":{"line":7959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7958,"column":0},"generated":{"line":7960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7959,"column":0},"generated":{"line":7961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7960,"column":0},"generated":{"line":7962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7961,"column":0},"generated":{"line":7963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7962,"column":0},"generated":{"line":7964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7963,"column":0},"generated":{"line":7965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7964,"column":0},"generated":{"line":7966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7965,"column":0},"generated":{"line":7967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7966,"column":0},"generated":{"line":7968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7967,"column":0},"generated":{"line":7969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7968,"column":0},"generated":{"line":7970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7969,"column":0},"generated":{"line":7971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7970,"column":0},"generated":{"line":7972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7971,"column":0},"generated":{"line":7973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7972,"column":0},"generated":{"line":7974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7973,"column":0},"generated":{"line":7975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7974,"column":0},"generated":{"line":7976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7975,"column":0},"generated":{"line":7977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7976,"column":0},"generated":{"line":7978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7977,"column":0},"generated":{"line":7979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7978,"column":0},"generated":{"line":7980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7979,"column":0},"generated":{"line":7981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7980,"column":0},"generated":{"line":7982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7981,"column":0},"generated":{"line":7983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7982,"column":0},"generated":{"line":7984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7983,"column":0},"generated":{"line":7985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7984,"column":0},"generated":{"line":7986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7985,"column":0},"generated":{"line":7987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7986,"column":0},"generated":{"line":7988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7987,"column":0},"generated":{"line":7989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7988,"column":0},"generated":{"line":7990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7989,"column":0},"generated":{"line":7991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7990,"column":0},"generated":{"line":7992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7991,"column":0},"generated":{"line":7993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7992,"column":0},"generated":{"line":7994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7993,"column":0},"generated":{"line":7995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7994,"column":0},"generated":{"line":7996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7995,"column":0},"generated":{"line":7997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7996,"column":0},"generated":{"line":7998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7997,"column":0},"generated":{"line":7999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7998,"column":0},"generated":{"line":8000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":7999,"column":0},"generated":{"line":8001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8000,"column":0},"generated":{"line":8002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8001,"column":0},"generated":{"line":8003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8002,"column":0},"generated":{"line":8004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8003,"column":0},"generated":{"line":8005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8004,"column":0},"generated":{"line":8006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8005,"column":0},"generated":{"line":8007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8006,"column":0},"generated":{"line":8008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8007,"column":0},"generated":{"line":8009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8008,"column":0},"generated":{"line":8010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8009,"column":0},"generated":{"line":8011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8010,"column":0},"generated":{"line":8012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8011,"column":0},"generated":{"line":8013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8012,"column":0},"generated":{"line":8014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8013,"column":0},"generated":{"line":8015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8014,"column":0},"generated":{"line":8016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8015,"column":0},"generated":{"line":8017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8016,"column":0},"generated":{"line":8018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8017,"column":0},"generated":{"line":8019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8018,"column":0},"generated":{"line":8020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8019,"column":0},"generated":{"line":8021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8020,"column":0},"generated":{"line":8022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8021,"column":0},"generated":{"line":8023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8022,"column":0},"generated":{"line":8024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8023,"column":0},"generated":{"line":8025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8024,"column":0},"generated":{"line":8026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8025,"column":0},"generated":{"line":8027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8026,"column":0},"generated":{"line":8028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8027,"column":0},"generated":{"line":8029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8028,"column":0},"generated":{"line":8030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8029,"column":0},"generated":{"line":8031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8030,"column":0},"generated":{"line":8032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8031,"column":0},"generated":{"line":8033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8032,"column":0},"generated":{"line":8034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8033,"column":0},"generated":{"line":8035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8034,"column":0},"generated":{"line":8036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8035,"column":0},"generated":{"line":8037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8036,"column":0},"generated":{"line":8038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8037,"column":0},"generated":{"line":8039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8038,"column":0},"generated":{"line":8040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8039,"column":0},"generated":{"line":8041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8040,"column":0},"generated":{"line":8042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8041,"column":0},"generated":{"line":8043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8042,"column":0},"generated":{"line":8044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8043,"column":0},"generated":{"line":8045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8044,"column":0},"generated":{"line":8046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8045,"column":0},"generated":{"line":8047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8046,"column":0},"generated":{"line":8048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8047,"column":0},"generated":{"line":8049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8048,"column":0},"generated":{"line":8050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8049,"column":0},"generated":{"line":8051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8050,"column":0},"generated":{"line":8052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8051,"column":0},"generated":{"line":8053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8052,"column":0},"generated":{"line":8054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8053,"column":0},"generated":{"line":8055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8054,"column":0},"generated":{"line":8056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8055,"column":0},"generated":{"line":8057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8056,"column":0},"generated":{"line":8058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8057,"column":0},"generated":{"line":8059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8058,"column":0},"generated":{"line":8060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8059,"column":0},"generated":{"line":8061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8060,"column":0},"generated":{"line":8062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8061,"column":0},"generated":{"line":8063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8062,"column":0},"generated":{"line":8064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8063,"column":0},"generated":{"line":8065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8064,"column":0},"generated":{"line":8066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8065,"column":0},"generated":{"line":8067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8066,"column":0},"generated":{"line":8068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8067,"column":0},"generated":{"line":8069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8068,"column":0},"generated":{"line":8070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8069,"column":0},"generated":{"line":8071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8070,"column":0},"generated":{"line":8072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8071,"column":0},"generated":{"line":8073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8072,"column":0},"generated":{"line":8074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8073,"column":0},"generated":{"line":8075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8074,"column":0},"generated":{"line":8076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8075,"column":0},"generated":{"line":8077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8076,"column":0},"generated":{"line":8078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8077,"column":0},"generated":{"line":8079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8078,"column":0},"generated":{"line":8080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8079,"column":0},"generated":{"line":8081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8080,"column":0},"generated":{"line":8082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8081,"column":0},"generated":{"line":8083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8082,"column":0},"generated":{"line":8084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8083,"column":0},"generated":{"line":8085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8084,"column":0},"generated":{"line":8086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8085,"column":0},"generated":{"line":8087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8086,"column":0},"generated":{"line":8088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8087,"column":0},"generated":{"line":8089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8088,"column":0},"generated":{"line":8090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8089,"column":0},"generated":{"line":8091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8090,"column":0},"generated":{"line":8092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8091,"column":0},"generated":{"line":8093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8092,"column":0},"generated":{"line":8094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8093,"column":0},"generated":{"line":8095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8094,"column":0},"generated":{"line":8096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8095,"column":0},"generated":{"line":8097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8096,"column":0},"generated":{"line":8098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8097,"column":0},"generated":{"line":8099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8098,"column":0},"generated":{"line":8100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8099,"column":0},"generated":{"line":8101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8100,"column":0},"generated":{"line":8102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8101,"column":0},"generated":{"line":8103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8102,"column":0},"generated":{"line":8104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8103,"column":0},"generated":{"line":8105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8104,"column":0},"generated":{"line":8106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8105,"column":0},"generated":{"line":8107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8106,"column":0},"generated":{"line":8108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8107,"column":0},"generated":{"line":8109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8108,"column":0},"generated":{"line":8110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8109,"column":0},"generated":{"line":8111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8110,"column":0},"generated":{"line":8112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8111,"column":0},"generated":{"line":8113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8112,"column":0},"generated":{"line":8114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8113,"column":0},"generated":{"line":8115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8114,"column":0},"generated":{"line":8116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8115,"column":0},"generated":{"line":8117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8116,"column":0},"generated":{"line":8118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8117,"column":0},"generated":{"line":8119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8118,"column":0},"generated":{"line":8120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8119,"column":0},"generated":{"line":8121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8120,"column":0},"generated":{"line":8122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8121,"column":0},"generated":{"line":8123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8122,"column":0},"generated":{"line":8124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8123,"column":0},"generated":{"line":8125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8124,"column":0},"generated":{"line":8126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8125,"column":0},"generated":{"line":8127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8126,"column":0},"generated":{"line":8128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8127,"column":0},"generated":{"line":8129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8128,"column":0},"generated":{"line":8130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8129,"column":0},"generated":{"line":8131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8130,"column":0},"generated":{"line":8132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8131,"column":0},"generated":{"line":8133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8132,"column":0},"generated":{"line":8134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8133,"column":0},"generated":{"line":8135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8134,"column":0},"generated":{"line":8136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8135,"column":0},"generated":{"line":8137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8136,"column":0},"generated":{"line":8138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8137,"column":0},"generated":{"line":8139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8138,"column":0},"generated":{"line":8140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8139,"column":0},"generated":{"line":8141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8140,"column":0},"generated":{"line":8142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8141,"column":0},"generated":{"line":8143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8142,"column":0},"generated":{"line":8144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8143,"column":0},"generated":{"line":8145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8144,"column":0},"generated":{"line":8146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8145,"column":0},"generated":{"line":8147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8146,"column":0},"generated":{"line":8148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8147,"column":0},"generated":{"line":8149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8148,"column":0},"generated":{"line":8150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8149,"column":0},"generated":{"line":8151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8150,"column":0},"generated":{"line":8152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8151,"column":0},"generated":{"line":8153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8152,"column":0},"generated":{"line":8154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8153,"column":0},"generated":{"line":8155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8154,"column":0},"generated":{"line":8156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8155,"column":0},"generated":{"line":8157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8156,"column":0},"generated":{"line":8158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8157,"column":0},"generated":{"line":8159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8158,"column":0},"generated":{"line":8160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8159,"column":0},"generated":{"line":8161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8160,"column":0},"generated":{"line":8162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8161,"column":0},"generated":{"line":8163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8162,"column":0},"generated":{"line":8164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8163,"column":0},"generated":{"line":8165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8164,"column":0},"generated":{"line":8166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8165,"column":0},"generated":{"line":8167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8166,"column":0},"generated":{"line":8168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8167,"column":0},"generated":{"line":8169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8168,"column":0},"generated":{"line":8170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8169,"column":0},"generated":{"line":8171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8170,"column":0},"generated":{"line":8172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8171,"column":0},"generated":{"line":8173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8172,"column":0},"generated":{"line":8174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8173,"column":0},"generated":{"line":8175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8174,"column":0},"generated":{"line":8176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8175,"column":0},"generated":{"line":8177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8176,"column":0},"generated":{"line":8178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8177,"column":0},"generated":{"line":8179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8178,"column":0},"generated":{"line":8180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8179,"column":0},"generated":{"line":8181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8180,"column":0},"generated":{"line":8182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8181,"column":0},"generated":{"line":8183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8182,"column":0},"generated":{"line":8184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8183,"column":0},"generated":{"line":8185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8184,"column":0},"generated":{"line":8186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8185,"column":0},"generated":{"line":8187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8186,"column":0},"generated":{"line":8188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8187,"column":0},"generated":{"line":8189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8188,"column":0},"generated":{"line":8190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8189,"column":0},"generated":{"line":8191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8190,"column":0},"generated":{"line":8192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8191,"column":0},"generated":{"line":8193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8192,"column":0},"generated":{"line":8194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8193,"column":0},"generated":{"line":8195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8194,"column":0},"generated":{"line":8196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8195,"column":0},"generated":{"line":8197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8196,"column":0},"generated":{"line":8198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8197,"column":0},"generated":{"line":8199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8198,"column":0},"generated":{"line":8200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8199,"column":0},"generated":{"line":8201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8200,"column":0},"generated":{"line":8202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8201,"column":0},"generated":{"line":8203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8202,"column":0},"generated":{"line":8204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8203,"column":0},"generated":{"line":8205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8204,"column":0},"generated":{"line":8206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8205,"column":0},"generated":{"line":8207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8206,"column":0},"generated":{"line":8208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8207,"column":0},"generated":{"line":8209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8208,"column":0},"generated":{"line":8210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8209,"column":0},"generated":{"line":8211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8210,"column":0},"generated":{"line":8212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8211,"column":0},"generated":{"line":8213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8212,"column":0},"generated":{"line":8214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8213,"column":0},"generated":{"line":8215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8214,"column":0},"generated":{"line":8216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8215,"column":0},"generated":{"line":8217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8216,"column":0},"generated":{"line":8218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8217,"column":0},"generated":{"line":8219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8218,"column":0},"generated":{"line":8220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8219,"column":0},"generated":{"line":8221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8220,"column":0},"generated":{"line":8222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8221,"column":0},"generated":{"line":8223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8222,"column":0},"generated":{"line":8224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8223,"column":0},"generated":{"line":8225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8224,"column":0},"generated":{"line":8226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8225,"column":0},"generated":{"line":8227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8226,"column":0},"generated":{"line":8228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8227,"column":0},"generated":{"line":8229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8228,"column":0},"generated":{"line":8230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8229,"column":0},"generated":{"line":8231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8230,"column":0},"generated":{"line":8232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8231,"column":0},"generated":{"line":8233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8232,"column":0},"generated":{"line":8234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8233,"column":0},"generated":{"line":8235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8234,"column":0},"generated":{"line":8236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8235,"column":0},"generated":{"line":8237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8236,"column":0},"generated":{"line":8238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8237,"column":0},"generated":{"line":8239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8238,"column":0},"generated":{"line":8240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8239,"column":0},"generated":{"line":8241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8240,"column":0},"generated":{"line":8242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8241,"column":0},"generated":{"line":8243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8242,"column":0},"generated":{"line":8244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8243,"column":0},"generated":{"line":8245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8244,"column":0},"generated":{"line":8246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8245,"column":0},"generated":{"line":8247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8246,"column":0},"generated":{"line":8248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8247,"column":0},"generated":{"line":8249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8248,"column":0},"generated":{"line":8250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8249,"column":0},"generated":{"line":8251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8250,"column":0},"generated":{"line":8252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8251,"column":0},"generated":{"line":8253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8252,"column":0},"generated":{"line":8254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8253,"column":0},"generated":{"line":8255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8254,"column":0},"generated":{"line":8256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8255,"column":0},"generated":{"line":8257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8256,"column":0},"generated":{"line":8258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8257,"column":0},"generated":{"line":8259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8258,"column":0},"generated":{"line":8260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8259,"column":0},"generated":{"line":8261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8260,"column":0},"generated":{"line":8262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8261,"column":0},"generated":{"line":8263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8262,"column":0},"generated":{"line":8264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8263,"column":0},"generated":{"line":8265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8264,"column":0},"generated":{"line":8266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8265,"column":0},"generated":{"line":8267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8266,"column":0},"generated":{"line":8268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8267,"column":0},"generated":{"line":8269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8268,"column":0},"generated":{"line":8270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8269,"column":0},"generated":{"line":8271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8270,"column":0},"generated":{"line":8272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8271,"column":0},"generated":{"line":8273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8272,"column":0},"generated":{"line":8274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8273,"column":0},"generated":{"line":8275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8274,"column":0},"generated":{"line":8276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8275,"column":0},"generated":{"line":8277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8276,"column":0},"generated":{"line":8278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8277,"column":0},"generated":{"line":8279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8278,"column":0},"generated":{"line":8280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8279,"column":0},"generated":{"line":8281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8280,"column":0},"generated":{"line":8282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8281,"column":0},"generated":{"line":8283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8282,"column":0},"generated":{"line":8284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8283,"column":0},"generated":{"line":8285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8284,"column":0},"generated":{"line":8286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8285,"column":0},"generated":{"line":8287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8286,"column":0},"generated":{"line":8288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8287,"column":0},"generated":{"line":8289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8288,"column":0},"generated":{"line":8290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8289,"column":0},"generated":{"line":8291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8290,"column":0},"generated":{"line":8292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8291,"column":0},"generated":{"line":8293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8292,"column":0},"generated":{"line":8294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8293,"column":0},"generated":{"line":8295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8294,"column":0},"generated":{"line":8296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8295,"column":0},"generated":{"line":8297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8296,"column":0},"generated":{"line":8298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8297,"column":0},"generated":{"line":8299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8298,"column":0},"generated":{"line":8300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8299,"column":0},"generated":{"line":8301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8300,"column":0},"generated":{"line":8302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8301,"column":0},"generated":{"line":8303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8302,"column":0},"generated":{"line":8304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8303,"column":0},"generated":{"line":8305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8304,"column":0},"generated":{"line":8306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8305,"column":0},"generated":{"line":8307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8306,"column":0},"generated":{"line":8308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8307,"column":0},"generated":{"line":8309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8308,"column":0},"generated":{"line":8310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8309,"column":0},"generated":{"line":8311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8310,"column":0},"generated":{"line":8312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8311,"column":0},"generated":{"line":8313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8312,"column":0},"generated":{"line":8314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8313,"column":0},"generated":{"line":8315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8314,"column":0},"generated":{"line":8316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8315,"column":0},"generated":{"line":8317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8316,"column":0},"generated":{"line":8318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8317,"column":0},"generated":{"line":8319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8318,"column":0},"generated":{"line":8320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8319,"column":0},"generated":{"line":8321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8320,"column":0},"generated":{"line":8322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8321,"column":0},"generated":{"line":8323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8322,"column":0},"generated":{"line":8324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8323,"column":0},"generated":{"line":8325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8324,"column":0},"generated":{"line":8326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8325,"column":0},"generated":{"line":8327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8326,"column":0},"generated":{"line":8328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8327,"column":0},"generated":{"line":8329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8328,"column":0},"generated":{"line":8330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8329,"column":0},"generated":{"line":8331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8330,"column":0},"generated":{"line":8332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8331,"column":0},"generated":{"line":8333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8332,"column":0},"generated":{"line":8334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8333,"column":0},"generated":{"line":8335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8334,"column":0},"generated":{"line":8336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8335,"column":0},"generated":{"line":8337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8336,"column":0},"generated":{"line":8338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8337,"column":0},"generated":{"line":8339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8338,"column":0},"generated":{"line":8340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8339,"column":0},"generated":{"line":8341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8340,"column":0},"generated":{"line":8342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8341,"column":0},"generated":{"line":8343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8342,"column":0},"generated":{"line":8344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8343,"column":0},"generated":{"line":8345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8344,"column":0},"generated":{"line":8346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8345,"column":0},"generated":{"line":8347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8346,"column":0},"generated":{"line":8348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8347,"column":0},"generated":{"line":8349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8348,"column":0},"generated":{"line":8350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8349,"column":0},"generated":{"line":8351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8350,"column":0},"generated":{"line":8352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8351,"column":0},"generated":{"line":8353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8352,"column":0},"generated":{"line":8354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8353,"column":0},"generated":{"line":8355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8354,"column":0},"generated":{"line":8356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8355,"column":0},"generated":{"line":8357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8356,"column":0},"generated":{"line":8358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8357,"column":0},"generated":{"line":8359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8358,"column":0},"generated":{"line":8360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8359,"column":0},"generated":{"line":8361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8360,"column":0},"generated":{"line":8362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8361,"column":0},"generated":{"line":8363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8362,"column":0},"generated":{"line":8364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8363,"column":0},"generated":{"line":8365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8364,"column":0},"generated":{"line":8366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8365,"column":0},"generated":{"line":8367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8366,"column":0},"generated":{"line":8368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8367,"column":0},"generated":{"line":8369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8368,"column":0},"generated":{"line":8370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8369,"column":0},"generated":{"line":8371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8370,"column":0},"generated":{"line":8372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8371,"column":0},"generated":{"line":8373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8372,"column":0},"generated":{"line":8374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8373,"column":0},"generated":{"line":8375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8374,"column":0},"generated":{"line":8376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8375,"column":0},"generated":{"line":8377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8376,"column":0},"generated":{"line":8378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8377,"column":0},"generated":{"line":8379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8378,"column":0},"generated":{"line":8380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8379,"column":0},"generated":{"line":8381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8380,"column":0},"generated":{"line":8382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8381,"column":0},"generated":{"line":8383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8382,"column":0},"generated":{"line":8384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8383,"column":0},"generated":{"line":8385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8384,"column":0},"generated":{"line":8386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8385,"column":0},"generated":{"line":8387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8386,"column":0},"generated":{"line":8388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8387,"column":0},"generated":{"line":8389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8388,"column":0},"generated":{"line":8390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8389,"column":0},"generated":{"line":8391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8390,"column":0},"generated":{"line":8392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8391,"column":0},"generated":{"line":8393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8392,"column":0},"generated":{"line":8394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8393,"column":0},"generated":{"line":8395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8394,"column":0},"generated":{"line":8396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8395,"column":0},"generated":{"line":8397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8396,"column":0},"generated":{"line":8398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8397,"column":0},"generated":{"line":8399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8398,"column":0},"generated":{"line":8400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8399,"column":0},"generated":{"line":8401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8400,"column":0},"generated":{"line":8402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8401,"column":0},"generated":{"line":8403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8402,"column":0},"generated":{"line":8404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8403,"column":0},"generated":{"line":8405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8404,"column":0},"generated":{"line":8406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8405,"column":0},"generated":{"line":8407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8406,"column":0},"generated":{"line":8408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8407,"column":0},"generated":{"line":8409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8408,"column":0},"generated":{"line":8410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8409,"column":0},"generated":{"line":8411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8410,"column":0},"generated":{"line":8412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8411,"column":0},"generated":{"line":8413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8412,"column":0},"generated":{"line":8414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8413,"column":0},"generated":{"line":8415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8414,"column":0},"generated":{"line":8416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8415,"column":0},"generated":{"line":8417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8416,"column":0},"generated":{"line":8418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8417,"column":0},"generated":{"line":8419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8418,"column":0},"generated":{"line":8420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8419,"column":0},"generated":{"line":8421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8420,"column":0},"generated":{"line":8422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8421,"column":0},"generated":{"line":8423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8422,"column":0},"generated":{"line":8424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8423,"column":0},"generated":{"line":8425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8424,"column":0},"generated":{"line":8426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8425,"column":0},"generated":{"line":8427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8426,"column":0},"generated":{"line":8428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8427,"column":0},"generated":{"line":8429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8428,"column":0},"generated":{"line":8430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8429,"column":0},"generated":{"line":8431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8430,"column":0},"generated":{"line":8432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8431,"column":0},"generated":{"line":8433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8432,"column":0},"generated":{"line":8434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8433,"column":0},"generated":{"line":8435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8434,"column":0},"generated":{"line":8436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8435,"column":0},"generated":{"line":8437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8436,"column":0},"generated":{"line":8438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8437,"column":0},"generated":{"line":8439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8438,"column":0},"generated":{"line":8440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8439,"column":0},"generated":{"line":8441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8440,"column":0},"generated":{"line":8442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8441,"column":0},"generated":{"line":8443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8442,"column":0},"generated":{"line":8444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8443,"column":0},"generated":{"line":8445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8444,"column":0},"generated":{"line":8446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8445,"column":0},"generated":{"line":8447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8446,"column":0},"generated":{"line":8448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8447,"column":0},"generated":{"line":8449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8448,"column":0},"generated":{"line":8450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8449,"column":0},"generated":{"line":8451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8450,"column":0},"generated":{"line":8452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8451,"column":0},"generated":{"line":8453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8452,"column":0},"generated":{"line":8454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8453,"column":0},"generated":{"line":8455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8454,"column":0},"generated":{"line":8456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8455,"column":0},"generated":{"line":8457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8456,"column":0},"generated":{"line":8458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8457,"column":0},"generated":{"line":8459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8458,"column":0},"generated":{"line":8460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8459,"column":0},"generated":{"line":8461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8460,"column":0},"generated":{"line":8462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8461,"column":0},"generated":{"line":8463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8462,"column":0},"generated":{"line":8464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8463,"column":0},"generated":{"line":8465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8464,"column":0},"generated":{"line":8466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8465,"column":0},"generated":{"line":8467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8466,"column":0},"generated":{"line":8468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8467,"column":0},"generated":{"line":8469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8468,"column":0},"generated":{"line":8470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8469,"column":0},"generated":{"line":8471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8470,"column":0},"generated":{"line":8472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8471,"column":0},"generated":{"line":8473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8472,"column":0},"generated":{"line":8474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8473,"column":0},"generated":{"line":8475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8474,"column":0},"generated":{"line":8476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8475,"column":0},"generated":{"line":8477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8476,"column":0},"generated":{"line":8478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8477,"column":0},"generated":{"line":8479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8478,"column":0},"generated":{"line":8480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8479,"column":0},"generated":{"line":8481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8480,"column":0},"generated":{"line":8482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8481,"column":0},"generated":{"line":8483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8482,"column":0},"generated":{"line":8484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8483,"column":0},"generated":{"line":8485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8484,"column":0},"generated":{"line":8486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8485,"column":0},"generated":{"line":8487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8486,"column":0},"generated":{"line":8488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8487,"column":0},"generated":{"line":8489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8488,"column":0},"generated":{"line":8490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8489,"column":0},"generated":{"line":8491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8490,"column":0},"generated":{"line":8492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8491,"column":0},"generated":{"line":8493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8492,"column":0},"generated":{"line":8494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8493,"column":0},"generated":{"line":8495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8494,"column":0},"generated":{"line":8496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8495,"column":0},"generated":{"line":8497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8496,"column":0},"generated":{"line":8498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8497,"column":0},"generated":{"line":8499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8498,"column":0},"generated":{"line":8500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8499,"column":0},"generated":{"line":8501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8500,"column":0},"generated":{"line":8502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8501,"column":0},"generated":{"line":8503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8502,"column":0},"generated":{"line":8504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8503,"column":0},"generated":{"line":8505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8504,"column":0},"generated":{"line":8506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8505,"column":0},"generated":{"line":8507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8506,"column":0},"generated":{"line":8508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8507,"column":0},"generated":{"line":8509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8508,"column":0},"generated":{"line":8510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8509,"column":0},"generated":{"line":8511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8510,"column":0},"generated":{"line":8512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8511,"column":0},"generated":{"line":8513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8512,"column":0},"generated":{"line":8514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8513,"column":0},"generated":{"line":8515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8514,"column":0},"generated":{"line":8516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8515,"column":0},"generated":{"line":8517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8516,"column":0},"generated":{"line":8518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8517,"column":0},"generated":{"line":8519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8518,"column":0},"generated":{"line":8520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8519,"column":0},"generated":{"line":8521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8520,"column":0},"generated":{"line":8522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8521,"column":0},"generated":{"line":8523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8522,"column":0},"generated":{"line":8524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8523,"column":0},"generated":{"line":8525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8524,"column":0},"generated":{"line":8526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8525,"column":0},"generated":{"line":8527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8526,"column":0},"generated":{"line":8528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8527,"column":0},"generated":{"line":8529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8528,"column":0},"generated":{"line":8530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8529,"column":0},"generated":{"line":8531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8530,"column":0},"generated":{"line":8532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8531,"column":0},"generated":{"line":8533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8532,"column":0},"generated":{"line":8534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8533,"column":0},"generated":{"line":8535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8534,"column":0},"generated":{"line":8536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8535,"column":0},"generated":{"line":8537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8536,"column":0},"generated":{"line":8538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8537,"column":0},"generated":{"line":8539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8538,"column":0},"generated":{"line":8540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8539,"column":0},"generated":{"line":8541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8540,"column":0},"generated":{"line":8542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8541,"column":0},"generated":{"line":8543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8542,"column":0},"generated":{"line":8544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8543,"column":0},"generated":{"line":8545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8544,"column":0},"generated":{"line":8546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8545,"column":0},"generated":{"line":8547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8546,"column":0},"generated":{"line":8548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8547,"column":0},"generated":{"line":8549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8548,"column":0},"generated":{"line":8550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8549,"column":0},"generated":{"line":8551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8550,"column":0},"generated":{"line":8552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8551,"column":0},"generated":{"line":8553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8552,"column":0},"generated":{"line":8554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8553,"column":0},"generated":{"line":8555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8554,"column":0},"generated":{"line":8556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8555,"column":0},"generated":{"line":8557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8556,"column":0},"generated":{"line":8558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8557,"column":0},"generated":{"line":8559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8558,"column":0},"generated":{"line":8560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8559,"column":0},"generated":{"line":8561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8560,"column":0},"generated":{"line":8562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8561,"column":0},"generated":{"line":8563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8562,"column":0},"generated":{"line":8564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8563,"column":0},"generated":{"line":8565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8564,"column":0},"generated":{"line":8566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8565,"column":0},"generated":{"line":8567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8566,"column":0},"generated":{"line":8568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8567,"column":0},"generated":{"line":8569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8568,"column":0},"generated":{"line":8570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8569,"column":0},"generated":{"line":8571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8570,"column":0},"generated":{"line":8572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8571,"column":0},"generated":{"line":8573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8572,"column":0},"generated":{"line":8574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8573,"column":0},"generated":{"line":8575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8574,"column":0},"generated":{"line":8576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8575,"column":0},"generated":{"line":8577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8576,"column":0},"generated":{"line":8578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8577,"column":0},"generated":{"line":8579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8578,"column":0},"generated":{"line":8580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8579,"column":0},"generated":{"line":8581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8580,"column":0},"generated":{"line":8582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8581,"column":0},"generated":{"line":8583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8582,"column":0},"generated":{"line":8584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8583,"column":0},"generated":{"line":8585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8584,"column":0},"generated":{"line":8586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8585,"column":0},"generated":{"line":8587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8586,"column":0},"generated":{"line":8588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8587,"column":0},"generated":{"line":8589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8588,"column":0},"generated":{"line":8590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8589,"column":0},"generated":{"line":8591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8590,"column":0},"generated":{"line":8592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8591,"column":0},"generated":{"line":8593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8592,"column":0},"generated":{"line":8594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8593,"column":0},"generated":{"line":8595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8594,"column":0},"generated":{"line":8596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8595,"column":0},"generated":{"line":8597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8596,"column":0},"generated":{"line":8598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8597,"column":0},"generated":{"line":8599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8598,"column":0},"generated":{"line":8600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8599,"column":0},"generated":{"line":8601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8600,"column":0},"generated":{"line":8602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8601,"column":0},"generated":{"line":8603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8602,"column":0},"generated":{"line":8604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8603,"column":0},"generated":{"line":8605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8604,"column":0},"generated":{"line":8606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8605,"column":0},"generated":{"line":8607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8606,"column":0},"generated":{"line":8608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8607,"column":0},"generated":{"line":8609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8608,"column":0},"generated":{"line":8610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8609,"column":0},"generated":{"line":8611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8610,"column":0},"generated":{"line":8612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8611,"column":0},"generated":{"line":8613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8612,"column":0},"generated":{"line":8614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8613,"column":0},"generated":{"line":8615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8614,"column":0},"generated":{"line":8616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8615,"column":0},"generated":{"line":8617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8616,"column":0},"generated":{"line":8618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8617,"column":0},"generated":{"line":8619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8618,"column":0},"generated":{"line":8620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8619,"column":0},"generated":{"line":8621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8620,"column":0},"generated":{"line":8622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8621,"column":0},"generated":{"line":8623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8622,"column":0},"generated":{"line":8624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8623,"column":0},"generated":{"line":8625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8624,"column":0},"generated":{"line":8626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8625,"column":0},"generated":{"line":8627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8626,"column":0},"generated":{"line":8628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8627,"column":0},"generated":{"line":8629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8628,"column":0},"generated":{"line":8630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8629,"column":0},"generated":{"line":8631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8630,"column":0},"generated":{"line":8632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8631,"column":0},"generated":{"line":8633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8632,"column":0},"generated":{"line":8634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8633,"column":0},"generated":{"line":8635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8634,"column":0},"generated":{"line":8636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8635,"column":0},"generated":{"line":8637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8636,"column":0},"generated":{"line":8638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8637,"column":0},"generated":{"line":8639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8638,"column":0},"generated":{"line":8640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8639,"column":0},"generated":{"line":8641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8640,"column":0},"generated":{"line":8642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8641,"column":0},"generated":{"line":8643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8642,"column":0},"generated":{"line":8644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8643,"column":0},"generated":{"line":8645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8644,"column":0},"generated":{"line":8646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8645,"column":0},"generated":{"line":8647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8646,"column":0},"generated":{"line":8648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8647,"column":0},"generated":{"line":8649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8648,"column":0},"generated":{"line":8650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8649,"column":0},"generated":{"line":8651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8650,"column":0},"generated":{"line":8652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8651,"column":0},"generated":{"line":8653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8652,"column":0},"generated":{"line":8654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8653,"column":0},"generated":{"line":8655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8654,"column":0},"generated":{"line":8656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8655,"column":0},"generated":{"line":8657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8656,"column":0},"generated":{"line":8658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8657,"column":0},"generated":{"line":8659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8658,"column":0},"generated":{"line":8660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8659,"column":0},"generated":{"line":8661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8660,"column":0},"generated":{"line":8662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8661,"column":0},"generated":{"line":8663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8662,"column":0},"generated":{"line":8664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8663,"column":0},"generated":{"line":8665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8664,"column":0},"generated":{"line":8666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8665,"column":0},"generated":{"line":8667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8666,"column":0},"generated":{"line":8668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8667,"column":0},"generated":{"line":8669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8668,"column":0},"generated":{"line":8670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8669,"column":0},"generated":{"line":8671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8670,"column":0},"generated":{"line":8672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8671,"column":0},"generated":{"line":8673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8672,"column":0},"generated":{"line":8674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8673,"column":0},"generated":{"line":8675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8674,"column":0},"generated":{"line":8676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8675,"column":0},"generated":{"line":8677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8676,"column":0},"generated":{"line":8678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8677,"column":0},"generated":{"line":8679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8678,"column":0},"generated":{"line":8680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8679,"column":0},"generated":{"line":8681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8680,"column":0},"generated":{"line":8682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8681,"column":0},"generated":{"line":8683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8682,"column":0},"generated":{"line":8684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8683,"column":0},"generated":{"line":8685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8684,"column":0},"generated":{"line":8686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8685,"column":0},"generated":{"line":8687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8686,"column":0},"generated":{"line":8688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8687,"column":0},"generated":{"line":8689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8688,"column":0},"generated":{"line":8690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8689,"column":0},"generated":{"line":8691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8690,"column":0},"generated":{"line":8692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8691,"column":0},"generated":{"line":8693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8692,"column":0},"generated":{"line":8694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8693,"column":0},"generated":{"line":8695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8694,"column":0},"generated":{"line":8696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8695,"column":0},"generated":{"line":8697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8696,"column":0},"generated":{"line":8698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8697,"column":0},"generated":{"line":8699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8698,"column":0},"generated":{"line":8700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8699,"column":0},"generated":{"line":8701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8700,"column":0},"generated":{"line":8702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8701,"column":0},"generated":{"line":8703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8702,"column":0},"generated":{"line":8704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8703,"column":0},"generated":{"line":8705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8704,"column":0},"generated":{"line":8706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8705,"column":0},"generated":{"line":8707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8706,"column":0},"generated":{"line":8708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8707,"column":0},"generated":{"line":8709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8708,"column":0},"generated":{"line":8710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8709,"column":0},"generated":{"line":8711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8710,"column":0},"generated":{"line":8712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8711,"column":0},"generated":{"line":8713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8712,"column":0},"generated":{"line":8714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8713,"column":0},"generated":{"line":8715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8714,"column":0},"generated":{"line":8716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8715,"column":0},"generated":{"line":8717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8716,"column":0},"generated":{"line":8718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8717,"column":0},"generated":{"line":8719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8718,"column":0},"generated":{"line":8720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8719,"column":0},"generated":{"line":8721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8720,"column":0},"generated":{"line":8722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8721,"column":0},"generated":{"line":8723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8722,"column":0},"generated":{"line":8724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8723,"column":0},"generated":{"line":8725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8724,"column":0},"generated":{"line":8726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8725,"column":0},"generated":{"line":8727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8726,"column":0},"generated":{"line":8728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8727,"column":0},"generated":{"line":8729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8728,"column":0},"generated":{"line":8730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8729,"column":0},"generated":{"line":8731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8730,"column":0},"generated":{"line":8732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8731,"column":0},"generated":{"line":8733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8732,"column":0},"generated":{"line":8734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8733,"column":0},"generated":{"line":8735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8734,"column":0},"generated":{"line":8736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8735,"column":0},"generated":{"line":8737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8736,"column":0},"generated":{"line":8738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8737,"column":0},"generated":{"line":8739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8738,"column":0},"generated":{"line":8740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8739,"column":0},"generated":{"line":8741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8740,"column":0},"generated":{"line":8742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8741,"column":0},"generated":{"line":8743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8742,"column":0},"generated":{"line":8744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8743,"column":0},"generated":{"line":8745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8744,"column":0},"generated":{"line":8746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8745,"column":0},"generated":{"line":8747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8746,"column":0},"generated":{"line":8748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8747,"column":0},"generated":{"line":8749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8748,"column":0},"generated":{"line":8750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8749,"column":0},"generated":{"line":8751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8750,"column":0},"generated":{"line":8752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8751,"column":0},"generated":{"line":8753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8752,"column":0},"generated":{"line":8754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8753,"column":0},"generated":{"line":8755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8754,"column":0},"generated":{"line":8756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8755,"column":0},"generated":{"line":8757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8756,"column":0},"generated":{"line":8758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8757,"column":0},"generated":{"line":8759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8758,"column":0},"generated":{"line":8760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8759,"column":0},"generated":{"line":8761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8760,"column":0},"generated":{"line":8762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8761,"column":0},"generated":{"line":8763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8762,"column":0},"generated":{"line":8764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8763,"column":0},"generated":{"line":8765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8764,"column":0},"generated":{"line":8766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8765,"column":0},"generated":{"line":8767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8766,"column":0},"generated":{"line":8768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8767,"column":0},"generated":{"line":8769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8768,"column":0},"generated":{"line":8770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8769,"column":0},"generated":{"line":8771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8770,"column":0},"generated":{"line":8772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8771,"column":0},"generated":{"line":8773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8772,"column":0},"generated":{"line":8774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8773,"column":0},"generated":{"line":8775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8774,"column":0},"generated":{"line":8776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8775,"column":0},"generated":{"line":8777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8776,"column":0},"generated":{"line":8778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8777,"column":0},"generated":{"line":8779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8778,"column":0},"generated":{"line":8780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8779,"column":0},"generated":{"line":8781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8780,"column":0},"generated":{"line":8782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8781,"column":0},"generated":{"line":8783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8782,"column":0},"generated":{"line":8784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8783,"column":0},"generated":{"line":8785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8784,"column":0},"generated":{"line":8786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8785,"column":0},"generated":{"line":8787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8786,"column":0},"generated":{"line":8788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8787,"column":0},"generated":{"line":8789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8788,"column":0},"generated":{"line":8790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8789,"column":0},"generated":{"line":8791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8790,"column":0},"generated":{"line":8792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8791,"column":0},"generated":{"line":8793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8792,"column":0},"generated":{"line":8794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8793,"column":0},"generated":{"line":8795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8794,"column":0},"generated":{"line":8796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8795,"column":0},"generated":{"line":8797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8796,"column":0},"generated":{"line":8798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8797,"column":0},"generated":{"line":8799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8798,"column":0},"generated":{"line":8800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8799,"column":0},"generated":{"line":8801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8800,"column":0},"generated":{"line":8802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8801,"column":0},"generated":{"line":8803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8802,"column":0},"generated":{"line":8804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8803,"column":0},"generated":{"line":8805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8804,"column":0},"generated":{"line":8806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8805,"column":0},"generated":{"line":8807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8806,"column":0},"generated":{"line":8808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8807,"column":0},"generated":{"line":8809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8808,"column":0},"generated":{"line":8810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8809,"column":0},"generated":{"line":8811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8810,"column":0},"generated":{"line":8812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8811,"column":0},"generated":{"line":8813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8812,"column":0},"generated":{"line":8814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8813,"column":0},"generated":{"line":8815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8814,"column":0},"generated":{"line":8816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8815,"column":0},"generated":{"line":8817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8816,"column":0},"generated":{"line":8818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8817,"column":0},"generated":{"line":8819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8818,"column":0},"generated":{"line":8820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8819,"column":0},"generated":{"line":8821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8820,"column":0},"generated":{"line":8822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8821,"column":0},"generated":{"line":8823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8822,"column":0},"generated":{"line":8824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8823,"column":0},"generated":{"line":8825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8824,"column":0},"generated":{"line":8826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8825,"column":0},"generated":{"line":8827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8826,"column":0},"generated":{"line":8828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8827,"column":0},"generated":{"line":8829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8828,"column":0},"generated":{"line":8830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8829,"column":0},"generated":{"line":8831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8830,"column":0},"generated":{"line":8832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8831,"column":0},"generated":{"line":8833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8832,"column":0},"generated":{"line":8834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8833,"column":0},"generated":{"line":8835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8834,"column":0},"generated":{"line":8836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8835,"column":0},"generated":{"line":8837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8836,"column":0},"generated":{"line":8838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8837,"column":0},"generated":{"line":8839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8838,"column":0},"generated":{"line":8840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8839,"column":0},"generated":{"line":8841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8840,"column":0},"generated":{"line":8842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8841,"column":0},"generated":{"line":8843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8842,"column":0},"generated":{"line":8844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8843,"column":0},"generated":{"line":8845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8844,"column":0},"generated":{"line":8846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8845,"column":0},"generated":{"line":8847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8846,"column":0},"generated":{"line":8848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8847,"column":0},"generated":{"line":8849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8848,"column":0},"generated":{"line":8850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8849,"column":0},"generated":{"line":8851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8850,"column":0},"generated":{"line":8852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8851,"column":0},"generated":{"line":8853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8852,"column":0},"generated":{"line":8854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8853,"column":0},"generated":{"line":8855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8854,"column":0},"generated":{"line":8856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8855,"column":0},"generated":{"line":8857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8856,"column":0},"generated":{"line":8858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8857,"column":0},"generated":{"line":8859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8858,"column":0},"generated":{"line":8860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8859,"column":0},"generated":{"line":8861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8860,"column":0},"generated":{"line":8862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8861,"column":0},"generated":{"line":8863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8862,"column":0},"generated":{"line":8864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8863,"column":0},"generated":{"line":8865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8864,"column":0},"generated":{"line":8866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8865,"column":0},"generated":{"line":8867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8866,"column":0},"generated":{"line":8868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8867,"column":0},"generated":{"line":8869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8868,"column":0},"generated":{"line":8870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8869,"column":0},"generated":{"line":8871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8870,"column":0},"generated":{"line":8872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8871,"column":0},"generated":{"line":8873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8872,"column":0},"generated":{"line":8874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8873,"column":0},"generated":{"line":8875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8874,"column":0},"generated":{"line":8876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8875,"column":0},"generated":{"line":8877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8876,"column":0},"generated":{"line":8878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8877,"column":0},"generated":{"line":8879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8878,"column":0},"generated":{"line":8880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8879,"column":0},"generated":{"line":8881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8880,"column":0},"generated":{"line":8882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8881,"column":0},"generated":{"line":8883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8882,"column":0},"generated":{"line":8884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8883,"column":0},"generated":{"line":8885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8884,"column":0},"generated":{"line":8886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8885,"column":0},"generated":{"line":8887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8886,"column":0},"generated":{"line":8888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8887,"column":0},"generated":{"line":8889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8888,"column":0},"generated":{"line":8890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8889,"column":0},"generated":{"line":8891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8890,"column":0},"generated":{"line":8892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8891,"column":0},"generated":{"line":8893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8892,"column":0},"generated":{"line":8894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8893,"column":0},"generated":{"line":8895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8894,"column":0},"generated":{"line":8896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8895,"column":0},"generated":{"line":8897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8896,"column":0},"generated":{"line":8898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8897,"column":0},"generated":{"line":8899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8898,"column":0},"generated":{"line":8900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8899,"column":0},"generated":{"line":8901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8900,"column":0},"generated":{"line":8902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8901,"column":0},"generated":{"line":8903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8902,"column":0},"generated":{"line":8904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8903,"column":0},"generated":{"line":8905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8904,"column":0},"generated":{"line":8906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8905,"column":0},"generated":{"line":8907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8906,"column":0},"generated":{"line":8908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8907,"column":0},"generated":{"line":8909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8908,"column":0},"generated":{"line":8910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8909,"column":0},"generated":{"line":8911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8910,"column":0},"generated":{"line":8912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8911,"column":0},"generated":{"line":8913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8912,"column":0},"generated":{"line":8914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8913,"column":0},"generated":{"line":8915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8914,"column":0},"generated":{"line":8916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8915,"column":0},"generated":{"line":8917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8916,"column":0},"generated":{"line":8918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8917,"column":0},"generated":{"line":8919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8918,"column":0},"generated":{"line":8920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8919,"column":0},"generated":{"line":8921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8920,"column":0},"generated":{"line":8922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8921,"column":0},"generated":{"line":8923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8922,"column":0},"generated":{"line":8924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8923,"column":0},"generated":{"line":8925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8924,"column":0},"generated":{"line":8926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8925,"column":0},"generated":{"line":8927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8926,"column":0},"generated":{"line":8928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8927,"column":0},"generated":{"line":8929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8928,"column":0},"generated":{"line":8930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8929,"column":0},"generated":{"line":8931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8930,"column":0},"generated":{"line":8932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8931,"column":0},"generated":{"line":8933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8932,"column":0},"generated":{"line":8934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8933,"column":0},"generated":{"line":8935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8934,"column":0},"generated":{"line":8936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8935,"column":0},"generated":{"line":8937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8936,"column":0},"generated":{"line":8938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8937,"column":0},"generated":{"line":8939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8938,"column":0},"generated":{"line":8940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8939,"column":0},"generated":{"line":8941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8940,"column":0},"generated":{"line":8942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8941,"column":0},"generated":{"line":8943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8942,"column":0},"generated":{"line":8944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8943,"column":0},"generated":{"line":8945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8944,"column":0},"generated":{"line":8946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8945,"column":0},"generated":{"line":8947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8946,"column":0},"generated":{"line":8948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8947,"column":0},"generated":{"line":8949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8948,"column":0},"generated":{"line":8950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8949,"column":0},"generated":{"line":8951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8950,"column":0},"generated":{"line":8952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8951,"column":0},"generated":{"line":8953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8952,"column":0},"generated":{"line":8954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8953,"column":0},"generated":{"line":8955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8954,"column":0},"generated":{"line":8956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8955,"column":0},"generated":{"line":8957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8956,"column":0},"generated":{"line":8958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8957,"column":0},"generated":{"line":8959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8958,"column":0},"generated":{"line":8960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8959,"column":0},"generated":{"line":8961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8960,"column":0},"generated":{"line":8962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8961,"column":0},"generated":{"line":8963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8962,"column":0},"generated":{"line":8964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8963,"column":0},"generated":{"line":8965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8964,"column":0},"generated":{"line":8966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8965,"column":0},"generated":{"line":8967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8966,"column":0},"generated":{"line":8968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8967,"column":0},"generated":{"line":8969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8968,"column":0},"generated":{"line":8970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8969,"column":0},"generated":{"line":8971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8970,"column":0},"generated":{"line":8972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8971,"column":0},"generated":{"line":8973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8972,"column":0},"generated":{"line":8974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8973,"column":0},"generated":{"line":8975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8974,"column":0},"generated":{"line":8976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8975,"column":0},"generated":{"line":8977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8976,"column":0},"generated":{"line":8978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8977,"column":0},"generated":{"line":8979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8978,"column":0},"generated":{"line":8980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8979,"column":0},"generated":{"line":8981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8980,"column":0},"generated":{"line":8982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8981,"column":0},"generated":{"line":8983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8982,"column":0},"generated":{"line":8984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8983,"column":0},"generated":{"line":8985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8984,"column":0},"generated":{"line":8986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8985,"column":0},"generated":{"line":8987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8986,"column":0},"generated":{"line":8988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8987,"column":0},"generated":{"line":8989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8988,"column":0},"generated":{"line":8990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8989,"column":0},"generated":{"line":8991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8990,"column":0},"generated":{"line":8992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8991,"column":0},"generated":{"line":8993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8992,"column":0},"generated":{"line":8994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8993,"column":0},"generated":{"line":8995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8994,"column":0},"generated":{"line":8996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8995,"column":0},"generated":{"line":8997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8996,"column":0},"generated":{"line":8998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8997,"column":0},"generated":{"line":8999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8998,"column":0},"generated":{"line":9000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":8999,"column":0},"generated":{"line":9001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9000,"column":0},"generated":{"line":9002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9001,"column":0},"generated":{"line":9003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9002,"column":0},"generated":{"line":9004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9003,"column":0},"generated":{"line":9005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9004,"column":0},"generated":{"line":9006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9005,"column":0},"generated":{"line":9007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9006,"column":0},"generated":{"line":9008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9007,"column":0},"generated":{"line":9009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9008,"column":0},"generated":{"line":9010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9009,"column":0},"generated":{"line":9011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9010,"column":0},"generated":{"line":9012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9011,"column":0},"generated":{"line":9013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9012,"column":0},"generated":{"line":9014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9013,"column":0},"generated":{"line":9015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9014,"column":0},"generated":{"line":9016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9015,"column":0},"generated":{"line":9017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9016,"column":0},"generated":{"line":9018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9017,"column":0},"generated":{"line":9019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9018,"column":0},"generated":{"line":9020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9019,"column":0},"generated":{"line":9021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9020,"column":0},"generated":{"line":9022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9021,"column":0},"generated":{"line":9023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9022,"column":0},"generated":{"line":9024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9023,"column":0},"generated":{"line":9025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9024,"column":0},"generated":{"line":9026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9025,"column":0},"generated":{"line":9027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9026,"column":0},"generated":{"line":9028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9027,"column":0},"generated":{"line":9029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9028,"column":0},"generated":{"line":9030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9029,"column":0},"generated":{"line":9031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9030,"column":0},"generated":{"line":9032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9031,"column":0},"generated":{"line":9033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9032,"column":0},"generated":{"line":9034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9033,"column":0},"generated":{"line":9035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9034,"column":0},"generated":{"line":9036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9035,"column":0},"generated":{"line":9037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9036,"column":0},"generated":{"line":9038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9037,"column":0},"generated":{"line":9039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9038,"column":0},"generated":{"line":9040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9039,"column":0},"generated":{"line":9041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9040,"column":0},"generated":{"line":9042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9041,"column":0},"generated":{"line":9043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9042,"column":0},"generated":{"line":9044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9043,"column":0},"generated":{"line":9045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9044,"column":0},"generated":{"line":9046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9045,"column":0},"generated":{"line":9047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9046,"column":0},"generated":{"line":9048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9047,"column":0},"generated":{"line":9049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9048,"column":0},"generated":{"line":9050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9049,"column":0},"generated":{"line":9051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9050,"column":0},"generated":{"line":9052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9051,"column":0},"generated":{"line":9053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9052,"column":0},"generated":{"line":9054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9053,"column":0},"generated":{"line":9055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9054,"column":0},"generated":{"line":9056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9055,"column":0},"generated":{"line":9057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9056,"column":0},"generated":{"line":9058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9057,"column":0},"generated":{"line":9059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9058,"column":0},"generated":{"line":9060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9059,"column":0},"generated":{"line":9061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9060,"column":0},"generated":{"line":9062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9061,"column":0},"generated":{"line":9063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9062,"column":0},"generated":{"line":9064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9063,"column":0},"generated":{"line":9065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9064,"column":0},"generated":{"line":9066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9065,"column":0},"generated":{"line":9067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9066,"column":0},"generated":{"line":9068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9067,"column":0},"generated":{"line":9069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9068,"column":0},"generated":{"line":9070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9069,"column":0},"generated":{"line":9071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9070,"column":0},"generated":{"line":9072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9071,"column":0},"generated":{"line":9073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9072,"column":0},"generated":{"line":9074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9073,"column":0},"generated":{"line":9075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9074,"column":0},"generated":{"line":9076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9075,"column":0},"generated":{"line":9077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9076,"column":0},"generated":{"line":9078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9077,"column":0},"generated":{"line":9079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9078,"column":0},"generated":{"line":9080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9079,"column":0},"generated":{"line":9081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9080,"column":0},"generated":{"line":9082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9081,"column":0},"generated":{"line":9083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9082,"column":0},"generated":{"line":9084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9083,"column":0},"generated":{"line":9085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9084,"column":0},"generated":{"line":9086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9085,"column":0},"generated":{"line":9087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9086,"column":0},"generated":{"line":9088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9087,"column":0},"generated":{"line":9089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9088,"column":0},"generated":{"line":9090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9089,"column":0},"generated":{"line":9091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9090,"column":0},"generated":{"line":9092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9091,"column":0},"generated":{"line":9093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9092,"column":0},"generated":{"line":9094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9093,"column":0},"generated":{"line":9095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9094,"column":0},"generated":{"line":9096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9095,"column":0},"generated":{"line":9097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9096,"column":0},"generated":{"line":9098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9097,"column":0},"generated":{"line":9099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9098,"column":0},"generated":{"line":9100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9099,"column":0},"generated":{"line":9101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9100,"column":0},"generated":{"line":9102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9101,"column":0},"generated":{"line":9103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9102,"column":0},"generated":{"line":9104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9103,"column":0},"generated":{"line":9105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9104,"column":0},"generated":{"line":9106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9105,"column":0},"generated":{"line":9107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9106,"column":0},"generated":{"line":9108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9107,"column":0},"generated":{"line":9109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9108,"column":0},"generated":{"line":9110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9109,"column":0},"generated":{"line":9111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9110,"column":0},"generated":{"line":9112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9111,"column":0},"generated":{"line":9113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9112,"column":0},"generated":{"line":9114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9113,"column":0},"generated":{"line":9115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9114,"column":0},"generated":{"line":9116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9115,"column":0},"generated":{"line":9117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9116,"column":0},"generated":{"line":9118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9117,"column":0},"generated":{"line":9119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9118,"column":0},"generated":{"line":9120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9119,"column":0},"generated":{"line":9121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9120,"column":0},"generated":{"line":9122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9121,"column":0},"generated":{"line":9123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9122,"column":0},"generated":{"line":9124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9123,"column":0},"generated":{"line":9125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9124,"column":0},"generated":{"line":9126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9125,"column":0},"generated":{"line":9127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9126,"column":0},"generated":{"line":9128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9127,"column":0},"generated":{"line":9129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9128,"column":0},"generated":{"line":9130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9129,"column":0},"generated":{"line":9131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9130,"column":0},"generated":{"line":9132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9131,"column":0},"generated":{"line":9133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9132,"column":0},"generated":{"line":9134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9133,"column":0},"generated":{"line":9135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9134,"column":0},"generated":{"line":9136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9135,"column":0},"generated":{"line":9137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9136,"column":0},"generated":{"line":9138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9137,"column":0},"generated":{"line":9139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9138,"column":0},"generated":{"line":9140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9139,"column":0},"generated":{"line":9141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9140,"column":0},"generated":{"line":9142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9141,"column":0},"generated":{"line":9143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9142,"column":0},"generated":{"line":9144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9143,"column":0},"generated":{"line":9145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9144,"column":0},"generated":{"line":9146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9145,"column":0},"generated":{"line":9147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9146,"column":0},"generated":{"line":9148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9147,"column":0},"generated":{"line":9149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9148,"column":0},"generated":{"line":9150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9149,"column":0},"generated":{"line":9151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9150,"column":0},"generated":{"line":9152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9151,"column":0},"generated":{"line":9153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9152,"column":0},"generated":{"line":9154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9153,"column":0},"generated":{"line":9155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9154,"column":0},"generated":{"line":9156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9155,"column":0},"generated":{"line":9157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9156,"column":0},"generated":{"line":9158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9157,"column":0},"generated":{"line":9159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9158,"column":0},"generated":{"line":9160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9159,"column":0},"generated":{"line":9161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9160,"column":0},"generated":{"line":9162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9161,"column":0},"generated":{"line":9163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9162,"column":0},"generated":{"line":9164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9163,"column":0},"generated":{"line":9165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9164,"column":0},"generated":{"line":9166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9165,"column":0},"generated":{"line":9167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9166,"column":0},"generated":{"line":9168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9167,"column":0},"generated":{"line":9169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9168,"column":0},"generated":{"line":9170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9169,"column":0},"generated":{"line":9171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9170,"column":0},"generated":{"line":9172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9171,"column":0},"generated":{"line":9173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9172,"column":0},"generated":{"line":9174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9173,"column":0},"generated":{"line":9175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9174,"column":0},"generated":{"line":9176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9175,"column":0},"generated":{"line":9177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9176,"column":0},"generated":{"line":9178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9177,"column":0},"generated":{"line":9179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9178,"column":0},"generated":{"line":9180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9179,"column":0},"generated":{"line":9181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9180,"column":0},"generated":{"line":9182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9181,"column":0},"generated":{"line":9183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9182,"column":0},"generated":{"line":9184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9183,"column":0},"generated":{"line":9185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9184,"column":0},"generated":{"line":9186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9185,"column":0},"generated":{"line":9187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9186,"column":0},"generated":{"line":9188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9187,"column":0},"generated":{"line":9189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9188,"column":0},"generated":{"line":9190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9189,"column":0},"generated":{"line":9191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9190,"column":0},"generated":{"line":9192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9191,"column":0},"generated":{"line":9193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9192,"column":0},"generated":{"line":9194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9193,"column":0},"generated":{"line":9195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9194,"column":0},"generated":{"line":9196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9195,"column":0},"generated":{"line":9197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9196,"column":0},"generated":{"line":9198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9197,"column":0},"generated":{"line":9199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9198,"column":0},"generated":{"line":9200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9199,"column":0},"generated":{"line":9201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9200,"column":0},"generated":{"line":9202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9201,"column":0},"generated":{"line":9203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9202,"column":0},"generated":{"line":9204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9203,"column":0},"generated":{"line":9205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9204,"column":0},"generated":{"line":9206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9205,"column":0},"generated":{"line":9207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9206,"column":0},"generated":{"line":9208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9207,"column":0},"generated":{"line":9209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9208,"column":0},"generated":{"line":9210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9209,"column":0},"generated":{"line":9211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9210,"column":0},"generated":{"line":9212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9211,"column":0},"generated":{"line":9213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9212,"column":0},"generated":{"line":9214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9213,"column":0},"generated":{"line":9215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9214,"column":0},"generated":{"line":9216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9215,"column":0},"generated":{"line":9217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9216,"column":0},"generated":{"line":9218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9217,"column":0},"generated":{"line":9219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9218,"column":0},"generated":{"line":9220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9219,"column":0},"generated":{"line":9221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9220,"column":0},"generated":{"line":9222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9221,"column":0},"generated":{"line":9223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9222,"column":0},"generated":{"line":9224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9223,"column":0},"generated":{"line":9225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9224,"column":0},"generated":{"line":9226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9225,"column":0},"generated":{"line":9227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9226,"column":0},"generated":{"line":9228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9227,"column":0},"generated":{"line":9229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9228,"column":0},"generated":{"line":9230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9229,"column":0},"generated":{"line":9231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9230,"column":0},"generated":{"line":9232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9231,"column":0},"generated":{"line":9233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9232,"column":0},"generated":{"line":9234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9233,"column":0},"generated":{"line":9235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9234,"column":0},"generated":{"line":9236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9235,"column":0},"generated":{"line":9237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9236,"column":0},"generated":{"line":9238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9237,"column":0},"generated":{"line":9239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9238,"column":0},"generated":{"line":9240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9239,"column":0},"generated":{"line":9241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9240,"column":0},"generated":{"line":9242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9241,"column":0},"generated":{"line":9243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9242,"column":0},"generated":{"line":9244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9243,"column":0},"generated":{"line":9245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9244,"column":0},"generated":{"line":9246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9245,"column":0},"generated":{"line":9247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9246,"column":0},"generated":{"line":9248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9247,"column":0},"generated":{"line":9249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9248,"column":0},"generated":{"line":9250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9249,"column":0},"generated":{"line":9251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9250,"column":0},"generated":{"line":9252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9251,"column":0},"generated":{"line":9253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9252,"column":0},"generated":{"line":9254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9253,"column":0},"generated":{"line":9255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9254,"column":0},"generated":{"line":9256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9255,"column":0},"generated":{"line":9257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9256,"column":0},"generated":{"line":9258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9257,"column":0},"generated":{"line":9259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9258,"column":0},"generated":{"line":9260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9259,"column":0},"generated":{"line":9261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9260,"column":0},"generated":{"line":9262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9261,"column":0},"generated":{"line":9263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9262,"column":0},"generated":{"line":9264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9263,"column":0},"generated":{"line":9265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9264,"column":0},"generated":{"line":9266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9265,"column":0},"generated":{"line":9267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9266,"column":0},"generated":{"line":9268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9267,"column":0},"generated":{"line":9269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9268,"column":0},"generated":{"line":9270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9269,"column":0},"generated":{"line":9271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9270,"column":0},"generated":{"line":9272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9271,"column":0},"generated":{"line":9273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9272,"column":0},"generated":{"line":9274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9273,"column":0},"generated":{"line":9275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9274,"column":0},"generated":{"line":9276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9275,"column":0},"generated":{"line":9277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9276,"column":0},"generated":{"line":9278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9277,"column":0},"generated":{"line":9279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9278,"column":0},"generated":{"line":9280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9279,"column":0},"generated":{"line":9281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9280,"column":0},"generated":{"line":9282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9281,"column":0},"generated":{"line":9283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9282,"column":0},"generated":{"line":9284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9283,"column":0},"generated":{"line":9285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9284,"column":0},"generated":{"line":9286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9285,"column":0},"generated":{"line":9287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9286,"column":0},"generated":{"line":9288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9287,"column":0},"generated":{"line":9289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9288,"column":0},"generated":{"line":9290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9289,"column":0},"generated":{"line":9291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9290,"column":0},"generated":{"line":9292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9291,"column":0},"generated":{"line":9293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9292,"column":0},"generated":{"line":9294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9293,"column":0},"generated":{"line":9295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9294,"column":0},"generated":{"line":9296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9295,"column":0},"generated":{"line":9297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9296,"column":0},"generated":{"line":9298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9297,"column":0},"generated":{"line":9299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9298,"column":0},"generated":{"line":9300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9299,"column":0},"generated":{"line":9301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9300,"column":0},"generated":{"line":9302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9301,"column":0},"generated":{"line":9303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9302,"column":0},"generated":{"line":9304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9303,"column":0},"generated":{"line":9305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9304,"column":0},"generated":{"line":9306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9305,"column":0},"generated":{"line":9307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9306,"column":0},"generated":{"line":9308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9307,"column":0},"generated":{"line":9309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9308,"column":0},"generated":{"line":9310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9309,"column":0},"generated":{"line":9311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9310,"column":0},"generated":{"line":9312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9311,"column":0},"generated":{"line":9313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9312,"column":0},"generated":{"line":9314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9313,"column":0},"generated":{"line":9315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9314,"column":0},"generated":{"line":9316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9315,"column":0},"generated":{"line":9317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9316,"column":0},"generated":{"line":9318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9317,"column":0},"generated":{"line":9319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9318,"column":0},"generated":{"line":9320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9319,"column":0},"generated":{"line":9321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9320,"column":0},"generated":{"line":9322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9321,"column":0},"generated":{"line":9323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9322,"column":0},"generated":{"line":9324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9323,"column":0},"generated":{"line":9325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9324,"column":0},"generated":{"line":9326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9325,"column":0},"generated":{"line":9327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9326,"column":0},"generated":{"line":9328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9327,"column":0},"generated":{"line":9329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9328,"column":0},"generated":{"line":9330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9329,"column":0},"generated":{"line":9331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9330,"column":0},"generated":{"line":9332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9331,"column":0},"generated":{"line":9333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9332,"column":0},"generated":{"line":9334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9333,"column":0},"generated":{"line":9335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9334,"column":0},"generated":{"line":9336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9335,"column":0},"generated":{"line":9337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9336,"column":0},"generated":{"line":9338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9337,"column":0},"generated":{"line":9339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9338,"column":0},"generated":{"line":9340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9339,"column":0},"generated":{"line":9341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9340,"column":0},"generated":{"line":9342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9341,"column":0},"generated":{"line":9343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9342,"column":0},"generated":{"line":9344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9343,"column":0},"generated":{"line":9345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9344,"column":0},"generated":{"line":9346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9345,"column":0},"generated":{"line":9347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9346,"column":0},"generated":{"line":9348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9347,"column":0},"generated":{"line":9349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9348,"column":0},"generated":{"line":9350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9349,"column":0},"generated":{"line":9351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9350,"column":0},"generated":{"line":9352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9351,"column":0},"generated":{"line":9353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9352,"column":0},"generated":{"line":9354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9353,"column":0},"generated":{"line":9355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9354,"column":0},"generated":{"line":9356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9355,"column":0},"generated":{"line":9357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9356,"column":0},"generated":{"line":9358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9357,"column":0},"generated":{"line":9359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9358,"column":0},"generated":{"line":9360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9359,"column":0},"generated":{"line":9361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9360,"column":0},"generated":{"line":9362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9361,"column":0},"generated":{"line":9363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9362,"column":0},"generated":{"line":9364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9363,"column":0},"generated":{"line":9365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9364,"column":0},"generated":{"line":9366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9365,"column":0},"generated":{"line":9367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9366,"column":0},"generated":{"line":9368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9367,"column":0},"generated":{"line":9369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9368,"column":0},"generated":{"line":9370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9369,"column":0},"generated":{"line":9371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9370,"column":0},"generated":{"line":9372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9371,"column":0},"generated":{"line":9373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9372,"column":0},"generated":{"line":9374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9373,"column":0},"generated":{"line":9375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9374,"column":0},"generated":{"line":9376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9375,"column":0},"generated":{"line":9377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9376,"column":0},"generated":{"line":9378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9377,"column":0},"generated":{"line":9379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9378,"column":0},"generated":{"line":9380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9379,"column":0},"generated":{"line":9381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9380,"column":0},"generated":{"line":9382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9381,"column":0},"generated":{"line":9383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9382,"column":0},"generated":{"line":9384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9383,"column":0},"generated":{"line":9385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9384,"column":0},"generated":{"line":9386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9385,"column":0},"generated":{"line":9387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9386,"column":0},"generated":{"line":9388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9387,"column":0},"generated":{"line":9389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9388,"column":0},"generated":{"line":9390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9389,"column":0},"generated":{"line":9391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9390,"column":0},"generated":{"line":9392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9391,"column":0},"generated":{"line":9393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9392,"column":0},"generated":{"line":9394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9393,"column":0},"generated":{"line":9395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9394,"column":0},"generated":{"line":9396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9395,"column":0},"generated":{"line":9397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9396,"column":0},"generated":{"line":9398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9397,"column":0},"generated":{"line":9399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9398,"column":0},"generated":{"line":9400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9399,"column":0},"generated":{"line":9401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9400,"column":0},"generated":{"line":9402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9401,"column":0},"generated":{"line":9403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9402,"column":0},"generated":{"line":9404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9403,"column":0},"generated":{"line":9405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9404,"column":0},"generated":{"line":9406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9405,"column":0},"generated":{"line":9407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9406,"column":0},"generated":{"line":9408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9407,"column":0},"generated":{"line":9409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9408,"column":0},"generated":{"line":9410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9409,"column":0},"generated":{"line":9411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9410,"column":0},"generated":{"line":9412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9411,"column":0},"generated":{"line":9413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9412,"column":0},"generated":{"line":9414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9413,"column":0},"generated":{"line":9415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9414,"column":0},"generated":{"line":9416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9415,"column":0},"generated":{"line":9417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9416,"column":0},"generated":{"line":9418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9417,"column":0},"generated":{"line":9419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9418,"column":0},"generated":{"line":9420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9419,"column":0},"generated":{"line":9421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9420,"column":0},"generated":{"line":9422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9421,"column":0},"generated":{"line":9423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9422,"column":0},"generated":{"line":9424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9423,"column":0},"generated":{"line":9425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9424,"column":0},"generated":{"line":9426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9425,"column":0},"generated":{"line":9427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9426,"column":0},"generated":{"line":9428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9427,"column":0},"generated":{"line":9429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9428,"column":0},"generated":{"line":9430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9429,"column":0},"generated":{"line":9431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9430,"column":0},"generated":{"line":9432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9431,"column":0},"generated":{"line":9433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9432,"column":0},"generated":{"line":9434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9433,"column":0},"generated":{"line":9435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9434,"column":0},"generated":{"line":9436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9435,"column":0},"generated":{"line":9437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9436,"column":0},"generated":{"line":9438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9437,"column":0},"generated":{"line":9439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9438,"column":0},"generated":{"line":9440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9439,"column":0},"generated":{"line":9441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9440,"column":0},"generated":{"line":9442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9441,"column":0},"generated":{"line":9443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9442,"column":0},"generated":{"line":9444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9443,"column":0},"generated":{"line":9445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9444,"column":0},"generated":{"line":9446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9445,"column":0},"generated":{"line":9447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9446,"column":0},"generated":{"line":9448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9447,"column":0},"generated":{"line":9449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9448,"column":0},"generated":{"line":9450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9449,"column":0},"generated":{"line":9451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9450,"column":0},"generated":{"line":9452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9451,"column":0},"generated":{"line":9453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9452,"column":0},"generated":{"line":9454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9453,"column":0},"generated":{"line":9455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9454,"column":0},"generated":{"line":9456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9455,"column":0},"generated":{"line":9457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9456,"column":0},"generated":{"line":9458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9457,"column":0},"generated":{"line":9459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9458,"column":0},"generated":{"line":9460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9459,"column":0},"generated":{"line":9461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9460,"column":0},"generated":{"line":9462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9461,"column":0},"generated":{"line":9463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9462,"column":0},"generated":{"line":9464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9463,"column":0},"generated":{"line":9465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9464,"column":0},"generated":{"line":9466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9465,"column":0},"generated":{"line":9467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9466,"column":0},"generated":{"line":9468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9467,"column":0},"generated":{"line":9469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9468,"column":0},"generated":{"line":9470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9469,"column":0},"generated":{"line":9471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9470,"column":0},"generated":{"line":9472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9471,"column":0},"generated":{"line":9473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9472,"column":0},"generated":{"line":9474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9473,"column":0},"generated":{"line":9475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9474,"column":0},"generated":{"line":9476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9475,"column":0},"generated":{"line":9477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9476,"column":0},"generated":{"line":9478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9477,"column":0},"generated":{"line":9479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9478,"column":0},"generated":{"line":9480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9479,"column":0},"generated":{"line":9481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9480,"column":0},"generated":{"line":9482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9481,"column":0},"generated":{"line":9483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9482,"column":0},"generated":{"line":9484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9483,"column":0},"generated":{"line":9485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9484,"column":0},"generated":{"line":9486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9485,"column":0},"generated":{"line":9487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9486,"column":0},"generated":{"line":9488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9487,"column":0},"generated":{"line":9489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9488,"column":0},"generated":{"line":9490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9489,"column":0},"generated":{"line":9491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9490,"column":0},"generated":{"line":9492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9491,"column":0},"generated":{"line":9493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9492,"column":0},"generated":{"line":9494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9493,"column":0},"generated":{"line":9495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9494,"column":0},"generated":{"line":9496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9495,"column":0},"generated":{"line":9497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9496,"column":0},"generated":{"line":9498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9497,"column":0},"generated":{"line":9499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9498,"column":0},"generated":{"line":9500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9499,"column":0},"generated":{"line":9501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9500,"column":0},"generated":{"line":9502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9501,"column":0},"generated":{"line":9503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9502,"column":0},"generated":{"line":9504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9503,"column":0},"generated":{"line":9505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9504,"column":0},"generated":{"line":9506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9505,"column":0},"generated":{"line":9507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9506,"column":0},"generated":{"line":9508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9507,"column":0},"generated":{"line":9509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9508,"column":0},"generated":{"line":9510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9509,"column":0},"generated":{"line":9511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9510,"column":0},"generated":{"line":9512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9511,"column":0},"generated":{"line":9513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9512,"column":0},"generated":{"line":9514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9513,"column":0},"generated":{"line":9515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9514,"column":0},"generated":{"line":9516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9515,"column":0},"generated":{"line":9517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9516,"column":0},"generated":{"line":9518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9517,"column":0},"generated":{"line":9519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9518,"column":0},"generated":{"line":9520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9519,"column":0},"generated":{"line":9521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9520,"column":0},"generated":{"line":9522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9521,"column":0},"generated":{"line":9523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9522,"column":0},"generated":{"line":9524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9523,"column":0},"generated":{"line":9525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9524,"column":0},"generated":{"line":9526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9525,"column":0},"generated":{"line":9527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9526,"column":0},"generated":{"line":9528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9527,"column":0},"generated":{"line":9529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9528,"column":0},"generated":{"line":9530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9529,"column":0},"generated":{"line":9531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9530,"column":0},"generated":{"line":9532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9531,"column":0},"generated":{"line":9533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9532,"column":0},"generated":{"line":9534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9533,"column":0},"generated":{"line":9535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9534,"column":0},"generated":{"line":9536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9535,"column":0},"generated":{"line":9537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9536,"column":0},"generated":{"line":9538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9537,"column":0},"generated":{"line":9539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9538,"column":0},"generated":{"line":9540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9539,"column":0},"generated":{"line":9541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9540,"column":0},"generated":{"line":9542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9541,"column":0},"generated":{"line":9543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9542,"column":0},"generated":{"line":9544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9543,"column":0},"generated":{"line":9545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9544,"column":0},"generated":{"line":9546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9545,"column":0},"generated":{"line":9547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9546,"column":0},"generated":{"line":9548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9547,"column":0},"generated":{"line":9549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9548,"column":0},"generated":{"line":9550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9549,"column":0},"generated":{"line":9551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9550,"column":0},"generated":{"line":9552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9551,"column":0},"generated":{"line":9553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9552,"column":0},"generated":{"line":9554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9553,"column":0},"generated":{"line":9555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9554,"column":0},"generated":{"line":9556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9555,"column":0},"generated":{"line":9557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9556,"column":0},"generated":{"line":9558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9557,"column":0},"generated":{"line":9559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9558,"column":0},"generated":{"line":9560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9559,"column":0},"generated":{"line":9561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9560,"column":0},"generated":{"line":9562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9561,"column":0},"generated":{"line":9563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9562,"column":0},"generated":{"line":9564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9563,"column":0},"generated":{"line":9565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9564,"column":0},"generated":{"line":9566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9565,"column":0},"generated":{"line":9567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9566,"column":0},"generated":{"line":9568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9567,"column":0},"generated":{"line":9569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9568,"column":0},"generated":{"line":9570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9569,"column":0},"generated":{"line":9571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9570,"column":0},"generated":{"line":9572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9571,"column":0},"generated":{"line":9573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9572,"column":0},"generated":{"line":9574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9573,"column":0},"generated":{"line":9575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9574,"column":0},"generated":{"line":9576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9575,"column":0},"generated":{"line":9577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9576,"column":0},"generated":{"line":9578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9577,"column":0},"generated":{"line":9579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9578,"column":0},"generated":{"line":9580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9579,"column":0},"generated":{"line":9581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9580,"column":0},"generated":{"line":9582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9581,"column":0},"generated":{"line":9583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9582,"column":0},"generated":{"line":9584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9583,"column":0},"generated":{"line":9585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9584,"column":0},"generated":{"line":9586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9585,"column":0},"generated":{"line":9587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9586,"column":0},"generated":{"line":9588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9587,"column":0},"generated":{"line":9589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9588,"column":0},"generated":{"line":9590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9589,"column":0},"generated":{"line":9591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9590,"column":0},"generated":{"line":9592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9591,"column":0},"generated":{"line":9593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9592,"column":0},"generated":{"line":9594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9593,"column":0},"generated":{"line":9595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9594,"column":0},"generated":{"line":9596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9595,"column":0},"generated":{"line":9597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9596,"column":0},"generated":{"line":9598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9597,"column":0},"generated":{"line":9599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9598,"column":0},"generated":{"line":9600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9599,"column":0},"generated":{"line":9601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9600,"column":0},"generated":{"line":9602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9601,"column":0},"generated":{"line":9603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9602,"column":0},"generated":{"line":9604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9603,"column":0},"generated":{"line":9605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9604,"column":0},"generated":{"line":9606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9605,"column":0},"generated":{"line":9607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9606,"column":0},"generated":{"line":9608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9607,"column":0},"generated":{"line":9609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9608,"column":0},"generated":{"line":9610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9609,"column":0},"generated":{"line":9611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9610,"column":0},"generated":{"line":9612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9611,"column":0},"generated":{"line":9613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9612,"column":0},"generated":{"line":9614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9613,"column":0},"generated":{"line":9615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9614,"column":0},"generated":{"line":9616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9615,"column":0},"generated":{"line":9617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9616,"column":0},"generated":{"line":9618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9617,"column":0},"generated":{"line":9619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9618,"column":0},"generated":{"line":9620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9619,"column":0},"generated":{"line":9621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9620,"column":0},"generated":{"line":9622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9621,"column":0},"generated":{"line":9623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9622,"column":0},"generated":{"line":9624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9623,"column":0},"generated":{"line":9625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9624,"column":0},"generated":{"line":9626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9625,"column":0},"generated":{"line":9627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9626,"column":0},"generated":{"line":9628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9627,"column":0},"generated":{"line":9629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9628,"column":0},"generated":{"line":9630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9629,"column":0},"generated":{"line":9631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9630,"column":0},"generated":{"line":9632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9631,"column":0},"generated":{"line":9633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9632,"column":0},"generated":{"line":9634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9633,"column":0},"generated":{"line":9635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9634,"column":0},"generated":{"line":9636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9635,"column":0},"generated":{"line":9637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9636,"column":0},"generated":{"line":9638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9637,"column":0},"generated":{"line":9639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9638,"column":0},"generated":{"line":9640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9639,"column":0},"generated":{"line":9641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9640,"column":0},"generated":{"line":9642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9641,"column":0},"generated":{"line":9643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9642,"column":0},"generated":{"line":9644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9643,"column":0},"generated":{"line":9645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9644,"column":0},"generated":{"line":9646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9645,"column":0},"generated":{"line":9647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9646,"column":0},"generated":{"line":9648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9647,"column":0},"generated":{"line":9649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9648,"column":0},"generated":{"line":9650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9649,"column":0},"generated":{"line":9651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9650,"column":0},"generated":{"line":9652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9651,"column":0},"generated":{"line":9653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9652,"column":0},"generated":{"line":9654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9653,"column":0},"generated":{"line":9655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9654,"column":0},"generated":{"line":9656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9655,"column":0},"generated":{"line":9657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9656,"column":0},"generated":{"line":9658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9657,"column":0},"generated":{"line":9659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9658,"column":0},"generated":{"line":9660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9659,"column":0},"generated":{"line":9661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9660,"column":0},"generated":{"line":9662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9661,"column":0},"generated":{"line":9663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9662,"column":0},"generated":{"line":9664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9663,"column":0},"generated":{"line":9665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9664,"column":0},"generated":{"line":9666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9665,"column":0},"generated":{"line":9667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9666,"column":0},"generated":{"line":9668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9667,"column":0},"generated":{"line":9669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9668,"column":0},"generated":{"line":9670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9669,"column":0},"generated":{"line":9671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9670,"column":0},"generated":{"line":9672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9671,"column":0},"generated":{"line":9673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9672,"column":0},"generated":{"line":9674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9673,"column":0},"generated":{"line":9675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9674,"column":0},"generated":{"line":9676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9675,"column":0},"generated":{"line":9677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9676,"column":0},"generated":{"line":9678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9677,"column":0},"generated":{"line":9679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9678,"column":0},"generated":{"line":9680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9679,"column":0},"generated":{"line":9681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9680,"column":0},"generated":{"line":9682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9681,"column":0},"generated":{"line":9683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9682,"column":0},"generated":{"line":9684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9683,"column":0},"generated":{"line":9685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9684,"column":0},"generated":{"line":9686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9685,"column":0},"generated":{"line":9687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9686,"column":0},"generated":{"line":9688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9687,"column":0},"generated":{"line":9689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9688,"column":0},"generated":{"line":9690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9689,"column":0},"generated":{"line":9691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9690,"column":0},"generated":{"line":9692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9691,"column":0},"generated":{"line":9693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9692,"column":0},"generated":{"line":9694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9693,"column":0},"generated":{"line":9695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9694,"column":0},"generated":{"line":9696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9695,"column":0},"generated":{"line":9697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9696,"column":0},"generated":{"line":9698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9697,"column":0},"generated":{"line":9699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9698,"column":0},"generated":{"line":9700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9699,"column":0},"generated":{"line":9701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9700,"column":0},"generated":{"line":9702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9701,"column":0},"generated":{"line":9703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9702,"column":0},"generated":{"line":9704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9703,"column":0},"generated":{"line":9705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9704,"column":0},"generated":{"line":9706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9705,"column":0},"generated":{"line":9707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9706,"column":0},"generated":{"line":9708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9707,"column":0},"generated":{"line":9709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9708,"column":0},"generated":{"line":9710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9709,"column":0},"generated":{"line":9711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9710,"column":0},"generated":{"line":9712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9711,"column":0},"generated":{"line":9713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9712,"column":0},"generated":{"line":9714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9713,"column":0},"generated":{"line":9715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9714,"column":0},"generated":{"line":9716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9715,"column":0},"generated":{"line":9717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9716,"column":0},"generated":{"line":9718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9717,"column":0},"generated":{"line":9719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9718,"column":0},"generated":{"line":9720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9719,"column":0},"generated":{"line":9721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9720,"column":0},"generated":{"line":9722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9721,"column":0},"generated":{"line":9723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9722,"column":0},"generated":{"line":9724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9723,"column":0},"generated":{"line":9725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9724,"column":0},"generated":{"line":9726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9725,"column":0},"generated":{"line":9727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9726,"column":0},"generated":{"line":9728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9727,"column":0},"generated":{"line":9729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9728,"column":0},"generated":{"line":9730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9729,"column":0},"generated":{"line":9731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9730,"column":0},"generated":{"line":9732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9731,"column":0},"generated":{"line":9733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9732,"column":0},"generated":{"line":9734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9733,"column":0},"generated":{"line":9735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9734,"column":0},"generated":{"line":9736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9735,"column":0},"generated":{"line":9737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9736,"column":0},"generated":{"line":9738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9737,"column":0},"generated":{"line":9739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9738,"column":0},"generated":{"line":9740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9739,"column":0},"generated":{"line":9741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9740,"column":0},"generated":{"line":9742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9741,"column":0},"generated":{"line":9743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9742,"column":0},"generated":{"line":9744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9743,"column":0},"generated":{"line":9745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9744,"column":0},"generated":{"line":9746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9745,"column":0},"generated":{"line":9747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9746,"column":0},"generated":{"line":9748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9747,"column":0},"generated":{"line":9749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9748,"column":0},"generated":{"line":9750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9749,"column":0},"generated":{"line":9751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9750,"column":0},"generated":{"line":9752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9751,"column":0},"generated":{"line":9753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9752,"column":0},"generated":{"line":9754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9753,"column":0},"generated":{"line":9755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9754,"column":0},"generated":{"line":9756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9755,"column":0},"generated":{"line":9757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9756,"column":0},"generated":{"line":9758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9757,"column":0},"generated":{"line":9759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9758,"column":0},"generated":{"line":9760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9759,"column":0},"generated":{"line":9761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9760,"column":0},"generated":{"line":9762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9761,"column":0},"generated":{"line":9763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9762,"column":0},"generated":{"line":9764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9763,"column":0},"generated":{"line":9765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9764,"column":0},"generated":{"line":9766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9765,"column":0},"generated":{"line":9767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9766,"column":0},"generated":{"line":9768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9767,"column":0},"generated":{"line":9769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9768,"column":0},"generated":{"line":9770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9769,"column":0},"generated":{"line":9771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9770,"column":0},"generated":{"line":9772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9771,"column":0},"generated":{"line":9773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9772,"column":0},"generated":{"line":9774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9773,"column":0},"generated":{"line":9775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9774,"column":0},"generated":{"line":9776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9775,"column":0},"generated":{"line":9777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9776,"column":0},"generated":{"line":9778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9777,"column":0},"generated":{"line":9779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9778,"column":0},"generated":{"line":9780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9779,"column":0},"generated":{"line":9781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9780,"column":0},"generated":{"line":9782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9781,"column":0},"generated":{"line":9783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9782,"column":0},"generated":{"line":9784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9783,"column":0},"generated":{"line":9785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9784,"column":0},"generated":{"line":9786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9785,"column":0},"generated":{"line":9787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9786,"column":0},"generated":{"line":9788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9787,"column":0},"generated":{"line":9789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9788,"column":0},"generated":{"line":9790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9789,"column":0},"generated":{"line":9791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9790,"column":0},"generated":{"line":9792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9791,"column":0},"generated":{"line":9793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9792,"column":0},"generated":{"line":9794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9793,"column":0},"generated":{"line":9795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9794,"column":0},"generated":{"line":9796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9795,"column":0},"generated":{"line":9797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9796,"column":0},"generated":{"line":9798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9797,"column":0},"generated":{"line":9799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9798,"column":0},"generated":{"line":9800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9799,"column":0},"generated":{"line":9801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9800,"column":0},"generated":{"line":9802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9801,"column":0},"generated":{"line":9803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9802,"column":0},"generated":{"line":9804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9803,"column":0},"generated":{"line":9805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9804,"column":0},"generated":{"line":9806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9805,"column":0},"generated":{"line":9807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9806,"column":0},"generated":{"line":9808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9807,"column":0},"generated":{"line":9809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9808,"column":0},"generated":{"line":9810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9809,"column":0},"generated":{"line":9811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9810,"column":0},"generated":{"line":9812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9811,"column":0},"generated":{"line":9813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9812,"column":0},"generated":{"line":9814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9813,"column":0},"generated":{"line":9815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9814,"column":0},"generated":{"line":9816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9815,"column":0},"generated":{"line":9817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9816,"column":0},"generated":{"line":9818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9817,"column":0},"generated":{"line":9819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9818,"column":0},"generated":{"line":9820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9819,"column":0},"generated":{"line":9821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9820,"column":0},"generated":{"line":9822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9821,"column":0},"generated":{"line":9823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9822,"column":0},"generated":{"line":9824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9823,"column":0},"generated":{"line":9825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9824,"column":0},"generated":{"line":9826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9825,"column":0},"generated":{"line":9827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9826,"column":0},"generated":{"line":9828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9827,"column":0},"generated":{"line":9829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9828,"column":0},"generated":{"line":9830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9829,"column":0},"generated":{"line":9831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9830,"column":0},"generated":{"line":9832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9831,"column":0},"generated":{"line":9833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9832,"column":0},"generated":{"line":9834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9833,"column":0},"generated":{"line":9835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9834,"column":0},"generated":{"line":9836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9835,"column":0},"generated":{"line":9837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9836,"column":0},"generated":{"line":9838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9837,"column":0},"generated":{"line":9839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9838,"column":0},"generated":{"line":9840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9839,"column":0},"generated":{"line":9841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9840,"column":0},"generated":{"line":9842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9841,"column":0},"generated":{"line":9843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9842,"column":0},"generated":{"line":9844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9843,"column":0},"generated":{"line":9845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9844,"column":0},"generated":{"line":9846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9845,"column":0},"generated":{"line":9847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9846,"column":0},"generated":{"line":9848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9847,"column":0},"generated":{"line":9849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9848,"column":0},"generated":{"line":9850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9849,"column":0},"generated":{"line":9851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9850,"column":0},"generated":{"line":9852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9851,"column":0},"generated":{"line":9853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9852,"column":0},"generated":{"line":9854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9853,"column":0},"generated":{"line":9855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9854,"column":0},"generated":{"line":9856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9855,"column":0},"generated":{"line":9857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9856,"column":0},"generated":{"line":9858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9857,"column":0},"generated":{"line":9859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9858,"column":0},"generated":{"line":9860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9859,"column":0},"generated":{"line":9861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9860,"column":0},"generated":{"line":9862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9861,"column":0},"generated":{"line":9863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9862,"column":0},"generated":{"line":9864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9863,"column":0},"generated":{"line":9865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9864,"column":0},"generated":{"line":9866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9865,"column":0},"generated":{"line":9867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9866,"column":0},"generated":{"line":9868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9867,"column":0},"generated":{"line":9869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9868,"column":0},"generated":{"line":9870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9869,"column":0},"generated":{"line":9871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9870,"column":0},"generated":{"line":9872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9871,"column":0},"generated":{"line":9873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9872,"column":0},"generated":{"line":9874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9873,"column":0},"generated":{"line":9875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9874,"column":0},"generated":{"line":9876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9875,"column":0},"generated":{"line":9877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9876,"column":0},"generated":{"line":9878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9877,"column":0},"generated":{"line":9879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9878,"column":0},"generated":{"line":9880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9879,"column":0},"generated":{"line":9881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9880,"column":0},"generated":{"line":9882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9881,"column":0},"generated":{"line":9883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9882,"column":0},"generated":{"line":9884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9883,"column":0},"generated":{"line":9885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9884,"column":0},"generated":{"line":9886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9885,"column":0},"generated":{"line":9887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9886,"column":0},"generated":{"line":9888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9887,"column":0},"generated":{"line":9889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9888,"column":0},"generated":{"line":9890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9889,"column":0},"generated":{"line":9891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9890,"column":0},"generated":{"line":9892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9891,"column":0},"generated":{"line":9893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9892,"column":0},"generated":{"line":9894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9893,"column":0},"generated":{"line":9895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9894,"column":0},"generated":{"line":9896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9895,"column":0},"generated":{"line":9897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9896,"column":0},"generated":{"line":9898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9897,"column":0},"generated":{"line":9899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9898,"column":0},"generated":{"line":9900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9899,"column":0},"generated":{"line":9901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9900,"column":0},"generated":{"line":9902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9901,"column":0},"generated":{"line":9903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9902,"column":0},"generated":{"line":9904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9903,"column":0},"generated":{"line":9905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9904,"column":0},"generated":{"line":9906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9905,"column":0},"generated":{"line":9907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9906,"column":0},"generated":{"line":9908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9907,"column":0},"generated":{"line":9909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9908,"column":0},"generated":{"line":9910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9909,"column":0},"generated":{"line":9911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9910,"column":0},"generated":{"line":9912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9911,"column":0},"generated":{"line":9913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9912,"column":0},"generated":{"line":9914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9913,"column":0},"generated":{"line":9915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9914,"column":0},"generated":{"line":9916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9915,"column":0},"generated":{"line":9917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9916,"column":0},"generated":{"line":9918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9917,"column":0},"generated":{"line":9919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9918,"column":0},"generated":{"line":9920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9919,"column":0},"generated":{"line":9921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9920,"column":0},"generated":{"line":9922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9921,"column":0},"generated":{"line":9923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9922,"column":0},"generated":{"line":9924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9923,"column":0},"generated":{"line":9925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9924,"column":0},"generated":{"line":9926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9925,"column":0},"generated":{"line":9927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9926,"column":0},"generated":{"line":9928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9927,"column":0},"generated":{"line":9929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9928,"column":0},"generated":{"line":9930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9929,"column":0},"generated":{"line":9931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9930,"column":0},"generated":{"line":9932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9931,"column":0},"generated":{"line":9933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9932,"column":0},"generated":{"line":9934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9933,"column":0},"generated":{"line":9935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9934,"column":0},"generated":{"line":9936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9935,"column":0},"generated":{"line":9937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9936,"column":0},"generated":{"line":9938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9937,"column":0},"generated":{"line":9939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9938,"column":0},"generated":{"line":9940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9939,"column":0},"generated":{"line":9941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9940,"column":0},"generated":{"line":9942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9941,"column":0},"generated":{"line":9943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9942,"column":0},"generated":{"line":9944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9943,"column":0},"generated":{"line":9945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9944,"column":0},"generated":{"line":9946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9945,"column":0},"generated":{"line":9947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9946,"column":0},"generated":{"line":9948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9947,"column":0},"generated":{"line":9949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9948,"column":0},"generated":{"line":9950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9949,"column":0},"generated":{"line":9951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9950,"column":0},"generated":{"line":9952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9951,"column":0},"generated":{"line":9953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9952,"column":0},"generated":{"line":9954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9953,"column":0},"generated":{"line":9955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9954,"column":0},"generated":{"line":9956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9955,"column":0},"generated":{"line":9957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9956,"column":0},"generated":{"line":9958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9957,"column":0},"generated":{"line":9959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9958,"column":0},"generated":{"line":9960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9959,"column":0},"generated":{"line":9961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9960,"column":0},"generated":{"line":9962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9961,"column":0},"generated":{"line":9963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9962,"column":0},"generated":{"line":9964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9963,"column":0},"generated":{"line":9965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9964,"column":0},"generated":{"line":9966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9965,"column":0},"generated":{"line":9967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9966,"column":0},"generated":{"line":9968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9967,"column":0},"generated":{"line":9969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9968,"column":0},"generated":{"line":9970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9969,"column":0},"generated":{"line":9971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9970,"column":0},"generated":{"line":9972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9971,"column":0},"generated":{"line":9973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9972,"column":0},"generated":{"line":9974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9973,"column":0},"generated":{"line":9975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9974,"column":0},"generated":{"line":9976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9975,"column":0},"generated":{"line":9977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9976,"column":0},"generated":{"line":9978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9977,"column":0},"generated":{"line":9979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9978,"column":0},"generated":{"line":9980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9979,"column":0},"generated":{"line":9981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9980,"column":0},"generated":{"line":9982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9981,"column":0},"generated":{"line":9983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9982,"column":0},"generated":{"line":9984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9983,"column":0},"generated":{"line":9985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9984,"column":0},"generated":{"line":9986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9985,"column":0},"generated":{"line":9987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9986,"column":0},"generated":{"line":9988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9987,"column":0},"generated":{"line":9989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9988,"column":0},"generated":{"line":9990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9989,"column":0},"generated":{"line":9991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9990,"column":0},"generated":{"line":9992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9991,"column":0},"generated":{"line":9993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9992,"column":0},"generated":{"line":9994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9993,"column":0},"generated":{"line":9995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9994,"column":0},"generated":{"line":9996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9995,"column":0},"generated":{"line":9997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9996,"column":0},"generated":{"line":9998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9997,"column":0},"generated":{"line":9999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9998,"column":0},"generated":{"line":10000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":9999,"column":0},"generated":{"line":10001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10000,"column":0},"generated":{"line":10002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10001,"column":0},"generated":{"line":10003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10002,"column":0},"generated":{"line":10004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10003,"column":0},"generated":{"line":10005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10004,"column":0},"generated":{"line":10006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10005,"column":0},"generated":{"line":10007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10006,"column":0},"generated":{"line":10008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10007,"column":0},"generated":{"line":10009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10008,"column":0},"generated":{"line":10010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10009,"column":0},"generated":{"line":10011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10010,"column":0},"generated":{"line":10012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10011,"column":0},"generated":{"line":10013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10012,"column":0},"generated":{"line":10014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10013,"column":0},"generated":{"line":10015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10014,"column":0},"generated":{"line":10016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10015,"column":0},"generated":{"line":10017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10016,"column":0},"generated":{"line":10018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10017,"column":0},"generated":{"line":10019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10018,"column":0},"generated":{"line":10020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10019,"column":0},"generated":{"line":10021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10020,"column":0},"generated":{"line":10022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10021,"column":0},"generated":{"line":10023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10022,"column":0},"generated":{"line":10024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10023,"column":0},"generated":{"line":10025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10024,"column":0},"generated":{"line":10026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10025,"column":0},"generated":{"line":10027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10026,"column":0},"generated":{"line":10028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10027,"column":0},"generated":{"line":10029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10028,"column":0},"generated":{"line":10030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10029,"column":0},"generated":{"line":10031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10030,"column":0},"generated":{"line":10032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10031,"column":0},"generated":{"line":10033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10032,"column":0},"generated":{"line":10034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10033,"column":0},"generated":{"line":10035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10034,"column":0},"generated":{"line":10036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10035,"column":0},"generated":{"line":10037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10036,"column":0},"generated":{"line":10038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10037,"column":0},"generated":{"line":10039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10038,"column":0},"generated":{"line":10040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10039,"column":0},"generated":{"line":10041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10040,"column":0},"generated":{"line":10042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10041,"column":0},"generated":{"line":10043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10042,"column":0},"generated":{"line":10044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10043,"column":0},"generated":{"line":10045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10044,"column":0},"generated":{"line":10046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10045,"column":0},"generated":{"line":10047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10046,"column":0},"generated":{"line":10048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10047,"column":0},"generated":{"line":10049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10048,"column":0},"generated":{"line":10050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10049,"column":0},"generated":{"line":10051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10050,"column":0},"generated":{"line":10052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10051,"column":0},"generated":{"line":10053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10052,"column":0},"generated":{"line":10054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10053,"column":0},"generated":{"line":10055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10054,"column":0},"generated":{"line":10056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10055,"column":0},"generated":{"line":10057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10056,"column":0},"generated":{"line":10058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10057,"column":0},"generated":{"line":10059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10058,"column":0},"generated":{"line":10060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10059,"column":0},"generated":{"line":10061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10060,"column":0},"generated":{"line":10062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10061,"column":0},"generated":{"line":10063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10062,"column":0},"generated":{"line":10064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10063,"column":0},"generated":{"line":10065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10064,"column":0},"generated":{"line":10066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10065,"column":0},"generated":{"line":10067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10066,"column":0},"generated":{"line":10068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10067,"column":0},"generated":{"line":10069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10068,"column":0},"generated":{"line":10070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10069,"column":0},"generated":{"line":10071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10070,"column":0},"generated":{"line":10072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10071,"column":0},"generated":{"line":10073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10072,"column":0},"generated":{"line":10074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10073,"column":0},"generated":{"line":10075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10074,"column":0},"generated":{"line":10076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10075,"column":0},"generated":{"line":10077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10076,"column":0},"generated":{"line":10078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10077,"column":0},"generated":{"line":10079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10078,"column":0},"generated":{"line":10080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10079,"column":0},"generated":{"line":10081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10080,"column":0},"generated":{"line":10082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10081,"column":0},"generated":{"line":10083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10082,"column":0},"generated":{"line":10084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10083,"column":0},"generated":{"line":10085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10084,"column":0},"generated":{"line":10086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10085,"column":0},"generated":{"line":10087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10086,"column":0},"generated":{"line":10088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10087,"column":0},"generated":{"line":10089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10088,"column":0},"generated":{"line":10090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10089,"column":0},"generated":{"line":10091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10090,"column":0},"generated":{"line":10092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10091,"column":0},"generated":{"line":10093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10092,"column":0},"generated":{"line":10094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10093,"column":0},"generated":{"line":10095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10094,"column":0},"generated":{"line":10096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10095,"column":0},"generated":{"line":10097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10096,"column":0},"generated":{"line":10098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10097,"column":0},"generated":{"line":10099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10098,"column":0},"generated":{"line":10100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10099,"column":0},"generated":{"line":10101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10100,"column":0},"generated":{"line":10102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10101,"column":0},"generated":{"line":10103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10102,"column":0},"generated":{"line":10104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10103,"column":0},"generated":{"line":10105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10104,"column":0},"generated":{"line":10106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10105,"column":0},"generated":{"line":10107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10106,"column":0},"generated":{"line":10108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10107,"column":0},"generated":{"line":10109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10108,"column":0},"generated":{"line":10110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10109,"column":0},"generated":{"line":10111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10110,"column":0},"generated":{"line":10112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10111,"column":0},"generated":{"line":10113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10112,"column":0},"generated":{"line":10114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10113,"column":0},"generated":{"line":10115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10114,"column":0},"generated":{"line":10116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10115,"column":0},"generated":{"line":10117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10116,"column":0},"generated":{"line":10118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10117,"column":0},"generated":{"line":10119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10118,"column":0},"generated":{"line":10120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10119,"column":0},"generated":{"line":10121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10120,"column":0},"generated":{"line":10122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10121,"column":0},"generated":{"line":10123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10122,"column":0},"generated":{"line":10124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10123,"column":0},"generated":{"line":10125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10124,"column":0},"generated":{"line":10126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10125,"column":0},"generated":{"line":10127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10126,"column":0},"generated":{"line":10128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10127,"column":0},"generated":{"line":10129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10128,"column":0},"generated":{"line":10130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10129,"column":0},"generated":{"line":10131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10130,"column":0},"generated":{"line":10132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10131,"column":0},"generated":{"line":10133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10132,"column":0},"generated":{"line":10134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10133,"column":0},"generated":{"line":10135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10134,"column":0},"generated":{"line":10136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10135,"column":0},"generated":{"line":10137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10136,"column":0},"generated":{"line":10138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10137,"column":0},"generated":{"line":10139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10138,"column":0},"generated":{"line":10140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10139,"column":0},"generated":{"line":10141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10140,"column":0},"generated":{"line":10142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10141,"column":0},"generated":{"line":10143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10142,"column":0},"generated":{"line":10144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10143,"column":0},"generated":{"line":10145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10144,"column":0},"generated":{"line":10146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10145,"column":0},"generated":{"line":10147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10146,"column":0},"generated":{"line":10148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10147,"column":0},"generated":{"line":10149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10148,"column":0},"generated":{"line":10150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10149,"column":0},"generated":{"line":10151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10150,"column":0},"generated":{"line":10152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10151,"column":0},"generated":{"line":10153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10152,"column":0},"generated":{"line":10154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10153,"column":0},"generated":{"line":10155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10154,"column":0},"generated":{"line":10156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10155,"column":0},"generated":{"line":10157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10156,"column":0},"generated":{"line":10158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10157,"column":0},"generated":{"line":10159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10158,"column":0},"generated":{"line":10160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10159,"column":0},"generated":{"line":10161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10160,"column":0},"generated":{"line":10162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10161,"column":0},"generated":{"line":10163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10162,"column":0},"generated":{"line":10164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10163,"column":0},"generated":{"line":10165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10164,"column":0},"generated":{"line":10166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10165,"column":0},"generated":{"line":10167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10166,"column":0},"generated":{"line":10168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10167,"column":0},"generated":{"line":10169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10168,"column":0},"generated":{"line":10170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10169,"column":0},"generated":{"line":10171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10170,"column":0},"generated":{"line":10172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10171,"column":0},"generated":{"line":10173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10172,"column":0},"generated":{"line":10174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10173,"column":0},"generated":{"line":10175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10174,"column":0},"generated":{"line":10176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10175,"column":0},"generated":{"line":10177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10176,"column":0},"generated":{"line":10178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10177,"column":0},"generated":{"line":10179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10178,"column":0},"generated":{"line":10180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10179,"column":0},"generated":{"line":10181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10180,"column":0},"generated":{"line":10182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10181,"column":0},"generated":{"line":10183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10182,"column":0},"generated":{"line":10184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10183,"column":0},"generated":{"line":10185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10184,"column":0},"generated":{"line":10186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10185,"column":0},"generated":{"line":10187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10186,"column":0},"generated":{"line":10188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10187,"column":0},"generated":{"line":10189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10188,"column":0},"generated":{"line":10190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10189,"column":0},"generated":{"line":10191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10190,"column":0},"generated":{"line":10192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10191,"column":0},"generated":{"line":10193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10192,"column":0},"generated":{"line":10194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10193,"column":0},"generated":{"line":10195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10194,"column":0},"generated":{"line":10196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10195,"column":0},"generated":{"line":10197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10196,"column":0},"generated":{"line":10198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10197,"column":0},"generated":{"line":10199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10198,"column":0},"generated":{"line":10200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10199,"column":0},"generated":{"line":10201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10200,"column":0},"generated":{"line":10202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10201,"column":0},"generated":{"line":10203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10202,"column":0},"generated":{"line":10204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10203,"column":0},"generated":{"line":10205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10204,"column":0},"generated":{"line":10206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10205,"column":0},"generated":{"line":10207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10206,"column":0},"generated":{"line":10208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10207,"column":0},"generated":{"line":10209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10208,"column":0},"generated":{"line":10210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10209,"column":0},"generated":{"line":10211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10210,"column":0},"generated":{"line":10212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10211,"column":0},"generated":{"line":10213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10212,"column":0},"generated":{"line":10214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10213,"column":0},"generated":{"line":10215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10214,"column":0},"generated":{"line":10216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10215,"column":0},"generated":{"line":10217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10216,"column":0},"generated":{"line":10218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10217,"column":0},"generated":{"line":10219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10218,"column":0},"generated":{"line":10220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10219,"column":0},"generated":{"line":10221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10220,"column":0},"generated":{"line":10222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10221,"column":0},"generated":{"line":10223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10222,"column":0},"generated":{"line":10224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10223,"column":0},"generated":{"line":10225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10224,"column":0},"generated":{"line":10226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10225,"column":0},"generated":{"line":10227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10226,"column":0},"generated":{"line":10228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10227,"column":0},"generated":{"line":10229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10228,"column":0},"generated":{"line":10230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10229,"column":0},"generated":{"line":10231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10230,"column":0},"generated":{"line":10232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10231,"column":0},"generated":{"line":10233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10232,"column":0},"generated":{"line":10234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10233,"column":0},"generated":{"line":10235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10234,"column":0},"generated":{"line":10236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10235,"column":0},"generated":{"line":10237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10236,"column":0},"generated":{"line":10238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10237,"column":0},"generated":{"line":10239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10238,"column":0},"generated":{"line":10240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10239,"column":0},"generated":{"line":10241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10240,"column":0},"generated":{"line":10242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10241,"column":0},"generated":{"line":10243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10242,"column":0},"generated":{"line":10244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10243,"column":0},"generated":{"line":10245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10244,"column":0},"generated":{"line":10246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10245,"column":0},"generated":{"line":10247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10246,"column":0},"generated":{"line":10248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10247,"column":0},"generated":{"line":10249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10248,"column":0},"generated":{"line":10250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10249,"column":0},"generated":{"line":10251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10250,"column":0},"generated":{"line":10252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10251,"column":0},"generated":{"line":10253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10252,"column":0},"generated":{"line":10254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10253,"column":0},"generated":{"line":10255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10254,"column":0},"generated":{"line":10256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10255,"column":0},"generated":{"line":10257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10256,"column":0},"generated":{"line":10258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10257,"column":0},"generated":{"line":10259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10258,"column":0},"generated":{"line":10260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10259,"column":0},"generated":{"line":10261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10260,"column":0},"generated":{"line":10262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10261,"column":0},"generated":{"line":10263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10262,"column":0},"generated":{"line":10264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10263,"column":0},"generated":{"line":10265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10264,"column":0},"generated":{"line":10266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10265,"column":0},"generated":{"line":10267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10266,"column":0},"generated":{"line":10268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10267,"column":0},"generated":{"line":10269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10268,"column":0},"generated":{"line":10270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10269,"column":0},"generated":{"line":10271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10270,"column":0},"generated":{"line":10272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10271,"column":0},"generated":{"line":10273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10272,"column":0},"generated":{"line":10274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10273,"column":0},"generated":{"line":10275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10274,"column":0},"generated":{"line":10276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10275,"column":0},"generated":{"line":10277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10276,"column":0},"generated":{"line":10278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10277,"column":0},"generated":{"line":10279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10278,"column":0},"generated":{"line":10280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10279,"column":0},"generated":{"line":10281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10280,"column":0},"generated":{"line":10282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10281,"column":0},"generated":{"line":10283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10282,"column":0},"generated":{"line":10284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10283,"column":0},"generated":{"line":10285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10284,"column":0},"generated":{"line":10286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10285,"column":0},"generated":{"line":10287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10286,"column":0},"generated":{"line":10288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10287,"column":0},"generated":{"line":10289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10288,"column":0},"generated":{"line":10290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10289,"column":0},"generated":{"line":10291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10290,"column":0},"generated":{"line":10292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10291,"column":0},"generated":{"line":10293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10292,"column":0},"generated":{"line":10294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10293,"column":0},"generated":{"line":10295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10294,"column":0},"generated":{"line":10296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10295,"column":0},"generated":{"line":10297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10296,"column":0},"generated":{"line":10298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10297,"column":0},"generated":{"line":10299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10298,"column":0},"generated":{"line":10300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10299,"column":0},"generated":{"line":10301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10300,"column":0},"generated":{"line":10302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10301,"column":0},"generated":{"line":10303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10302,"column":0},"generated":{"line":10304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10303,"column":0},"generated":{"line":10305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10304,"column":0},"generated":{"line":10306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10305,"column":0},"generated":{"line":10307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10306,"column":0},"generated":{"line":10308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10307,"column":0},"generated":{"line":10309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10308,"column":0},"generated":{"line":10310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10309,"column":0},"generated":{"line":10311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10310,"column":0},"generated":{"line":10312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10311,"column":0},"generated":{"line":10313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10312,"column":0},"generated":{"line":10314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10313,"column":0},"generated":{"line":10315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10314,"column":0},"generated":{"line":10316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10315,"column":0},"generated":{"line":10317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10316,"column":0},"generated":{"line":10318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10317,"column":0},"generated":{"line":10319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10318,"column":0},"generated":{"line":10320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10319,"column":0},"generated":{"line":10321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10320,"column":0},"generated":{"line":10322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10321,"column":0},"generated":{"line":10323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10322,"column":0},"generated":{"line":10324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10323,"column":0},"generated":{"line":10325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10324,"column":0},"generated":{"line":10326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10325,"column":0},"generated":{"line":10327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10326,"column":0},"generated":{"line":10328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10327,"column":0},"generated":{"line":10329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10328,"column":0},"generated":{"line":10330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10329,"column":0},"generated":{"line":10331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10330,"column":0},"generated":{"line":10332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10331,"column":0},"generated":{"line":10333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10332,"column":0},"generated":{"line":10334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10333,"column":0},"generated":{"line":10335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10334,"column":0},"generated":{"line":10336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10335,"column":0},"generated":{"line":10337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10336,"column":0},"generated":{"line":10338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10337,"column":0},"generated":{"line":10339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10338,"column":0},"generated":{"line":10340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10339,"column":0},"generated":{"line":10341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10340,"column":0},"generated":{"line":10342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10341,"column":0},"generated":{"line":10343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10342,"column":0},"generated":{"line":10344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10343,"column":0},"generated":{"line":10345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10344,"column":0},"generated":{"line":10346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10345,"column":0},"generated":{"line":10347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10346,"column":0},"generated":{"line":10348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10347,"column":0},"generated":{"line":10349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10348,"column":0},"generated":{"line":10350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10349,"column":0},"generated":{"line":10351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10350,"column":0},"generated":{"line":10352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10351,"column":0},"generated":{"line":10353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10352,"column":0},"generated":{"line":10354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10353,"column":0},"generated":{"line":10355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10354,"column":0},"generated":{"line":10356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10355,"column":0},"generated":{"line":10357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10356,"column":0},"generated":{"line":10358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10357,"column":0},"generated":{"line":10359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10358,"column":0},"generated":{"line":10360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10359,"column":0},"generated":{"line":10361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10360,"column":0},"generated":{"line":10362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10361,"column":0},"generated":{"line":10363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10362,"column":0},"generated":{"line":10364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10363,"column":0},"generated":{"line":10365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10364,"column":0},"generated":{"line":10366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10365,"column":0},"generated":{"line":10367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10366,"column":0},"generated":{"line":10368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10367,"column":0},"generated":{"line":10369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10368,"column":0},"generated":{"line":10370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10369,"column":0},"generated":{"line":10371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10370,"column":0},"generated":{"line":10372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10371,"column":0},"generated":{"line":10373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10372,"column":0},"generated":{"line":10374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10373,"column":0},"generated":{"line":10375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10374,"column":0},"generated":{"line":10376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10375,"column":0},"generated":{"line":10377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10376,"column":0},"generated":{"line":10378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10377,"column":0},"generated":{"line":10379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10378,"column":0},"generated":{"line":10380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10379,"column":0},"generated":{"line":10381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10380,"column":0},"generated":{"line":10382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10381,"column":0},"generated":{"line":10383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10382,"column":0},"generated":{"line":10384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10383,"column":0},"generated":{"line":10385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10384,"column":0},"generated":{"line":10386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10385,"column":0},"generated":{"line":10387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10386,"column":0},"generated":{"line":10388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10387,"column":0},"generated":{"line":10389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10388,"column":0},"generated":{"line":10390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10389,"column":0},"generated":{"line":10391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10390,"column":0},"generated":{"line":10392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10391,"column":0},"generated":{"line":10393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10392,"column":0},"generated":{"line":10394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10393,"column":0},"generated":{"line":10395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10394,"column":0},"generated":{"line":10396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10395,"column":0},"generated":{"line":10397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10396,"column":0},"generated":{"line":10398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10397,"column":0},"generated":{"line":10399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10398,"column":0},"generated":{"line":10400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10399,"column":0},"generated":{"line":10401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10400,"column":0},"generated":{"line":10402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10401,"column":0},"generated":{"line":10403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10402,"column":0},"generated":{"line":10404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10403,"column":0},"generated":{"line":10405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10404,"column":0},"generated":{"line":10406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10405,"column":0},"generated":{"line":10407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10406,"column":0},"generated":{"line":10408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10407,"column":0},"generated":{"line":10409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10408,"column":0},"generated":{"line":10410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10409,"column":0},"generated":{"line":10411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10410,"column":0},"generated":{"line":10412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10411,"column":0},"generated":{"line":10413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10412,"column":0},"generated":{"line":10414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10413,"column":0},"generated":{"line":10415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10414,"column":0},"generated":{"line":10416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10415,"column":0},"generated":{"line":10417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10416,"column":0},"generated":{"line":10418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10417,"column":0},"generated":{"line":10419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10418,"column":0},"generated":{"line":10420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10419,"column":0},"generated":{"line":10421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10420,"column":0},"generated":{"line":10422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10421,"column":0},"generated":{"line":10423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10422,"column":0},"generated":{"line":10424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10423,"column":0},"generated":{"line":10425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10424,"column":0},"generated":{"line":10426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10425,"column":0},"generated":{"line":10427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10426,"column":0},"generated":{"line":10428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10427,"column":0},"generated":{"line":10429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10428,"column":0},"generated":{"line":10430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10429,"column":0},"generated":{"line":10431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10430,"column":0},"generated":{"line":10432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10431,"column":0},"generated":{"line":10433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10432,"column":0},"generated":{"line":10434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10433,"column":0},"generated":{"line":10435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10434,"column":0},"generated":{"line":10436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10435,"column":0},"generated":{"line":10437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10436,"column":0},"generated":{"line":10438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10437,"column":0},"generated":{"line":10439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10438,"column":0},"generated":{"line":10440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10439,"column":0},"generated":{"line":10441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10440,"column":0},"generated":{"line":10442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10441,"column":0},"generated":{"line":10443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10442,"column":0},"generated":{"line":10444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10443,"column":0},"generated":{"line":10445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10444,"column":0},"generated":{"line":10446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10445,"column":0},"generated":{"line":10447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10446,"column":0},"generated":{"line":10448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10447,"column":0},"generated":{"line":10449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10448,"column":0},"generated":{"line":10450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10449,"column":0},"generated":{"line":10451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10450,"column":0},"generated":{"line":10452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10451,"column":0},"generated":{"line":10453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10452,"column":0},"generated":{"line":10454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10453,"column":0},"generated":{"line":10455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10454,"column":0},"generated":{"line":10456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10455,"column":0},"generated":{"line":10457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10456,"column":0},"generated":{"line":10458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10457,"column":0},"generated":{"line":10459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10458,"column":0},"generated":{"line":10460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10459,"column":0},"generated":{"line":10461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10460,"column":0},"generated":{"line":10462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10461,"column":0},"generated":{"line":10463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10462,"column":0},"generated":{"line":10464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10463,"column":0},"generated":{"line":10465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10464,"column":0},"generated":{"line":10466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10465,"column":0},"generated":{"line":10467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10466,"column":0},"generated":{"line":10468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10467,"column":0},"generated":{"line":10469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10468,"column":0},"generated":{"line":10470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10469,"column":0},"generated":{"line":10471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10470,"column":0},"generated":{"line":10472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10471,"column":0},"generated":{"line":10473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10472,"column":0},"generated":{"line":10474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10473,"column":0},"generated":{"line":10475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10474,"column":0},"generated":{"line":10476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10475,"column":0},"generated":{"line":10477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10476,"column":0},"generated":{"line":10478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10477,"column":0},"generated":{"line":10479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10478,"column":0},"generated":{"line":10480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10479,"column":0},"generated":{"line":10481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10480,"column":0},"generated":{"line":10482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10481,"column":0},"generated":{"line":10483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10482,"column":0},"generated":{"line":10484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10483,"column":0},"generated":{"line":10485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10484,"column":0},"generated":{"line":10486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10485,"column":0},"generated":{"line":10487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10486,"column":0},"generated":{"line":10488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10487,"column":0},"generated":{"line":10489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10488,"column":0},"generated":{"line":10490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10489,"column":0},"generated":{"line":10491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10490,"column":0},"generated":{"line":10492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10491,"column":0},"generated":{"line":10493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10492,"column":0},"generated":{"line":10494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10493,"column":0},"generated":{"line":10495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10494,"column":0},"generated":{"line":10496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10495,"column":0},"generated":{"line":10497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10496,"column":0},"generated":{"line":10498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10497,"column":0},"generated":{"line":10499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10498,"column":0},"generated":{"line":10500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10499,"column":0},"generated":{"line":10501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10500,"column":0},"generated":{"line":10502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10501,"column":0},"generated":{"line":10503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10502,"column":0},"generated":{"line":10504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10503,"column":0},"generated":{"line":10505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10504,"column":0},"generated":{"line":10506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10505,"column":0},"generated":{"line":10507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10506,"column":0},"generated":{"line":10508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10507,"column":0},"generated":{"line":10509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10508,"column":0},"generated":{"line":10510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10509,"column":0},"generated":{"line":10511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10510,"column":0},"generated":{"line":10512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10511,"column":0},"generated":{"line":10513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10512,"column":0},"generated":{"line":10514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10513,"column":0},"generated":{"line":10515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10514,"column":0},"generated":{"line":10516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10515,"column":0},"generated":{"line":10517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10516,"column":0},"generated":{"line":10518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10517,"column":0},"generated":{"line":10519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10518,"column":0},"generated":{"line":10520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10519,"column":0},"generated":{"line":10521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10520,"column":0},"generated":{"line":10522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10521,"column":0},"generated":{"line":10523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10522,"column":0},"generated":{"line":10524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10523,"column":0},"generated":{"line":10525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10524,"column":0},"generated":{"line":10526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10525,"column":0},"generated":{"line":10527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10526,"column":0},"generated":{"line":10528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10527,"column":0},"generated":{"line":10529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10528,"column":0},"generated":{"line":10530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10529,"column":0},"generated":{"line":10531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10530,"column":0},"generated":{"line":10532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10531,"column":0},"generated":{"line":10533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10532,"column":0},"generated":{"line":10534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10533,"column":0},"generated":{"line":10535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10534,"column":0},"generated":{"line":10536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10535,"column":0},"generated":{"line":10537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10536,"column":0},"generated":{"line":10538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10537,"column":0},"generated":{"line":10539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10538,"column":0},"generated":{"line":10540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10539,"column":0},"generated":{"line":10541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10540,"column":0},"generated":{"line":10542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10541,"column":0},"generated":{"line":10543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10542,"column":0},"generated":{"line":10544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10543,"column":0},"generated":{"line":10545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10544,"column":0},"generated":{"line":10546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10545,"column":0},"generated":{"line":10547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10546,"column":0},"generated":{"line":10548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10547,"column":0},"generated":{"line":10549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10548,"column":0},"generated":{"line":10550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10549,"column":0},"generated":{"line":10551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10550,"column":0},"generated":{"line":10552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10551,"column":0},"generated":{"line":10553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10552,"column":0},"generated":{"line":10554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10553,"column":0},"generated":{"line":10555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10554,"column":0},"generated":{"line":10556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10555,"column":0},"generated":{"line":10557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10556,"column":0},"generated":{"line":10558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10557,"column":0},"generated":{"line":10559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10558,"column":0},"generated":{"line":10560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10559,"column":0},"generated":{"line":10561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10560,"column":0},"generated":{"line":10562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10561,"column":0},"generated":{"line":10563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10562,"column":0},"generated":{"line":10564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10563,"column":0},"generated":{"line":10565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10564,"column":0},"generated":{"line":10566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10565,"column":0},"generated":{"line":10567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10566,"column":0},"generated":{"line":10568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10567,"column":0},"generated":{"line":10569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10568,"column":0},"generated":{"line":10570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10569,"column":0},"generated":{"line":10571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10570,"column":0},"generated":{"line":10572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10571,"column":0},"generated":{"line":10573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10572,"column":0},"generated":{"line":10574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10573,"column":0},"generated":{"line":10575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10574,"column":0},"generated":{"line":10576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10575,"column":0},"generated":{"line":10577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10576,"column":0},"generated":{"line":10578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10577,"column":0},"generated":{"line":10579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10578,"column":0},"generated":{"line":10580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10579,"column":0},"generated":{"line":10581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10580,"column":0},"generated":{"line":10582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10581,"column":0},"generated":{"line":10583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10582,"column":0},"generated":{"line":10584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10583,"column":0},"generated":{"line":10585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10584,"column":0},"generated":{"line":10586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10585,"column":0},"generated":{"line":10587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10586,"column":0},"generated":{"line":10588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10587,"column":0},"generated":{"line":10589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10588,"column":0},"generated":{"line":10590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10589,"column":0},"generated":{"line":10591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10590,"column":0},"generated":{"line":10592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10591,"column":0},"generated":{"line":10593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10592,"column":0},"generated":{"line":10594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10593,"column":0},"generated":{"line":10595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10594,"column":0},"generated":{"line":10596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10595,"column":0},"generated":{"line":10597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10596,"column":0},"generated":{"line":10598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10597,"column":0},"generated":{"line":10599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10598,"column":0},"generated":{"line":10600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10599,"column":0},"generated":{"line":10601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10600,"column":0},"generated":{"line":10602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10601,"column":0},"generated":{"line":10603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10602,"column":0},"generated":{"line":10604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10603,"column":0},"generated":{"line":10605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10604,"column":0},"generated":{"line":10606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10605,"column":0},"generated":{"line":10607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10606,"column":0},"generated":{"line":10608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10607,"column":0},"generated":{"line":10609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10608,"column":0},"generated":{"line":10610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10609,"column":0},"generated":{"line":10611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10610,"column":0},"generated":{"line":10612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10611,"column":0},"generated":{"line":10613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10612,"column":0},"generated":{"line":10614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10613,"column":0},"generated":{"line":10615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10614,"column":0},"generated":{"line":10616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10615,"column":0},"generated":{"line":10617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10616,"column":0},"generated":{"line":10618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10617,"column":0},"generated":{"line":10619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10618,"column":0},"generated":{"line":10620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10619,"column":0},"generated":{"line":10621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10620,"column":0},"generated":{"line":10622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10621,"column":0},"generated":{"line":10623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10622,"column":0},"generated":{"line":10624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10623,"column":0},"generated":{"line":10625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10624,"column":0},"generated":{"line":10626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10625,"column":0},"generated":{"line":10627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10626,"column":0},"generated":{"line":10628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10627,"column":0},"generated":{"line":10629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10628,"column":0},"generated":{"line":10630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10629,"column":0},"generated":{"line":10631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10630,"column":0},"generated":{"line":10632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10631,"column":0},"generated":{"line":10633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10632,"column":0},"generated":{"line":10634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10633,"column":0},"generated":{"line":10635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10634,"column":0},"generated":{"line":10636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10635,"column":0},"generated":{"line":10637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10636,"column":0},"generated":{"line":10638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10637,"column":0},"generated":{"line":10639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10638,"column":0},"generated":{"line":10640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10639,"column":0},"generated":{"line":10641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10640,"column":0},"generated":{"line":10642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10641,"column":0},"generated":{"line":10643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10642,"column":0},"generated":{"line":10644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10643,"column":0},"generated":{"line":10645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10644,"column":0},"generated":{"line":10646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10645,"column":0},"generated":{"line":10647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10646,"column":0},"generated":{"line":10648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10647,"column":0},"generated":{"line":10649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10648,"column":0},"generated":{"line":10650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10649,"column":0},"generated":{"line":10651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10650,"column":0},"generated":{"line":10652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10651,"column":0},"generated":{"line":10653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10652,"column":0},"generated":{"line":10654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10653,"column":0},"generated":{"line":10655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10654,"column":0},"generated":{"line":10656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10655,"column":0},"generated":{"line":10657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10656,"column":0},"generated":{"line":10658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10657,"column":0},"generated":{"line":10659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10658,"column":0},"generated":{"line":10660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10659,"column":0},"generated":{"line":10661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10660,"column":0},"generated":{"line":10662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10661,"column":0},"generated":{"line":10663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10662,"column":0},"generated":{"line":10664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10663,"column":0},"generated":{"line":10665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10664,"column":0},"generated":{"line":10666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10665,"column":0},"generated":{"line":10667,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10666,"column":0},"generated":{"line":10668,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10667,"column":0},"generated":{"line":10669,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10668,"column":0},"generated":{"line":10670,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10669,"column":0},"generated":{"line":10671,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10670,"column":0},"generated":{"line":10672,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10671,"column":0},"generated":{"line":10673,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10672,"column":0},"generated":{"line":10674,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10673,"column":0},"generated":{"line":10675,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10674,"column":0},"generated":{"line":10676,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10675,"column":0},"generated":{"line":10677,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10676,"column":0},"generated":{"line":10678,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10677,"column":0},"generated":{"line":10679,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10678,"column":0},"generated":{"line":10680,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10679,"column":0},"generated":{"line":10681,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10680,"column":0},"generated":{"line":10682,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10681,"column":0},"generated":{"line":10683,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10682,"column":0},"generated":{"line":10684,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10683,"column":0},"generated":{"line":10685,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10684,"column":0},"generated":{"line":10686,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10685,"column":0},"generated":{"line":10687,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10686,"column":0},"generated":{"line":10688,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10687,"column":0},"generated":{"line":10689,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10688,"column":0},"generated":{"line":10690,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10689,"column":0},"generated":{"line":10691,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10690,"column":0},"generated":{"line":10692,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10691,"column":0},"generated":{"line":10693,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10692,"column":0},"generated":{"line":10694,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10693,"column":0},"generated":{"line":10695,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10694,"column":0},"generated":{"line":10696,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10695,"column":0},"generated":{"line":10697,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10696,"column":0},"generated":{"line":10698,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10697,"column":0},"generated":{"line":10699,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10698,"column":0},"generated":{"line":10700,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10699,"column":0},"generated":{"line":10701,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10700,"column":0},"generated":{"line":10702,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10701,"column":0},"generated":{"line":10703,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10702,"column":0},"generated":{"line":10704,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10703,"column":0},"generated":{"line":10705,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10704,"column":0},"generated":{"line":10706,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10705,"column":0},"generated":{"line":10707,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10706,"column":0},"generated":{"line":10708,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10707,"column":0},"generated":{"line":10709,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10708,"column":0},"generated":{"line":10710,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10709,"column":0},"generated":{"line":10711,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10710,"column":0},"generated":{"line":10712,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10711,"column":0},"generated":{"line":10713,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10712,"column":0},"generated":{"line":10714,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10713,"column":0},"generated":{"line":10715,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10714,"column":0},"generated":{"line":10716,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10715,"column":0},"generated":{"line":10717,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10716,"column":0},"generated":{"line":10718,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10717,"column":0},"generated":{"line":10719,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10718,"column":0},"generated":{"line":10720,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10719,"column":0},"generated":{"line":10721,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10720,"column":0},"generated":{"line":10722,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10721,"column":0},"generated":{"line":10723,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10722,"column":0},"generated":{"line":10724,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10723,"column":0},"generated":{"line":10725,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10724,"column":0},"generated":{"line":10726,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10725,"column":0},"generated":{"line":10727,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10726,"column":0},"generated":{"line":10728,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10727,"column":0},"generated":{"line":10729,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10728,"column":0},"generated":{"line":10730,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10729,"column":0},"generated":{"line":10731,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10730,"column":0},"generated":{"line":10732,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10731,"column":0},"generated":{"line":10733,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10732,"column":0},"generated":{"line":10734,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10733,"column":0},"generated":{"line":10735,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10734,"column":0},"generated":{"line":10736,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10735,"column":0},"generated":{"line":10737,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10736,"column":0},"generated":{"line":10738,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10737,"column":0},"generated":{"line":10739,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10738,"column":0},"generated":{"line":10740,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10739,"column":0},"generated":{"line":10741,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10740,"column":0},"generated":{"line":10742,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10741,"column":0},"generated":{"line":10743,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10742,"column":0},"generated":{"line":10744,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10743,"column":0},"generated":{"line":10745,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10744,"column":0},"generated":{"line":10746,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10745,"column":0},"generated":{"line":10747,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10746,"column":0},"generated":{"line":10748,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10747,"column":0},"generated":{"line":10749,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10748,"column":0},"generated":{"line":10750,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10749,"column":0},"generated":{"line":10751,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10750,"column":0},"generated":{"line":10752,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10751,"column":0},"generated":{"line":10753,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10752,"column":0},"generated":{"line":10754,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10753,"column":0},"generated":{"line":10755,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10754,"column":0},"generated":{"line":10756,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10755,"column":0},"generated":{"line":10757,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10756,"column":0},"generated":{"line":10758,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10757,"column":0},"generated":{"line":10759,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10758,"column":0},"generated":{"line":10760,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10759,"column":0},"generated":{"line":10761,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10760,"column":0},"generated":{"line":10762,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10761,"column":0},"generated":{"line":10763,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10762,"column":0},"generated":{"line":10764,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10763,"column":0},"generated":{"line":10765,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10764,"column":0},"generated":{"line":10766,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10765,"column":0},"generated":{"line":10767,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10766,"column":0},"generated":{"line":10768,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10767,"column":0},"generated":{"line":10769,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10768,"column":0},"generated":{"line":10770,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10769,"column":0},"generated":{"line":10771,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10770,"column":0},"generated":{"line":10772,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10771,"column":0},"generated":{"line":10773,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10772,"column":0},"generated":{"line":10774,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10773,"column":0},"generated":{"line":10775,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10774,"column":0},"generated":{"line":10776,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10775,"column":0},"generated":{"line":10777,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10776,"column":0},"generated":{"line":10778,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10777,"column":0},"generated":{"line":10779,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10778,"column":0},"generated":{"line":10780,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10779,"column":0},"generated":{"line":10781,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10780,"column":0},"generated":{"line":10782,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10781,"column":0},"generated":{"line":10783,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10782,"column":0},"generated":{"line":10784,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10783,"column":0},"generated":{"line":10785,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10784,"column":0},"generated":{"line":10786,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10785,"column":0},"generated":{"line":10787,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10786,"column":0},"generated":{"line":10788,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10787,"column":0},"generated":{"line":10789,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10788,"column":0},"generated":{"line":10790,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10789,"column":0},"generated":{"line":10791,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10790,"column":0},"generated":{"line":10792,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10791,"column":0},"generated":{"line":10793,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10792,"column":0},"generated":{"line":10794,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10793,"column":0},"generated":{"line":10795,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10794,"column":0},"generated":{"line":10796,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10795,"column":0},"generated":{"line":10797,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10796,"column":0},"generated":{"line":10798,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10797,"column":0},"generated":{"line":10799,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10798,"column":0},"generated":{"line":10800,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10799,"column":0},"generated":{"line":10801,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10800,"column":0},"generated":{"line":10802,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10801,"column":0},"generated":{"line":10803,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10802,"column":0},"generated":{"line":10804,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10803,"column":0},"generated":{"line":10805,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10804,"column":0},"generated":{"line":10806,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10805,"column":0},"generated":{"line":10807,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10806,"column":0},"generated":{"line":10808,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10807,"column":0},"generated":{"line":10809,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10808,"column":0},"generated":{"line":10810,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10809,"column":0},"generated":{"line":10811,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10810,"column":0},"generated":{"line":10812,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10811,"column":0},"generated":{"line":10813,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10812,"column":0},"generated":{"line":10814,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10813,"column":0},"generated":{"line":10815,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10814,"column":0},"generated":{"line":10816,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10815,"column":0},"generated":{"line":10817,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10816,"column":0},"generated":{"line":10818,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10817,"column":0},"generated":{"line":10819,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10818,"column":0},"generated":{"line":10820,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10819,"column":0},"generated":{"line":10821,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10820,"column":0},"generated":{"line":10822,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10821,"column":0},"generated":{"line":10823,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10822,"column":0},"generated":{"line":10824,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10823,"column":0},"generated":{"line":10825,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10824,"column":0},"generated":{"line":10826,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10825,"column":0},"generated":{"line":10827,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10826,"column":0},"generated":{"line":10828,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10827,"column":0},"generated":{"line":10829,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10828,"column":0},"generated":{"line":10830,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10829,"column":0},"generated":{"line":10831,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10830,"column":0},"generated":{"line":10832,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10831,"column":0},"generated":{"line":10833,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10832,"column":0},"generated":{"line":10834,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10833,"column":0},"generated":{"line":10835,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10834,"column":0},"generated":{"line":10836,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10835,"column":0},"generated":{"line":10837,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10836,"column":0},"generated":{"line":10838,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10837,"column":0},"generated":{"line":10839,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10838,"column":0},"generated":{"line":10840,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10839,"column":0},"generated":{"line":10841,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10840,"column":0},"generated":{"line":10842,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10841,"column":0},"generated":{"line":10843,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10842,"column":0},"generated":{"line":10844,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10843,"column":0},"generated":{"line":10845,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10844,"column":0},"generated":{"line":10846,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10845,"column":0},"generated":{"line":10847,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10846,"column":0},"generated":{"line":10848,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10847,"column":0},"generated":{"line":10849,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10848,"column":0},"generated":{"line":10850,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10849,"column":0},"generated":{"line":10851,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10850,"column":0},"generated":{"line":10852,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10851,"column":0},"generated":{"line":10853,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10852,"column":0},"generated":{"line":10854,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10853,"column":0},"generated":{"line":10855,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10854,"column":0},"generated":{"line":10856,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10855,"column":0},"generated":{"line":10857,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10856,"column":0},"generated":{"line":10858,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10857,"column":0},"generated":{"line":10859,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10858,"column":0},"generated":{"line":10860,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10859,"column":0},"generated":{"line":10861,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10860,"column":0},"generated":{"line":10862,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10861,"column":0},"generated":{"line":10863,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10862,"column":0},"generated":{"line":10864,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10863,"column":0},"generated":{"line":10865,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10864,"column":0},"generated":{"line":10866,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10865,"column":0},"generated":{"line":10867,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10866,"column":0},"generated":{"line":10868,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10867,"column":0},"generated":{"line":10869,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10868,"column":0},"generated":{"line":10870,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10869,"column":0},"generated":{"line":10871,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10870,"column":0},"generated":{"line":10872,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10871,"column":0},"generated":{"line":10873,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10872,"column":0},"generated":{"line":10874,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10873,"column":0},"generated":{"line":10875,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10874,"column":0},"generated":{"line":10876,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10875,"column":0},"generated":{"line":10877,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10876,"column":0},"generated":{"line":10878,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10877,"column":0},"generated":{"line":10879,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10878,"column":0},"generated":{"line":10880,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10879,"column":0},"generated":{"line":10881,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10880,"column":0},"generated":{"line":10882,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10881,"column":0},"generated":{"line":10883,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10882,"column":0},"generated":{"line":10884,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10883,"column":0},"generated":{"line":10885,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10884,"column":0},"generated":{"line":10886,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10885,"column":0},"generated":{"line":10887,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10886,"column":0},"generated":{"line":10888,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10887,"column":0},"generated":{"line":10889,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10888,"column":0},"generated":{"line":10890,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10889,"column":0},"generated":{"line":10891,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10890,"column":0},"generated":{"line":10892,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10891,"column":0},"generated":{"line":10893,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10892,"column":0},"generated":{"line":10894,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10893,"column":0},"generated":{"line":10895,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10894,"column":0},"generated":{"line":10896,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10895,"column":0},"generated":{"line":10897,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10896,"column":0},"generated":{"line":10898,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10897,"column":0},"generated":{"line":10899,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10898,"column":0},"generated":{"line":10900,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10899,"column":0},"generated":{"line":10901,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10900,"column":0},"generated":{"line":10902,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10901,"column":0},"generated":{"line":10903,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10902,"column":0},"generated":{"line":10904,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10903,"column":0},"generated":{"line":10905,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10904,"column":0},"generated":{"line":10906,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10905,"column":0},"generated":{"line":10907,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10906,"column":0},"generated":{"line":10908,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10907,"column":0},"generated":{"line":10909,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10908,"column":0},"generated":{"line":10910,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10909,"column":0},"generated":{"line":10911,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10910,"column":0},"generated":{"line":10912,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10911,"column":0},"generated":{"line":10913,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10912,"column":0},"generated":{"line":10914,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10913,"column":0},"generated":{"line":10915,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10914,"column":0},"generated":{"line":10916,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10915,"column":0},"generated":{"line":10917,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10916,"column":0},"generated":{"line":10918,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10917,"column":0},"generated":{"line":10919,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10918,"column":0},"generated":{"line":10920,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10919,"column":0},"generated":{"line":10921,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10920,"column":0},"generated":{"line":10922,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10921,"column":0},"generated":{"line":10923,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10922,"column":0},"generated":{"line":10924,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10923,"column":0},"generated":{"line":10925,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10924,"column":0},"generated":{"line":10926,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10925,"column":0},"generated":{"line":10927,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10926,"column":0},"generated":{"line":10928,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10927,"column":0},"generated":{"line":10929,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10928,"column":0},"generated":{"line":10930,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10929,"column":0},"generated":{"line":10931,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10930,"column":0},"generated":{"line":10932,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10931,"column":0},"generated":{"line":10933,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10932,"column":0},"generated":{"line":10934,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10933,"column":0},"generated":{"line":10935,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10934,"column":0},"generated":{"line":10936,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10935,"column":0},"generated":{"line":10937,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10936,"column":0},"generated":{"line":10938,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10937,"column":0},"generated":{"line":10939,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10938,"column":0},"generated":{"line":10940,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10939,"column":0},"generated":{"line":10941,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10940,"column":0},"generated":{"line":10942,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10941,"column":0},"generated":{"line":10943,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10942,"column":0},"generated":{"line":10944,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10943,"column":0},"generated":{"line":10945,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10944,"column":0},"generated":{"line":10946,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10945,"column":0},"generated":{"line":10947,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10946,"column":0},"generated":{"line":10948,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10947,"column":0},"generated":{"line":10949,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10948,"column":0},"generated":{"line":10950,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10949,"column":0},"generated":{"line":10951,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10950,"column":0},"generated":{"line":10952,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10951,"column":0},"generated":{"line":10953,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10952,"column":0},"generated":{"line":10954,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10953,"column":0},"generated":{"line":10955,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10954,"column":0},"generated":{"line":10956,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10955,"column":0},"generated":{"line":10957,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10956,"column":0},"generated":{"line":10958,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10957,"column":0},"generated":{"line":10959,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10958,"column":0},"generated":{"line":10960,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10959,"column":0},"generated":{"line":10961,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10960,"column":0},"generated":{"line":10962,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10961,"column":0},"generated":{"line":10963,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10962,"column":0},"generated":{"line":10964,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10963,"column":0},"generated":{"line":10965,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10964,"column":0},"generated":{"line":10966,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10965,"column":0},"generated":{"line":10967,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10966,"column":0},"generated":{"line":10968,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10967,"column":0},"generated":{"line":10969,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10968,"column":0},"generated":{"line":10970,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10969,"column":0},"generated":{"line":10971,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10970,"column":0},"generated":{"line":10972,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10971,"column":0},"generated":{"line":10973,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10972,"column":0},"generated":{"line":10974,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10973,"column":0},"generated":{"line":10975,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10974,"column":0},"generated":{"line":10976,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10975,"column":0},"generated":{"line":10977,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10976,"column":0},"generated":{"line":10978,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10977,"column":0},"generated":{"line":10979,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10978,"column":0},"generated":{"line":10980,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10979,"column":0},"generated":{"line":10981,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10980,"column":0},"generated":{"line":10982,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10981,"column":0},"generated":{"line":10983,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10982,"column":0},"generated":{"line":10984,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10983,"column":0},"generated":{"line":10985,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10984,"column":0},"generated":{"line":10986,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10985,"column":0},"generated":{"line":10987,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10986,"column":0},"generated":{"line":10988,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10987,"column":0},"generated":{"line":10989,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10988,"column":0},"generated":{"line":10990,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10989,"column":0},"generated":{"line":10991,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10990,"column":0},"generated":{"line":10992,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10991,"column":0},"generated":{"line":10993,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10992,"column":0},"generated":{"line":10994,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10993,"column":0},"generated":{"line":10995,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10994,"column":0},"generated":{"line":10996,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10995,"column":0},"generated":{"line":10997,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10996,"column":0},"generated":{"line":10998,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10997,"column":0},"generated":{"line":10999,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10998,"column":0},"generated":{"line":11000,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":10999,"column":0},"generated":{"line":11001,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11000,"column":0},"generated":{"line":11002,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11001,"column":0},"generated":{"line":11003,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11002,"column":0},"generated":{"line":11004,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11003,"column":0},"generated":{"line":11005,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11004,"column":0},"generated":{"line":11006,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11005,"column":0},"generated":{"line":11007,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11006,"column":0},"generated":{"line":11008,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11007,"column":0},"generated":{"line":11009,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11008,"column":0},"generated":{"line":11010,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11009,"column":0},"generated":{"line":11011,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11010,"column":0},"generated":{"line":11012,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11011,"column":0},"generated":{"line":11013,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11012,"column":0},"generated":{"line":11014,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11013,"column":0},"generated":{"line":11015,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11014,"column":0},"generated":{"line":11016,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11015,"column":0},"generated":{"line":11017,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11016,"column":0},"generated":{"line":11018,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11017,"column":0},"generated":{"line":11019,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11018,"column":0},"generated":{"line":11020,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11019,"column":0},"generated":{"line":11021,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11020,"column":0},"generated":{"line":11022,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11021,"column":0},"generated":{"line":11023,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11022,"column":0},"generated":{"line":11024,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11023,"column":0},"generated":{"line":11025,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11024,"column":0},"generated":{"line":11026,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11025,"column":0},"generated":{"line":11027,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11026,"column":0},"generated":{"line":11028,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11027,"column":0},"generated":{"line":11029,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11028,"column":0},"generated":{"line":11030,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11029,"column":0},"generated":{"line":11031,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11030,"column":0},"generated":{"line":11032,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11031,"column":0},"generated":{"line":11033,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11032,"column":0},"generated":{"line":11034,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11033,"column":0},"generated":{"line":11035,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11034,"column":0},"generated":{"line":11036,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11035,"column":0},"generated":{"line":11037,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11036,"column":0},"generated":{"line":11038,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11037,"column":0},"generated":{"line":11039,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11038,"column":0},"generated":{"line":11040,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11039,"column":0},"generated":{"line":11041,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11040,"column":0},"generated":{"line":11042,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11041,"column":0},"generated":{"line":11043,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11042,"column":0},"generated":{"line":11044,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11043,"column":0},"generated":{"line":11045,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11044,"column":0},"generated":{"line":11046,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11045,"column":0},"generated":{"line":11047,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11046,"column":0},"generated":{"line":11048,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11047,"column":0},"generated":{"line":11049,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11048,"column":0},"generated":{"line":11050,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11049,"column":0},"generated":{"line":11051,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11050,"column":0},"generated":{"line":11052,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11051,"column":0},"generated":{"line":11053,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11052,"column":0},"generated":{"line":11054,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11053,"column":0},"generated":{"line":11055,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11054,"column":0},"generated":{"line":11056,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11055,"column":0},"generated":{"line":11057,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11056,"column":0},"generated":{"line":11058,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11057,"column":0},"generated":{"line":11059,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11058,"column":0},"generated":{"line":11060,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11059,"column":0},"generated":{"line":11061,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11060,"column":0},"generated":{"line":11062,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11061,"column":0},"generated":{"line":11063,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11062,"column":0},"generated":{"line":11064,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11063,"column":0},"generated":{"line":11065,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11064,"column":0},"generated":{"line":11066,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11065,"column":0},"generated":{"line":11067,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11066,"column":0},"generated":{"line":11068,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11067,"column":0},"generated":{"line":11069,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11068,"column":0},"generated":{"line":11070,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11069,"column":0},"generated":{"line":11071,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11070,"column":0},"generated":{"line":11072,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11071,"column":0},"generated":{"line":11073,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11072,"column":0},"generated":{"line":11074,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11073,"column":0},"generated":{"line":11075,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11074,"column":0},"generated":{"line":11076,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11075,"column":0},"generated":{"line":11077,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11076,"column":0},"generated":{"line":11078,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11077,"column":0},"generated":{"line":11079,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11078,"column":0},"generated":{"line":11080,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11079,"column":0},"generated":{"line":11081,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11080,"column":0},"generated":{"line":11082,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11081,"column":0},"generated":{"line":11083,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11082,"column":0},"generated":{"line":11084,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11083,"column":0},"generated":{"line":11085,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11084,"column":0},"generated":{"line":11086,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11085,"column":0},"generated":{"line":11087,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11086,"column":0},"generated":{"line":11088,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11087,"column":0},"generated":{"line":11089,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11088,"column":0},"generated":{"line":11090,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11089,"column":0},"generated":{"line":11091,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11090,"column":0},"generated":{"line":11092,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11091,"column":0},"generated":{"line":11093,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11092,"column":0},"generated":{"line":11094,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11093,"column":0},"generated":{"line":11095,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11094,"column":0},"generated":{"line":11096,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11095,"column":0},"generated":{"line":11097,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11096,"column":0},"generated":{"line":11098,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11097,"column":0},"generated":{"line":11099,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11098,"column":0},"generated":{"line":11100,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11099,"column":0},"generated":{"line":11101,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11100,"column":0},"generated":{"line":11102,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11101,"column":0},"generated":{"line":11103,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11102,"column":0},"generated":{"line":11104,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11103,"column":0},"generated":{"line":11105,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11104,"column":0},"generated":{"line":11106,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11105,"column":0},"generated":{"line":11107,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11106,"column":0},"generated":{"line":11108,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11107,"column":0},"generated":{"line":11109,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11108,"column":0},"generated":{"line":11110,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11109,"column":0},"generated":{"line":11111,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11110,"column":0},"generated":{"line":11112,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11111,"column":0},"generated":{"line":11113,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11112,"column":0},"generated":{"line":11114,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11113,"column":0},"generated":{"line":11115,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11114,"column":0},"generated":{"line":11116,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11115,"column":0},"generated":{"line":11117,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11116,"column":0},"generated":{"line":11118,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11117,"column":0},"generated":{"line":11119,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11118,"column":0},"generated":{"line":11120,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11119,"column":0},"generated":{"line":11121,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11120,"column":0},"generated":{"line":11122,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11121,"column":0},"generated":{"line":11123,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11122,"column":0},"generated":{"line":11124,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11123,"column":0},"generated":{"line":11125,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11124,"column":0},"generated":{"line":11126,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11125,"column":0},"generated":{"line":11127,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11126,"column":0},"generated":{"line":11128,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11127,"column":0},"generated":{"line":11129,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11128,"column":0},"generated":{"line":11130,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11129,"column":0},"generated":{"line":11131,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11130,"column":0},"generated":{"line":11132,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11131,"column":0},"generated":{"line":11133,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11132,"column":0},"generated":{"line":11134,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11133,"column":0},"generated":{"line":11135,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11134,"column":0},"generated":{"line":11136,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11135,"column":0},"generated":{"line":11137,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11136,"column":0},"generated":{"line":11138,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11137,"column":0},"generated":{"line":11139,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11138,"column":0},"generated":{"line":11140,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11139,"column":0},"generated":{"line":11141,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11140,"column":0},"generated":{"line":11142,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11141,"column":0},"generated":{"line":11143,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11142,"column":0},"generated":{"line":11144,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11143,"column":0},"generated":{"line":11145,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11144,"column":0},"generated":{"line":11146,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11145,"column":0},"generated":{"line":11147,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11146,"column":0},"generated":{"line":11148,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11147,"column":0},"generated":{"line":11149,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11148,"column":0},"generated":{"line":11150,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11149,"column":0},"generated":{"line":11151,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11150,"column":0},"generated":{"line":11152,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11151,"column":0},"generated":{"line":11153,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11152,"column":0},"generated":{"line":11154,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11153,"column":0},"generated":{"line":11155,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11154,"column":0},"generated":{"line":11156,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11155,"column":0},"generated":{"line":11157,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11156,"column":0},"generated":{"line":11158,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11157,"column":0},"generated":{"line":11159,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11158,"column":0},"generated":{"line":11160,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11159,"column":0},"generated":{"line":11161,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11160,"column":0},"generated":{"line":11162,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11161,"column":0},"generated":{"line":11163,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11162,"column":0},"generated":{"line":11164,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11163,"column":0},"generated":{"line":11165,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11164,"column":0},"generated":{"line":11166,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11165,"column":0},"generated":{"line":11167,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11166,"column":0},"generated":{"line":11168,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11167,"column":0},"generated":{"line":11169,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11168,"column":0},"generated":{"line":11170,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11169,"column":0},"generated":{"line":11171,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11170,"column":0},"generated":{"line":11172,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11171,"column":0},"generated":{"line":11173,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11172,"column":0},"generated":{"line":11174,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11173,"column":0},"generated":{"line":11175,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11174,"column":0},"generated":{"line":11176,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11175,"column":0},"generated":{"line":11177,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11176,"column":0},"generated":{"line":11178,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11177,"column":0},"generated":{"line":11179,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11178,"column":0},"generated":{"line":11180,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11179,"column":0},"generated":{"line":11181,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11180,"column":0},"generated":{"line":11182,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11181,"column":0},"generated":{"line":11183,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11182,"column":0},"generated":{"line":11184,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11183,"column":0},"generated":{"line":11185,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11184,"column":0},"generated":{"line":11186,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11185,"column":0},"generated":{"line":11187,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11186,"column":0},"generated":{"line":11188,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11187,"column":0},"generated":{"line":11189,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11188,"column":0},"generated":{"line":11190,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11189,"column":0},"generated":{"line":11191,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11190,"column":0},"generated":{"line":11192,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11191,"column":0},"generated":{"line":11193,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11192,"column":0},"generated":{"line":11194,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11193,"column":0},"generated":{"line":11195,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11194,"column":0},"generated":{"line":11196,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11195,"column":0},"generated":{"line":11197,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11196,"column":0},"generated":{"line":11198,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11197,"column":0},"generated":{"line":11199,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11198,"column":0},"generated":{"line":11200,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11199,"column":0},"generated":{"line":11201,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11200,"column":0},"generated":{"line":11202,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11201,"column":0},"generated":{"line":11203,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11202,"column":0},"generated":{"line":11204,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11203,"column":0},"generated":{"line":11205,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11204,"column":0},"generated":{"line":11206,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11205,"column":0},"generated":{"line":11207,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11206,"column":0},"generated":{"line":11208,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11207,"column":0},"generated":{"line":11209,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11208,"column":0},"generated":{"line":11210,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11209,"column":0},"generated":{"line":11211,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11210,"column":0},"generated":{"line":11212,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11211,"column":0},"generated":{"line":11213,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11212,"column":0},"generated":{"line":11214,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11213,"column":0},"generated":{"line":11215,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11214,"column":0},"generated":{"line":11216,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11215,"column":0},"generated":{"line":11217,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11216,"column":0},"generated":{"line":11218,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11217,"column":0},"generated":{"line":11219,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11218,"column":0},"generated":{"line":11220,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11219,"column":0},"generated":{"line":11221,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11220,"column":0},"generated":{"line":11222,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11221,"column":0},"generated":{"line":11223,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11222,"column":0},"generated":{"line":11224,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11223,"column":0},"generated":{"line":11225,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11224,"column":0},"generated":{"line":11226,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11225,"column":0},"generated":{"line":11227,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11226,"column":0},"generated":{"line":11228,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11227,"column":0},"generated":{"line":11229,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11228,"column":0},"generated":{"line":11230,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11229,"column":0},"generated":{"line":11231,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11230,"column":0},"generated":{"line":11232,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11231,"column":0},"generated":{"line":11233,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11232,"column":0},"generated":{"line":11234,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11233,"column":0},"generated":{"line":11235,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11234,"column":0},"generated":{"line":11236,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11235,"column":0},"generated":{"line":11237,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11236,"column":0},"generated":{"line":11238,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11237,"column":0},"generated":{"line":11239,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11238,"column":0},"generated":{"line":11240,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11239,"column":0},"generated":{"line":11241,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11240,"column":0},"generated":{"line":11242,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11241,"column":0},"generated":{"line":11243,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11242,"column":0},"generated":{"line":11244,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11243,"column":0},"generated":{"line":11245,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11244,"column":0},"generated":{"line":11246,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11245,"column":0},"generated":{"line":11247,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11246,"column":0},"generated":{"line":11248,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11247,"column":0},"generated":{"line":11249,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11248,"column":0},"generated":{"line":11250,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11249,"column":0},"generated":{"line":11251,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11250,"column":0},"generated":{"line":11252,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11251,"column":0},"generated":{"line":11253,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11252,"column":0},"generated":{"line":11254,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11253,"column":0},"generated":{"line":11255,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11254,"column":0},"generated":{"line":11256,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11255,"column":0},"generated":{"line":11257,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11256,"column":0},"generated":{"line":11258,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11257,"column":0},"generated":{"line":11259,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11258,"column":0},"generated":{"line":11260,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11259,"column":0},"generated":{"line":11261,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11260,"column":0},"generated":{"line":11262,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11261,"column":0},"generated":{"line":11263,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11262,"column":0},"generated":{"line":11264,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11263,"column":0},"generated":{"line":11265,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11264,"column":0},"generated":{"line":11266,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11265,"column":0},"generated":{"line":11267,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11266,"column":0},"generated":{"line":11268,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11267,"column":0},"generated":{"line":11269,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11268,"column":0},"generated":{"line":11270,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11269,"column":0},"generated":{"line":11271,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11270,"column":0},"generated":{"line":11272,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11271,"column":0},"generated":{"line":11273,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11272,"column":0},"generated":{"line":11274,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11273,"column":0},"generated":{"line":11275,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11274,"column":0},"generated":{"line":11276,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11275,"column":0},"generated":{"line":11277,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11276,"column":0},"generated":{"line":11278,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11277,"column":0},"generated":{"line":11279,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11278,"column":0},"generated":{"line":11280,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11279,"column":0},"generated":{"line":11281,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11280,"column":0},"generated":{"line":11282,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11281,"column":0},"generated":{"line":11283,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11282,"column":0},"generated":{"line":11284,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11283,"column":0},"generated":{"line":11285,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11284,"column":0},"generated":{"line":11286,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11285,"column":0},"generated":{"line":11287,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11286,"column":0},"generated":{"line":11288,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11287,"column":0},"generated":{"line":11289,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11288,"column":0},"generated":{"line":11290,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11289,"column":0},"generated":{"line":11291,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11290,"column":0},"generated":{"line":11292,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11291,"column":0},"generated":{"line":11293,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11292,"column":0},"generated":{"line":11294,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11293,"column":0},"generated":{"line":11295,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11294,"column":0},"generated":{"line":11296,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11295,"column":0},"generated":{"line":11297,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11296,"column":0},"generated":{"line":11298,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11297,"column":0},"generated":{"line":11299,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11298,"column":0},"generated":{"line":11300,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11299,"column":0},"generated":{"line":11301,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11300,"column":0},"generated":{"line":11302,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11301,"column":0},"generated":{"line":11303,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11302,"column":0},"generated":{"line":11304,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11303,"column":0},"generated":{"line":11305,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11304,"column":0},"generated":{"line":11306,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11305,"column":0},"generated":{"line":11307,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11306,"column":0},"generated":{"line":11308,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11307,"column":0},"generated":{"line":11309,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11308,"column":0},"generated":{"line":11310,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11309,"column":0},"generated":{"line":11311,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11310,"column":0},"generated":{"line":11312,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11311,"column":0},"generated":{"line":11313,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11312,"column":0},"generated":{"line":11314,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11313,"column":0},"generated":{"line":11315,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11314,"column":0},"generated":{"line":11316,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11315,"column":0},"generated":{"line":11317,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11316,"column":0},"generated":{"line":11318,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11317,"column":0},"generated":{"line":11319,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11318,"column":0},"generated":{"line":11320,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11319,"column":0},"generated":{"line":11321,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11320,"column":0},"generated":{"line":11322,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11321,"column":0},"generated":{"line":11323,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11322,"column":0},"generated":{"line":11324,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11323,"column":0},"generated":{"line":11325,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11324,"column":0},"generated":{"line":11326,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11325,"column":0},"generated":{"line":11327,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11326,"column":0},"generated":{"line":11328,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11327,"column":0},"generated":{"line":11329,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11328,"column":0},"generated":{"line":11330,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11329,"column":0},"generated":{"line":11331,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11330,"column":0},"generated":{"line":11332,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11331,"column":0},"generated":{"line":11333,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11332,"column":0},"generated":{"line":11334,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11333,"column":0},"generated":{"line":11335,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11334,"column":0},"generated":{"line":11336,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11335,"column":0},"generated":{"line":11337,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11336,"column":0},"generated":{"line":11338,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11337,"column":0},"generated":{"line":11339,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11338,"column":0},"generated":{"line":11340,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11339,"column":0},"generated":{"line":11341,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11340,"column":0},"generated":{"line":11342,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11341,"column":0},"generated":{"line":11343,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11342,"column":0},"generated":{"line":11344,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11343,"column":0},"generated":{"line":11345,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11344,"column":0},"generated":{"line":11346,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11345,"column":0},"generated":{"line":11347,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11346,"column":0},"generated":{"line":11348,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11347,"column":0},"generated":{"line":11349,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11348,"column":0},"generated":{"line":11350,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11349,"column":0},"generated":{"line":11351,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11350,"column":0},"generated":{"line":11352,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11351,"column":0},"generated":{"line":11353,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11352,"column":0},"generated":{"line":11354,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11353,"column":0},"generated":{"line":11355,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11354,"column":0},"generated":{"line":11356,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11355,"column":0},"generated":{"line":11357,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11356,"column":0},"generated":{"line":11358,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11357,"column":0},"generated":{"line":11359,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11358,"column":0},"generated":{"line":11360,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11359,"column":0},"generated":{"line":11361,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11360,"column":0},"generated":{"line":11362,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11361,"column":0},"generated":{"line":11363,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11362,"column":0},"generated":{"line":11364,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11363,"column":0},"generated":{"line":11365,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11364,"column":0},"generated":{"line":11366,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11365,"column":0},"generated":{"line":11367,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11366,"column":0},"generated":{"line":11368,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11367,"column":0},"generated":{"line":11369,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11368,"column":0},"generated":{"line":11370,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11369,"column":0},"generated":{"line":11371,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11370,"column":0},"generated":{"line":11372,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11371,"column":0},"generated":{"line":11373,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11372,"column":0},"generated":{"line":11374,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11373,"column":0},"generated":{"line":11375,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11374,"column":0},"generated":{"line":11376,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11375,"column":0},"generated":{"line":11377,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11376,"column":0},"generated":{"line":11378,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11377,"column":0},"generated":{"line":11379,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11378,"column":0},"generated":{"line":11380,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11379,"column":0},"generated":{"line":11381,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11380,"column":0},"generated":{"line":11382,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11381,"column":0},"generated":{"line":11383,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11382,"column":0},"generated":{"line":11384,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11383,"column":0},"generated":{"line":11385,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11384,"column":0},"generated":{"line":11386,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11385,"column":0},"generated":{"line":11387,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11386,"column":0},"generated":{"line":11388,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11387,"column":0},"generated":{"line":11389,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11388,"column":0},"generated":{"line":11390,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11389,"column":0},"generated":{"line":11391,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11390,"column":0},"generated":{"line":11392,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11391,"column":0},"generated":{"line":11393,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11392,"column":0},"generated":{"line":11394,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11393,"column":0},"generated":{"line":11395,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11394,"column":0},"generated":{"line":11396,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11395,"column":0},"generated":{"line":11397,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11396,"column":0},"generated":{"line":11398,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11397,"column":0},"generated":{"line":11399,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11398,"column":0},"generated":{"line":11400,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11399,"column":0},"generated":{"line":11401,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11400,"column":0},"generated":{"line":11402,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11401,"column":0},"generated":{"line":11403,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11402,"column":0},"generated":{"line":11404,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11403,"column":0},"generated":{"line":11405,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11404,"column":0},"generated":{"line":11406,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11405,"column":0},"generated":{"line":11407,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11406,"column":0},"generated":{"line":11408,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11407,"column":0},"generated":{"line":11409,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11408,"column":0},"generated":{"line":11410,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11409,"column":0},"generated":{"line":11411,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11410,"column":0},"generated":{"line":11412,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11411,"column":0},"generated":{"line":11413,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11412,"column":0},"generated":{"line":11414,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11413,"column":0},"generated":{"line":11415,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11414,"column":0},"generated":{"line":11416,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11415,"column":0},"generated":{"line":11417,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11416,"column":0},"generated":{"line":11418,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11417,"column":0},"generated":{"line":11419,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11418,"column":0},"generated":{"line":11420,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11419,"column":0},"generated":{"line":11421,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11420,"column":0},"generated":{"line":11422,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11421,"column":0},"generated":{"line":11423,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11422,"column":0},"generated":{"line":11424,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11423,"column":0},"generated":{"line":11425,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11424,"column":0},"generated":{"line":11426,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11425,"column":0},"generated":{"line":11427,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11426,"column":0},"generated":{"line":11428,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11427,"column":0},"generated":{"line":11429,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11428,"column":0},"generated":{"line":11430,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11429,"column":0},"generated":{"line":11431,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11430,"column":0},"generated":{"line":11432,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11431,"column":0},"generated":{"line":11433,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11432,"column":0},"generated":{"line":11434,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11433,"column":0},"generated":{"line":11435,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11434,"column":0},"generated":{"line":11436,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11435,"column":0},"generated":{"line":11437,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11436,"column":0},"generated":{"line":11438,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11437,"column":0},"generated":{"line":11439,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11438,"column":0},"generated":{"line":11440,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11439,"column":0},"generated":{"line":11441,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11440,"column":0},"generated":{"line":11442,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11441,"column":0},"generated":{"line":11443,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11442,"column":0},"generated":{"line":11444,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11443,"column":0},"generated":{"line":11445,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11444,"column":0},"generated":{"line":11446,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11445,"column":0},"generated":{"line":11447,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11446,"column":0},"generated":{"line":11448,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11447,"column":0},"generated":{"line":11449,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11448,"column":0},"generated":{"line":11450,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11449,"column":0},"generated":{"line":11451,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11450,"column":0},"generated":{"line":11452,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11451,"column":0},"generated":{"line":11453,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11452,"column":0},"generated":{"line":11454,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11453,"column":0},"generated":{"line":11455,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11454,"column":0},"generated":{"line":11456,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11455,"column":0},"generated":{"line":11457,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11456,"column":0},"generated":{"line":11458,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11457,"column":0},"generated":{"line":11459,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11458,"column":0},"generated":{"line":11460,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11459,"column":0},"generated":{"line":11461,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11460,"column":0},"generated":{"line":11462,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11461,"column":0},"generated":{"line":11463,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11462,"column":0},"generated":{"line":11464,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11463,"column":0},"generated":{"line":11465,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11464,"column":0},"generated":{"line":11466,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11465,"column":0},"generated":{"line":11467,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11466,"column":0},"generated":{"line":11468,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11467,"column":0},"generated":{"line":11469,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11468,"column":0},"generated":{"line":11470,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11469,"column":0},"generated":{"line":11471,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11470,"column":0},"generated":{"line":11472,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11471,"column":0},"generated":{"line":11473,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11472,"column":0},"generated":{"line":11474,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11473,"column":0},"generated":{"line":11475,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11474,"column":0},"generated":{"line":11476,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11475,"column":0},"generated":{"line":11477,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11476,"column":0},"generated":{"line":11478,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11477,"column":0},"generated":{"line":11479,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11478,"column":0},"generated":{"line":11480,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11479,"column":0},"generated":{"line":11481,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11480,"column":0},"generated":{"line":11482,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11481,"column":0},"generated":{"line":11483,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11482,"column":0},"generated":{"line":11484,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11483,"column":0},"generated":{"line":11485,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11484,"column":0},"generated":{"line":11486,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11485,"column":0},"generated":{"line":11487,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11486,"column":0},"generated":{"line":11488,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11487,"column":0},"generated":{"line":11489,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11488,"column":0},"generated":{"line":11490,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11489,"column":0},"generated":{"line":11491,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11490,"column":0},"generated":{"line":11492,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11491,"column":0},"generated":{"line":11493,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11492,"column":0},"generated":{"line":11494,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11493,"column":0},"generated":{"line":11495,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11494,"column":0},"generated":{"line":11496,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11495,"column":0},"generated":{"line":11497,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11496,"column":0},"generated":{"line":11498,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11497,"column":0},"generated":{"line":11499,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11498,"column":0},"generated":{"line":11500,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11499,"column":0},"generated":{"line":11501,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11500,"column":0},"generated":{"line":11502,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11501,"column":0},"generated":{"line":11503,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11502,"column":0},"generated":{"line":11504,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11503,"column":0},"generated":{"line":11505,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11504,"column":0},"generated":{"line":11506,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11505,"column":0},"generated":{"line":11507,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11506,"column":0},"generated":{"line":11508,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11507,"column":0},"generated":{"line":11509,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11508,"column":0},"generated":{"line":11510,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11509,"column":0},"generated":{"line":11511,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11510,"column":0},"generated":{"line":11512,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11511,"column":0},"generated":{"line":11513,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11512,"column":0},"generated":{"line":11514,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11513,"column":0},"generated":{"line":11515,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11514,"column":0},"generated":{"line":11516,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11515,"column":0},"generated":{"line":11517,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11516,"column":0},"generated":{"line":11518,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11517,"column":0},"generated":{"line":11519,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11518,"column":0},"generated":{"line":11520,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11519,"column":0},"generated":{"line":11521,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11520,"column":0},"generated":{"line":11522,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11521,"column":0},"generated":{"line":11523,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11522,"column":0},"generated":{"line":11524,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11523,"column":0},"generated":{"line":11525,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11524,"column":0},"generated":{"line":11526,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11525,"column":0},"generated":{"line":11527,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11526,"column":0},"generated":{"line":11528,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11527,"column":0},"generated":{"line":11529,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11528,"column":0},"generated":{"line":11530,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11529,"column":0},"generated":{"line":11531,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11530,"column":0},"generated":{"line":11532,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11531,"column":0},"generated":{"line":11533,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11532,"column":0},"generated":{"line":11534,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11533,"column":0},"generated":{"line":11535,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11534,"column":0},"generated":{"line":11536,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11535,"column":0},"generated":{"line":11537,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11536,"column":0},"generated":{"line":11538,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11537,"column":0},"generated":{"line":11539,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11538,"column":0},"generated":{"line":11540,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11539,"column":0},"generated":{"line":11541,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11540,"column":0},"generated":{"line":11542,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11541,"column":0},"generated":{"line":11543,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11542,"column":0},"generated":{"line":11544,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11543,"column":0},"generated":{"line":11545,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11544,"column":0},"generated":{"line":11546,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11545,"column":0},"generated":{"line":11547,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11546,"column":0},"generated":{"line":11548,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11547,"column":0},"generated":{"line":11549,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11548,"column":0},"generated":{"line":11550,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11549,"column":0},"generated":{"line":11551,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11550,"column":0},"generated":{"line":11552,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11551,"column":0},"generated":{"line":11553,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11552,"column":0},"generated":{"line":11554,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11553,"column":0},"generated":{"line":11555,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11554,"column":0},"generated":{"line":11556,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11555,"column":0},"generated":{"line":11557,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11556,"column":0},"generated":{"line":11558,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11557,"column":0},"generated":{"line":11559,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11558,"column":0},"generated":{"line":11560,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11559,"column":0},"generated":{"line":11561,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11560,"column":0},"generated":{"line":11562,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11561,"column":0},"generated":{"line":11563,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11562,"column":0},"generated":{"line":11564,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11563,"column":0},"generated":{"line":11565,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11564,"column":0},"generated":{"line":11566,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11565,"column":0},"generated":{"line":11567,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11566,"column":0},"generated":{"line":11568,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11567,"column":0},"generated":{"line":11569,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11568,"column":0},"generated":{"line":11570,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11569,"column":0},"generated":{"line":11571,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11570,"column":0},"generated":{"line":11572,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11571,"column":0},"generated":{"line":11573,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11572,"column":0},"generated":{"line":11574,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11573,"column":0},"generated":{"line":11575,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11574,"column":0},"generated":{"line":11576,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11575,"column":0},"generated":{"line":11577,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11576,"column":0},"generated":{"line":11578,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11577,"column":0},"generated":{"line":11579,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11578,"column":0},"generated":{"line":11580,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11579,"column":0},"generated":{"line":11581,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11580,"column":0},"generated":{"line":11582,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11581,"column":0},"generated":{"line":11583,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11582,"column":0},"generated":{"line":11584,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11583,"column":0},"generated":{"line":11585,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11584,"column":0},"generated":{"line":11586,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11585,"column":0},"generated":{"line":11587,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11586,"column":0},"generated":{"line":11588,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11587,"column":0},"generated":{"line":11589,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11588,"column":0},"generated":{"line":11590,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11589,"column":0},"generated":{"line":11591,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11590,"column":0},"generated":{"line":11592,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11591,"column":0},"generated":{"line":11593,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11592,"column":0},"generated":{"line":11594,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11593,"column":0},"generated":{"line":11595,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11594,"column":0},"generated":{"line":11596,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11595,"column":0},"generated":{"line":11597,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11596,"column":0},"generated":{"line":11598,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11597,"column":0},"generated":{"line":11599,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11598,"column":0},"generated":{"line":11600,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11599,"column":0},"generated":{"line":11601,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11600,"column":0},"generated":{"line":11602,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11601,"column":0},"generated":{"line":11603,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11602,"column":0},"generated":{"line":11604,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11603,"column":0},"generated":{"line":11605,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11604,"column":0},"generated":{"line":11606,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11605,"column":0},"generated":{"line":11607,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11606,"column":0},"generated":{"line":11608,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11607,"column":0},"generated":{"line":11609,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11608,"column":0},"generated":{"line":11610,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11609,"column":0},"generated":{"line":11611,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11610,"column":0},"generated":{"line":11612,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11611,"column":0},"generated":{"line":11613,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11612,"column":0},"generated":{"line":11614,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11613,"column":0},"generated":{"line":11615,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11614,"column":0},"generated":{"line":11616,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11615,"column":0},"generated":{"line":11617,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11616,"column":0},"generated":{"line":11618,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11617,"column":0},"generated":{"line":11619,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11618,"column":0},"generated":{"line":11620,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11619,"column":0},"generated":{"line":11621,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11620,"column":0},"generated":{"line":11622,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11621,"column":0},"generated":{"line":11623,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11622,"column":0},"generated":{"line":11624,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11623,"column":0},"generated":{"line":11625,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11624,"column":0},"generated":{"line":11626,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11625,"column":0},"generated":{"line":11627,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11626,"column":0},"generated":{"line":11628,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11627,"column":0},"generated":{"line":11629,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11628,"column":0},"generated":{"line":11630,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11629,"column":0},"generated":{"line":11631,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11630,"column":0},"generated":{"line":11632,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11631,"column":0},"generated":{"line":11633,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11632,"column":0},"generated":{"line":11634,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11633,"column":0},"generated":{"line":11635,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11634,"column":0},"generated":{"line":11636,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11635,"column":0},"generated":{"line":11637,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11636,"column":0},"generated":{"line":11638,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11637,"column":0},"generated":{"line":11639,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11638,"column":0},"generated":{"line":11640,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11639,"column":0},"generated":{"line":11641,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11640,"column":0},"generated":{"line":11642,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11641,"column":0},"generated":{"line":11643,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11642,"column":0},"generated":{"line":11644,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11643,"column":0},"generated":{"line":11645,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11644,"column":0},"generated":{"line":11646,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11645,"column":0},"generated":{"line":11647,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11646,"column":0},"generated":{"line":11648,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11647,"column":0},"generated":{"line":11649,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11648,"column":0},"generated":{"line":11650,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11649,"column":0},"generated":{"line":11651,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11650,"column":0},"generated":{"line":11652,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11651,"column":0},"generated":{"line":11653,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11652,"column":0},"generated":{"line":11654,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11653,"column":0},"generated":{"line":11655,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11654,"column":0},"generated":{"line":11656,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11655,"column":0},"generated":{"line":11657,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11656,"column":0},"generated":{"line":11658,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11657,"column":0},"generated":{"line":11659,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11658,"column":0},"generated":{"line":11660,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11659,"column":0},"generated":{"line":11661,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11660,"column":0},"generated":{"line":11662,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11661,"column":0},"generated":{"line":11663,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11662,"column":0},"generated":{"line":11664,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11663,"column":0},"generated":{"line":11665,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11664,"column":0},"generated":{"line":11666,"column":0}},{"source":"../node_modules/matter-js/build/matter.js","original":{"line":11665,"column":0},"generated":{"line":11667,"column":0}}],"sources":{"../node_modules/matter-js/build/matter.js":"/**\n * matter-js 0.14.2 by @liabru 2018-06-11\n * http://brm.io/matter-js/\n * License MIT\n */\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f) {\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], f);\n  } else {\n    var g;\n    if (typeof window !== 'undefined') {\n      g = window;\n    } else if (typeof global !== 'undefined') {\n      g = global;\n    } else if (typeof self !== 'undefined') {\n      g = self;\n    } else {\n      g = this;\n    }\n    g.Matter = f();\n  }\n})(function() {\n  var define, module, exports;\n  return (function() {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = 'function' == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw ((a.code = 'MODULE_NOT_FOUND'), a);\n          }\n          var p = (n[i] = { exports: {} });\n          e[i][0].call(\n            p.exports,\n            function(r) {\n              var n = e[i][1][r];\n              return o(n || r);\n            },\n            p,\n            p.exports,\n            r,\n            e,\n            n,\n            t\n          );\n        }\n        return n[i].exports;\n      }\n      for (\n        var u = 'function' == typeof require && require, i = 0;\n        i < t.length;\n        i++\n      )\n        o(t[i]);\n      return o;\n    }\n    return r;\n  })()(\n    {\n      1: [\n        function(_dereq_, module, exports) {\n          /**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\n          var Body = {};\n\n          module.exports = Body;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Render = _dereq_('../render/Render');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Axes = _dereq_('../geometry/Axes');\n\n          (function() {\n            Body._inertiaScale = 4;\n            Body._nextCollidingGroupId = 1;\n            Body._nextNonCollidingGroupId = -1;\n            Body._nextCategory = 0x0001;\n\n            /**\n             * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * Vertices must be specified in clockwise order.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} options\n             * @return {body} body\n             */\n            Body.create = function(options) {\n              var defaults = {\n                id: Common.nextId(),\n                type: 'body',\n                label: 'Body',\n                parts: [],\n                plugin: {},\n                angle: 0,\n                vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n                position: { x: 0, y: 0 },\n                force: { x: 0, y: 0 },\n                torque: 0,\n                positionImpulse: { x: 0, y: 0 },\n                constraintImpulse: { x: 0, y: 0, angle: 0 },\n                totalContacts: 0,\n                speed: 0,\n                angularSpeed: 0,\n                velocity: { x: 0, y: 0 },\n                angularVelocity: 0,\n                isSensor: false,\n                isStatic: false,\n                isSleeping: false,\n                motion: 0,\n                sleepThreshold: 60,\n                density: 0.001,\n                restitution: 0,\n                friction: 0.1,\n                frictionStatic: 0.5,\n                frictionAir: 0.01,\n                collisionFilter: {\n                  category: 0x0001,\n                  mask: 0xffffffff,\n                  group: 0,\n                },\n                slop: 0.05,\n                timeScale: 1,\n                render: {\n                  visible: true,\n                  opacity: 1,\n                  sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0,\n                  },\n                  lineWidth: 0,\n                },\n              };\n\n              var body = Common.extend(defaults, options);\n\n              _initProperties(body, options);\n\n              return body;\n            };\n\n            /**\n             * Returns the next unique group index for which bodies will collide.\n             * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n             * See `body.collisionFilter` for more information.\n             * @method nextGroup\n             * @param {bool} [isNonColliding=false]\n             * @return {Number} Unique group index\n             */\n            Body.nextGroup = function(isNonColliding) {\n              if (isNonColliding) return Body._nextNonCollidingGroupId--;\n\n              return Body._nextCollidingGroupId++;\n            };\n\n            /**\n             * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n             * There are 32 available. See `body.collisionFilter` for more information.\n             * @method nextCategory\n             * @return {Number} Unique category bitfield\n             */\n            Body.nextCategory = function() {\n              Body._nextCategory = Body._nextCategory << 1;\n              return Body._nextCategory;\n            };\n\n            /**\n             * Initialises body properties.\n             * @method _initProperties\n             * @private\n             * @param {body} body\n             * @param {} [options]\n             */\n            var _initProperties = function(body, options) {\n              options = options || {};\n\n              // init required properties (order is important)\n              Body.set(body, {\n                bounds: body.bounds || Bounds.create(body.vertices),\n                positionPrev: body.positionPrev || Vector.clone(body.position),\n                anglePrev: body.anglePrev || body.angle,\n                vertices: body.vertices,\n                parts: body.parts || [body],\n                isStatic: body.isStatic,\n                isSleeping: body.isSleeping,\n                parent: body.parent || body,\n              });\n\n              Vertices.rotate(body.vertices, body.angle, body.position);\n              Axes.rotate(body.axes, body.angle);\n              Bounds.update(body.bounds, body.vertices, body.velocity);\n\n              // allow options to override the automatically calculated properties\n              Body.set(body, {\n                axes: options.axes || body.axes,\n                area: options.area || body.area,\n                mass: options.mass || body.mass,\n                inertia: options.inertia || body.inertia,\n              });\n\n              // render properties\n              var defaultFillStyle = body.isStatic\n                  ? '#2e2b44'\n                  : Common.choose([\n                      '#006BA6',\n                      '#0496FF',\n                      '#FFBC42',\n                      '#D81159',\n                      '#8F2D56',\n                    ]),\n                defaultStrokeStyle = '#000';\n              body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n              body.render.strokeStyle =\n                body.render.strokeStyle || defaultStrokeStyle;\n              body.render.sprite.xOffset +=\n                -(body.bounds.min.x - body.position.x) /\n                (body.bounds.max.x - body.bounds.min.x);\n              body.render.sprite.yOffset +=\n                -(body.bounds.min.y - body.position.y) /\n                (body.bounds.max.y - body.bounds.min.y);\n            };\n\n            /**\n             * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n             * Prefer to use the actual setter functions in performance critical situations.\n             * @method set\n             * @param {body} body\n             * @param {} settings A property name (or map of properties and values) to set on the body.\n             * @param {} value The value to set if `settings` is a single property name.\n             */\n            Body.set = function(body, settings, value) {\n              var property;\n\n              if (typeof settings === 'string') {\n                property = settings;\n                settings = {};\n                settings[property] = value;\n              }\n\n              for (property in settings) {\n                value = settings[property];\n\n                if (!settings.hasOwnProperty(property)) continue;\n\n                switch (property) {\n                  case 'isStatic':\n                    Body.setStatic(body, value);\n                    break;\n                  case 'isSleeping':\n                    Sleeping.set(body, value);\n                    break;\n                  case 'mass':\n                    Body.setMass(body, value);\n                    break;\n                  case 'density':\n                    Body.setDensity(body, value);\n                    break;\n                  case 'inertia':\n                    Body.setInertia(body, value);\n                    break;\n                  case 'vertices':\n                    Body.setVertices(body, value);\n                    break;\n                  case 'position':\n                    Body.setPosition(body, value);\n                    break;\n                  case 'angle':\n                    Body.setAngle(body, value);\n                    break;\n                  case 'velocity':\n                    Body.setVelocity(body, value);\n                    break;\n                  case 'angularVelocity':\n                    Body.setAngularVelocity(body, value);\n                    break;\n                  case 'parts':\n                    Body.setParts(body, value);\n                    break;\n                  default:\n                    body[property] = value;\n                }\n              }\n            };\n\n            /**\n             * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n             * @method setStatic\n             * @param {body} body\n             * @param {bool} isStatic\n             */\n            Body.setStatic = function(body, isStatic) {\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.isStatic = isStatic;\n\n                if (isStatic) {\n                  part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia,\n                  };\n\n                  part.restitution = 0;\n                  part.friction = 1;\n                  part.mass = part.inertia = part.density = Infinity;\n                  part.inverseMass = part.inverseInertia = 0;\n\n                  part.positionPrev.x = part.position.x;\n                  part.positionPrev.y = part.position.y;\n                  part.anglePrev = part.angle;\n                  part.angularVelocity = 0;\n                  part.speed = 0;\n                  part.angularSpeed = 0;\n                  part.motion = 0;\n                } else if (part._original) {\n                  part.restitution = part._original.restitution;\n                  part.friction = part._original.friction;\n                  part.mass = part._original.mass;\n                  part.inertia = part._original.inertia;\n                  part.density = part._original.density;\n                  part.inverseMass = part._original.inverseMass;\n                  part.inverseInertia = part._original.inverseInertia;\n\n                  delete part._original;\n                }\n              }\n            };\n\n            /**\n             * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n             * @method setMass\n             * @param {body} body\n             * @param {number} mass\n             */\n            Body.setMass = function(body, mass) {\n              var moment = body.inertia / (body.mass / 6);\n              body.inertia = moment * (mass / 6);\n              body.inverseInertia = 1 / body.inertia;\n\n              body.mass = mass;\n              body.inverseMass = 1 / body.mass;\n              body.density = body.mass / body.area;\n            };\n\n            /**\n             * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n             * @method setDensity\n             * @param {body} body\n             * @param {number} density\n             */\n            Body.setDensity = function(body, density) {\n              Body.setMass(body, density * body.area);\n              body.density = density;\n            };\n\n            /**\n             * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n             * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n             * @method setInertia\n             * @param {body} body\n             * @param {number} inertia\n             */\n            Body.setInertia = function(body, inertia) {\n              body.inertia = inertia;\n              body.inverseInertia = 1 / body.inertia;\n            };\n\n            /**\n             * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n             * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n             * They are then automatically translated to world space based on `body.position`.\n             *\n             * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n             * Vertices must form a convex hull, concave hulls are not supported.\n             *\n             * @method setVertices\n             * @param {body} body\n             * @param {vector[]} vertices\n             */\n            Body.setVertices = function(body, vertices) {\n              // change vertices\n              if (vertices[0].body === body) {\n                body.vertices = vertices;\n              } else {\n                body.vertices = Vertices.create(vertices, body);\n              }\n\n              // update properties\n              body.axes = Axes.fromVertices(body.vertices);\n              body.area = Vertices.area(body.vertices);\n              Body.setMass(body, body.density * body.area);\n\n              // orient vertices around the centre of mass at origin (0, 0)\n              var centre = Vertices.centre(body.vertices);\n              Vertices.translate(body.vertices, centre, -1);\n\n              // update inertia while vertices are at origin (0, 0)\n              Body.setInertia(\n                body,\n                Body._inertiaScale * Vertices.inertia(body.vertices, body.mass)\n              );\n\n              // update geometry\n              Vertices.translate(body.vertices, body.position);\n              Bounds.update(body.bounds, body.vertices, body.velocity);\n            };\n\n            /**\n             * Sets the parts of the `body` and updates mass, inertia and centroid.\n             * Each part will have its parent set to `body`.\n             * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n             * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n             * @method setParts\n             * @param {body} body\n             * @param [body] parts\n             * @param {bool} [autoHull=true]\n             */\n            Body.setParts = function(body, parts, autoHull) {\n              var i;\n\n              // add all the parts, ensuring that the first part is always the parent body\n              parts = parts.slice(0);\n              body.parts.length = 0;\n              body.parts.push(body);\n              body.parent = body;\n\n              for (i = 0; i < parts.length; i++) {\n                var part = parts[i];\n                if (part !== body) {\n                  part.parent = body;\n                  body.parts.push(part);\n                }\n              }\n\n              if (body.parts.length === 1) return;\n\n              autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n              // find the convex hull of all parts to set on the parent body\n              if (autoHull) {\n                var vertices = [];\n                for (i = 0; i < parts.length; i++) {\n                  vertices = vertices.concat(parts[i].vertices);\n                }\n\n                Vertices.clockwiseSort(vertices);\n\n                var hull = Vertices.hull(vertices),\n                  hullCentre = Vertices.centre(hull);\n\n                Body.setVertices(body, hull);\n                Vertices.translate(body.vertices, hullCentre);\n              }\n\n              // sum the properties of all compound parts of the parent body\n              var total = Body._totalProperties(body);\n\n              body.area = total.area;\n              body.parent = body;\n              body.position.x = total.centre.x;\n              body.position.y = total.centre.y;\n              body.positionPrev.x = total.centre.x;\n              body.positionPrev.y = total.centre.y;\n\n              Body.setMass(body, total.mass);\n              Body.setInertia(body, total.inertia);\n              Body.setPosition(body, total.centre);\n            };\n\n            /**\n             * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n             * @method setPosition\n             * @param {body} body\n             * @param {vector} position\n             */\n            Body.setPosition = function(body, position) {\n              var delta = Vector.sub(position, body.position);\n              body.positionPrev.x += delta.x;\n              body.positionPrev.y += delta.y;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.position.x += delta.x;\n                part.position.y += delta.y;\n                Vertices.translate(part.vertices, delta);\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n            };\n\n            /**\n             * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n             * @method setAngle\n             * @param {body} body\n             * @param {number} angle\n             */\n            Body.setAngle = function(body, angle) {\n              var delta = angle - body.angle;\n              body.anglePrev += delta;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n                part.angle += delta;\n                Vertices.rotate(part.vertices, delta, body.position);\n                Axes.rotate(part.axes, delta);\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n                if (i > 0) {\n                  Vector.rotateAbout(\n                    part.position,\n                    delta,\n                    body.position,\n                    part.position\n                  );\n                }\n              }\n            };\n\n            /**\n             * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n             * @method setVelocity\n             * @param {body} body\n             * @param {vector} velocity\n             */\n            Body.setVelocity = function(body, velocity) {\n              body.positionPrev.x = body.position.x - velocity.x;\n              body.positionPrev.y = body.position.y - velocity.y;\n              body.velocity.x = velocity.x;\n              body.velocity.y = velocity.y;\n              body.speed = Vector.magnitude(body.velocity);\n            };\n\n            /**\n             * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n             * @method setAngularVelocity\n             * @param {body} body\n             * @param {number} velocity\n             */\n            Body.setAngularVelocity = function(body, velocity) {\n              body.anglePrev = body.angle - velocity;\n              body.angularVelocity = velocity;\n              body.angularSpeed = Math.abs(body.angularVelocity);\n            };\n\n            /**\n             * Moves a body by a given vector relative to its current position, without imparting any velocity.\n             * @method translate\n             * @param {body} body\n             * @param {vector} translation\n             */\n            Body.translate = function(body, translation) {\n              Body.setPosition(body, Vector.add(body.position, translation));\n            };\n\n            /**\n             * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n             * @method rotate\n             * @param {body} body\n             * @param {number} rotation\n             * @param {vector} [point]\n             */\n            Body.rotate = function(body, rotation, point) {\n              if (!point) {\n                Body.setAngle(body, body.angle + rotation);\n              } else {\n                var cos = Math.cos(rotation),\n                  sin = Math.sin(rotation),\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + (dx * cos - dy * sin),\n                  y: point.y + (dx * sin + dy * cos),\n                });\n\n                Body.setAngle(body, body.angle + rotation);\n              }\n            };\n\n            /**\n             * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n             * @method scale\n             * @param {body} body\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} [point]\n             */\n            Body.scale = function(body, scaleX, scaleY, point) {\n              var totalArea = 0,\n                totalInertia = 0;\n\n              point = point || body.position;\n\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n\n                // scale vertices\n                Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n                // update properties\n                part.axes = Axes.fromVertices(part.vertices);\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, {\n                  x: -part.position.x,\n                  y: -part.position.y,\n                });\n                Body.setInertia(\n                  part,\n                  Body._inertiaScale *\n                    Vertices.inertia(part.vertices, part.mass)\n                );\n                Vertices.translate(part.vertices, {\n                  x: part.position.x,\n                  y: part.position.y,\n                });\n\n                if (i > 0) {\n                  totalArea += part.area;\n                  totalInertia += part.inertia;\n                }\n\n                // scale position\n                part.position.x =\n                  point.x + (part.position.x - point.x) * scaleX;\n                part.position.y =\n                  point.y + (part.position.y - point.y) * scaleY;\n\n                // update bounds\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n\n              // handle parent body\n              if (body.parts.length > 1) {\n                body.area = totalArea;\n\n                if (!body.isStatic) {\n                  Body.setMass(body, body.density * totalArea);\n                  Body.setInertia(body, totalInertia);\n                }\n              }\n\n              // handle circles\n              if (body.circleRadius) {\n                if (scaleX === scaleY) {\n                  body.circleRadius *= scaleX;\n                } else {\n                  // body is no longer a circle\n                  body.circleRadius = null;\n                }\n              }\n            };\n\n            /**\n             * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n             * @method update\n             * @param {body} body\n             * @param {number} deltaTime\n             * @param {number} timeScale\n             * @param {number} correction\n             */\n            Body.update = function(body, deltaTime, timeScale, correction) {\n              var deltaTimeSquared = Math.pow(\n                deltaTime * timeScale * body.timeScale,\n                2\n              );\n\n              // from the previous step\n              var frictionAir =\n                  1 - body.frictionAir * timeScale * body.timeScale,\n                velocityPrevX = body.position.x - body.positionPrev.x,\n                velocityPrevY = body.position.y - body.positionPrev.y;\n\n              // update velocity with Verlet integration\n              body.velocity.x =\n                velocityPrevX * frictionAir * correction +\n                body.force.x / body.mass * deltaTimeSquared;\n              body.velocity.y =\n                velocityPrevY * frictionAir * correction +\n                body.force.y / body.mass * deltaTimeSquared;\n\n              body.positionPrev.x = body.position.x;\n              body.positionPrev.y = body.position.y;\n              body.position.x += body.velocity.x;\n              body.position.y += body.velocity.y;\n\n              // update angular velocity with Verlet integration\n              body.angularVelocity =\n                (body.angle - body.anglePrev) * frictionAir * correction +\n                body.torque / body.inertia * deltaTimeSquared;\n              body.anglePrev = body.angle;\n              body.angle += body.angularVelocity;\n\n              // track speed and acceleration\n              body.speed = Vector.magnitude(body.velocity);\n              body.angularSpeed = Math.abs(body.angularVelocity);\n\n              // transform the body geometry\n              for (var i = 0; i < body.parts.length; i++) {\n                var part = body.parts[i];\n\n                Vertices.translate(part.vertices, body.velocity);\n\n                if (i > 0) {\n                  part.position.x += body.velocity.x;\n                  part.position.y += body.velocity.y;\n                }\n\n                if (body.angularVelocity !== 0) {\n                  Vertices.rotate(\n                    part.vertices,\n                    body.angularVelocity,\n                    body.position\n                  );\n                  Axes.rotate(part.axes, body.angularVelocity);\n                  if (i > 0) {\n                    Vector.rotateAbout(\n                      part.position,\n                      body.angularVelocity,\n                      body.position,\n                      part.position\n                    );\n                  }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n              }\n            };\n\n            /**\n             * Applies a force to a body from a given world-space position, including resulting torque.\n             * @method applyForce\n             * @param {body} body\n             * @param {vector} position\n             * @param {vector} force\n             */\n            Body.applyForce = function(body, position, force) {\n              body.force.x += force.x;\n              body.force.y += force.y;\n              var offset = {\n                x: position.x - body.position.x,\n                y: position.y - body.position.y,\n              };\n              body.torque += offset.x * force.y - offset.y * force.x;\n            };\n\n            /**\n             * Returns the sums of the properties of all compound parts of the parent body.\n             * @method _totalProperties\n             * @private\n             * @param {body} body\n             * @return {}\n             */\n            Body._totalProperties = function(body) {\n              // from equations at:\n              // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n              // http://output.to/sideway/default.asp?qno=121100087\n\n              var properties = {\n                mass: 0,\n                area: 0,\n                inertia: 0,\n                centre: { x: 0, y: 0 },\n              };\n\n              // sum the properties of all compound parts of the parent body\n              for (\n                var i = body.parts.length === 1 ? 0 : 1;\n                i < body.parts.length;\n                i++\n              ) {\n                var part = body.parts[i],\n                  mass = part.mass !== Infinity ? part.mass : 1;\n\n                properties.mass += mass;\n                properties.area += part.area;\n                properties.inertia += part.inertia;\n                properties.centre = Vector.add(\n                  properties.centre,\n                  Vector.mult(part.position, mass)\n                );\n              }\n\n              properties.centre = Vector.div(\n                properties.centre,\n                properties.mass\n              );\n\n              return properties;\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when a body starts sleeping (where `this` is the body).\n             *\n             * @event sleepStart\n             * @this {body} The body that has started sleeping\n             * @param {} event An event object\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a body ends sleeping (where `this` is the body).\n             *\n             * @event sleepEnd\n             * @this {body} The body that has ended sleeping\n             * @param {} event An event object\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"body\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage bodies.\n             *\n             * @property label\n             * @type string\n             * @default \"Body\"\n             */\n\n            /**\n             * An array of bodies that make up this body.\n             * The first body in the array must always be a self reference to the current body instance.\n             * All bodies in the `parts` array together form a single rigid compound body.\n             * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n             * Parts themselves should never be added to a `World`, only the parent body should be.\n             * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n             *\n             * @property parts\n             * @type body[]\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n\n            /**\n             * A self reference if the body is _not_ a part of another body.\n             * Otherwise this is a reference to the body that this is a part of.\n             * See `body.parts`.\n             *\n             * @property parent\n             * @type body\n             */\n\n            /**\n             * A `Number` specifying the angle of the body, in radians.\n             *\n             * @property angle\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * An array of `Vector` objects that specify the convex hull of the rigid body.\n             * These should be provided about the origin `(0, 0)`. E.g.\n             *\n             *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n             *\n             * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n             * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n             *\n             * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n             * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n             *\n             * @property vertices\n             * @type vector[]\n             */\n\n            /**\n             * A `Vector` that specifies the current world-space position of the body.\n             *\n             * @property position\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n             *\n             * @property force\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n             *\n             * @property torque\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n             *\n             * @readOnly\n             * @property speed\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n             *\n             * @readOnly\n             * @property angularSpeed\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n             * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n             *\n             * @readOnly\n             * @property velocity\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n             * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n             *\n             * @readOnly\n             * @property angularVelocity\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n             * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n             *\n             * @property isStatic\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n             *\n             * @property isSensor\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n             * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n             *\n             * @property isSleeping\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n             * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n             *\n             * @readOnly\n             * @property motion\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n             *\n             * @property sleepThreshold\n             * @type number\n             * @default 60\n             */\n\n            /**\n             * A `Number` that defines the density of the body, that is its mass per unit area.\n             * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n             * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n             *\n             * @property density\n             * @type number\n             * @default 0.001\n             */\n\n            /**\n             * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n             * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n             *\n             * @property mass\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the inverse mass of the body (`1 / mass`).\n             * If you modify this value, you must also modify the `body.mass` property.\n             *\n             * @property inverseMass\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n             * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n             * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n             *\n             * @property inertia\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n             * If you modify this value, you must also modify the `body.inertia` property.\n             *\n             * @property inverseInertia\n             * @type number\n             */\n\n            /**\n             * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n             * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n             * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n             * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n             *\n             *     Math.max(bodyA.restitution, bodyB.restitution)\n             *\n             * @property restitution\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n             * A value of `0` means that the body may slide indefinitely.\n             * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n             *\n             * The effects of the value may be non-linear.\n             * High values may be unstable depending on the body.\n             * The engine uses a Coulomb friction model including static and kinetic friction.\n             * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n             *\n             *     Math.min(bodyA.friction, bodyB.friction)\n             *\n             * @property friction\n             * @type number\n             * @default 0.1\n             */\n\n            /**\n             * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n             * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n             * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n             * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n             *\n             * @property frictionStatic\n             * @type number\n             * @default 0.5\n             */\n\n            /**\n             * A `Number` that defines the air friction of the body (air resistance).\n             * A value of `0` means the body will never slow as it moves through space.\n             * The higher the value, the faster a body slows when moving through space.\n             * The effects of the value are non-linear.\n             *\n             * @property frictionAir\n             * @type number\n             * @default 0.01\n             */\n\n            /**\n             * An `Object` that specifies the collision filtering properties of this body.\n             *\n             * Collisions between two bodies will obey the following rules:\n             * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n             *   they will always collide if the value is positive, and they will never collide\n             *   if the value is negative.\n             * - If the two bodies have different values of `collisionFilter.group` or if one\n             *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n             *\n             * Each body belongs to a collision category, given by `collisionFilter.category`. This\n             * value is used as a bit field and the category should have only one bit set, meaning that\n             * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n             * different collision categories available.\n             *\n             * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n             * the categories it collides with (the value is the bitwise AND value of all these categories).\n             *\n             * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n             * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n             * are both true.\n             *\n             * @property collisionFilter\n             * @type object\n             */\n\n            /**\n             * An Integer `Number`, that specifies the collision group this body belongs to.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.group\n             * @type object\n             * @default 0\n             */\n\n            /**\n             * A bit field that specifies the collision category this body belongs to.\n             * The category value should have only one bit set, for example `0x0001`.\n             * This means there are up to 32 unique collision categories available.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.category\n             * @type object\n             * @default 1\n             */\n\n            /**\n             * A bit mask that specifies the collision categories this body may collide with.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter.mask\n             * @type object\n             * @default -1\n             */\n\n            /**\n             * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n             * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n             * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n             *\n             * @property slop\n             * @type number\n             * @default 0.05\n             */\n\n            /**\n             * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n             *\n             * @property timeScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n             *\n             * @property render\n             * @type object\n             */\n\n            /**\n             * A flag that indicates if the body should be rendered.\n             *\n             * @property render.visible\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * Sets the opacity to use when rendering.\n             *\n             * @property render.opacity\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * An `Object` that defines the sprite properties to use when rendering, if any.\n             *\n             * @property render.sprite\n             * @type object\n             */\n\n            /**\n             * An `String` that defines the path to the image to use as the sprite texture, if any.\n             *\n             * @property render.sprite.texture\n             * @type string\n             */\n\n            /**\n             * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n             *\n             * @property render.sprite.xScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n             *\n             * @property render.sprite.yScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n             *\n             * @property render.sprite.xOffset\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n             *\n             * @property render.sprite.yOffset\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n             * A value of `0` means no outline will be rendered.\n             *\n             * @property render.lineWidth\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.fillStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.strokeStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * An array of unique axis vectors (edge normals) used for collision detection.\n             * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n             * They are constantly updated by `Body.update` during the simulation.\n             *\n             * @property axes\n             * @type vector[]\n             */\n\n            /**\n             * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n             *\n             * @property area\n             * @type string\n             * @default\n             */\n\n            /**\n             * A `Bounds` object that defines the AABB region for the body.\n             * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n             *\n             * @property bounds\n             * @type bounds\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Sleeping': 22,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          '../render/Render': 31,\n        },\n      ],\n      2: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n           * A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n           * It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n           * Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Composite\n           */\n\n          var Composite = {};\n\n          module.exports = Composite;\n\n          var Events = _dereq_('../core/Events');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Body = _dereq_('./Body');\n\n          (function() {\n            /**\n             * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properites section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} [options]\n             * @return {composite} A new composite\n             */\n            Composite.create = function(options) {\n              return Common.extend(\n                {\n                  id: Common.nextId(),\n                  type: 'composite',\n                  parent: null,\n                  isModified: false,\n                  bodies: [],\n                  constraints: [],\n                  composites: [],\n                  label: 'Composite',\n                  plugin: {},\n                },\n                options\n              );\n            };\n\n            /**\n             * Sets the composite's `isModified` flag.\n             * If `updateParents` is true, all parents will be set (default: false).\n             * If `updateChildren` is true, all children will be set (default: false).\n             * @method setModified\n             * @param {composite} composite\n             * @param {boolean} isModified\n             * @param {boolean} [updateParents=false]\n             * @param {boolean} [updateChildren=false]\n             */\n            Composite.setModified = function(\n              composite,\n              isModified,\n              updateParents,\n              updateChildren\n            ) {\n              composite.isModified = isModified;\n\n              if (updateParents && composite.parent) {\n                Composite.setModified(\n                  composite.parent,\n                  isModified,\n                  updateParents,\n                  updateChildren\n                );\n              }\n\n              if (updateChildren) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  var childComposite = composite.composites[i];\n                  Composite.setModified(\n                    childComposite,\n                    isModified,\n                    updateParents,\n                    updateChildren\n                  );\n                }\n              }\n            };\n\n            /**\n             * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n             * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n             * @method add\n             * @param {composite} composite\n             * @param {} object\n             * @return {composite} The original composite with the objects added\n             */\n            Composite.add = function(composite, object) {\n              var objects = [].concat(object);\n\n              Events.trigger(composite, 'beforeAdd', { object: object });\n\n              for (var i = 0; i < objects.length; i++) {\n                var obj = objects[i];\n\n                switch (obj.type) {\n                  case 'body':\n                    // skip adding compound parts\n                    if (obj.parent !== obj) {\n                      Common.warn(\n                        'Composite.add: skipped adding a compound body part (you must add its parent instead)'\n                      );\n                      break;\n                    }\n\n                    Composite.addBody(composite, obj);\n                    break;\n                  case 'constraint':\n                    Composite.addConstraint(composite, obj);\n                    break;\n                  case 'composite':\n                    Composite.addComposite(composite, obj);\n                    break;\n                  case 'mouseConstraint':\n                    Composite.addConstraint(composite, obj.constraint);\n                    break;\n                }\n              }\n\n              Events.trigger(composite, 'afterAdd', { object: object });\n\n              return composite;\n            };\n\n            /**\n             * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n             * Optionally searching its children recursively.\n             * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n             * @method remove\n             * @param {composite} composite\n             * @param {} object\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the objects removed\n             */\n            Composite.remove = function(composite, object, deep) {\n              var objects = [].concat(object);\n\n              Events.trigger(composite, 'beforeRemove', { object: object });\n\n              for (var i = 0; i < objects.length; i++) {\n                var obj = objects[i];\n\n                switch (obj.type) {\n                  case 'body':\n                    Composite.removeBody(composite, obj, deep);\n                    break;\n                  case 'constraint':\n                    Composite.removeConstraint(composite, obj, deep);\n                    break;\n                  case 'composite':\n                    Composite.removeComposite(composite, obj, deep);\n                    break;\n                  case 'mouseConstraint':\n                    Composite.removeConstraint(composite, obj.constraint);\n                    break;\n                }\n              }\n\n              Events.trigger(composite, 'afterRemove', { object: object });\n\n              return composite;\n            };\n\n            /**\n             * Adds a composite to the given composite.\n             * @private\n             * @method addComposite\n             * @param {composite} compositeA\n             * @param {composite} compositeB\n             * @return {composite} The original compositeA with the objects from compositeB added\n             */\n            Composite.addComposite = function(compositeA, compositeB) {\n              compositeA.composites.push(compositeB);\n              compositeB.parent = compositeA;\n              Composite.setModified(compositeA, true, true, false);\n              return compositeA;\n            };\n\n            /**\n             * Removes a composite from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeComposite\n             * @param {composite} compositeA\n             * @param {composite} compositeB\n             * @param {boolean} [deep=false]\n             * @return {composite} The original compositeA with the composite removed\n             */\n            Composite.removeComposite = function(compositeA, compositeB, deep) {\n              var position = Common.indexOf(compositeA.composites, compositeB);\n              if (position !== -1) {\n                Composite.removeCompositeAt(compositeA, position);\n                Composite.setModified(compositeA, true, true, false);\n              }\n\n              if (deep) {\n                for (var i = 0; i < compositeA.composites.length; i++) {\n                  Composite.removeComposite(\n                    compositeA.composites[i],\n                    compositeB,\n                    true\n                  );\n                }\n              }\n\n              return compositeA;\n            };\n\n            /**\n             * Removes a composite from the given composite.\n             * @private\n             * @method removeCompositeAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the composite removed\n             */\n            Composite.removeCompositeAt = function(composite, position) {\n              composite.composites.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Adds a body to the given composite.\n             * @private\n             * @method addBody\n             * @param {composite} composite\n             * @param {body} body\n             * @return {composite} The original composite with the body added\n             */\n            Composite.addBody = function(composite, body) {\n              composite.bodies.push(body);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeBody\n             * @param {composite} composite\n             * @param {body} body\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the body removed\n             */\n            Composite.removeBody = function(composite, body, deep) {\n              var position = Common.indexOf(composite.bodies, body);\n              if (position !== -1) {\n                Composite.removeBodyAt(composite, position);\n                Composite.setModified(composite, true, true, false);\n              }\n\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.removeBody(composite.composites[i], body, true);\n                }\n              }\n\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite.\n             * @private\n             * @method removeBodyAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the body removed\n             */\n            Composite.removeBodyAt = function(composite, position) {\n              composite.bodies.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Adds a constraint to the given composite.\n             * @private\n             * @method addConstraint\n             * @param {composite} composite\n             * @param {constraint} constraint\n             * @return {composite} The original composite with the constraint added\n             */\n            Composite.addConstraint = function(composite, constraint) {\n              composite.constraints.push(constraint);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes a constraint from the given composite, and optionally searching its children recursively.\n             * @private\n             * @method removeConstraint\n             * @param {composite} composite\n             * @param {constraint} constraint\n             * @param {boolean} [deep=false]\n             * @return {composite} The original composite with the constraint removed\n             */\n            Composite.removeConstraint = function(composite, constraint, deep) {\n              var position = Common.indexOf(composite.constraints, constraint);\n              if (position !== -1) {\n                Composite.removeConstraintAt(composite, position);\n              }\n\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.removeConstraint(\n                    composite.composites[i],\n                    constraint,\n                    true\n                  );\n                }\n              }\n\n              return composite;\n            };\n\n            /**\n             * Removes a body from the given composite.\n             * @private\n             * @method removeConstraintAt\n             * @param {composite} composite\n             * @param {number} position\n             * @return {composite} The original composite with the constraint removed\n             */\n            Composite.removeConstraintAt = function(composite, position) {\n              composite.constraints.splice(position, 1);\n              Composite.setModified(composite, true, true, false);\n              return composite;\n            };\n\n            /**\n             * Removes all bodies, constraints and composites from the given composite.\n             * Optionally clearing its children recursively.\n             * @method clear\n             * @param {composite} composite\n             * @param {boolean} keepStatic\n             * @param {boolean} [deep=false]\n             */\n            Composite.clear = function(composite, keepStatic, deep) {\n              if (deep) {\n                for (var i = 0; i < composite.composites.length; i++) {\n                  Composite.clear(composite.composites[i], keepStatic, true);\n                }\n              }\n\n              if (keepStatic) {\n                composite.bodies = composite.bodies.filter(function(body) {\n                  return body.isStatic;\n                });\n              } else {\n                composite.bodies.length = 0;\n              }\n\n              composite.constraints.length = 0;\n              composite.composites.length = 0;\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Returns all bodies in the given composite, including all bodies in its children, recursively.\n             * @method allBodies\n             * @param {composite} composite\n             * @return {body[]} All the bodies\n             */\n            Composite.allBodies = function(composite) {\n              var bodies = [].concat(composite.bodies);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                bodies = bodies.concat(\n                  Composite.allBodies(composite.composites[i])\n                );\n\n              return bodies;\n            };\n\n            /**\n             * Returns all constraints in the given composite, including all constraints in its children, recursively.\n             * @method allConstraints\n             * @param {composite} composite\n             * @return {constraint[]} All the constraints\n             */\n            Composite.allConstraints = function(composite) {\n              var constraints = [].concat(composite.constraints);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                constraints = constraints.concat(\n                  Composite.allConstraints(composite.composites[i])\n                );\n\n              return constraints;\n            };\n\n            /**\n             * Returns all composites in the given composite, including all composites in its children, recursively.\n             * @method allComposites\n             * @param {composite} composite\n             * @return {composite[]} All the composites\n             */\n            Composite.allComposites = function(composite) {\n              var composites = [].concat(composite.composites);\n\n              for (var i = 0; i < composite.composites.length; i++)\n                composites = composites.concat(\n                  Composite.allComposites(composite.composites[i])\n                );\n\n              return composites;\n            };\n\n            /**\n             * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n             * @method get\n             * @param {composite} composite\n             * @param {number} id\n             * @param {string} type\n             * @return {object} The requested object, if found\n             */\n            Composite.get = function(composite, id, type) {\n              var objects, object;\n\n              switch (type) {\n                case 'body':\n                  objects = Composite.allBodies(composite);\n                  break;\n                case 'constraint':\n                  objects = Composite.allConstraints(composite);\n                  break;\n                case 'composite':\n                  objects = Composite.allComposites(composite).concat(\n                    composite\n                  );\n                  break;\n              }\n\n              if (!objects) return null;\n\n              object = objects.filter(function(object) {\n                return object.id.toString() === id.toString();\n              });\n\n              return object.length === 0 ? null : object[0];\n            };\n\n            /**\n             * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n             * @method move\n             * @param {compositeA} compositeA\n             * @param {object[]} objects\n             * @param {compositeB} compositeB\n             * @return {composite} Returns compositeA\n             */\n            Composite.move = function(compositeA, objects, compositeB) {\n              Composite.remove(compositeA, objects);\n              Composite.add(compositeB, objects);\n              return compositeA;\n            };\n\n            /**\n             * Assigns new ids for all objects in the composite, recursively.\n             * @method rebase\n             * @param {composite} composite\n             * @return {composite} Returns composite\n             */\n            Composite.rebase = function(composite) {\n              var objects = Composite.allBodies(composite)\n                .concat(Composite.allConstraints(composite))\n                .concat(Composite.allComposites(composite));\n\n              for (var i = 0; i < objects.length; i++) {\n                objects[i].id = Common.nextId();\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Translates all children in the composite by a given vector relative to their current positions,\n             * without imparting any velocity.\n             * @method translate\n             * @param {composite} composite\n             * @param {vector} translation\n             * @param {bool} [recursive=true]\n             */\n            Composite.translate = function(composite, translation, recursive) {\n              var bodies = recursive\n                ? Composite.allBodies(composite)\n                : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                Body.translate(bodies[i], translation);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n             * @method rotate\n             * @param {composite} composite\n             * @param {number} rotation\n             * @param {vector} point\n             * @param {bool} [recursive=true]\n             */\n            Composite.rotate = function(composite, rotation, point, recursive) {\n              var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                bodies = recursive\n                  ? Composite.allBodies(composite)\n                  : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + (dx * cos - dy * sin),\n                  y: point.y + (dx * sin + dy * cos),\n                });\n\n                Body.rotate(body, rotation);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n             * @method scale\n             * @param {composite} composite\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} point\n             * @param {bool} [recursive=true]\n             */\n            Composite.scale = function(\n              composite,\n              scaleX,\n              scaleY,\n              point,\n              recursive\n            ) {\n              var bodies = recursive\n                ? Composite.allBodies(composite)\n                : composite.bodies;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  dx = body.position.x - point.x,\n                  dy = body.position.y - point.y;\n\n                Body.setPosition(body, {\n                  x: point.x + dx * scaleX,\n                  y: point.y + dy * scaleY,\n                });\n\n                Body.scale(body, scaleX, scaleY);\n              }\n\n              Composite.setModified(composite, true, true, false);\n\n              return composite;\n            };\n\n            /**\n             * Returns the union of the bounds of all of the composite's bodies.\n             * @method bounds\n             * @param {composite} composite The composite.\n             * @returns {bounds} The composite bounds.\n             */\n            Composite.bounds = function(composite) {\n              var bodies = Composite.allBodies(composite),\n                vertices = [];\n\n              for (var i = 0; i < bodies.length; i += 1) {\n                var body = bodies[i];\n                vertices.push(body.bounds.min, body.bounds.max);\n              }\n\n              return Bounds.create(vertices);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when a call to `Composite.add` is made, before objects have been added.\n             *\n             * @event beforeAdd\n             * @param {} event An event object\n             * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.add` is made, after objects have been added.\n             *\n             * @event afterAdd\n             * @param {} event An event object\n             * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.remove` is made, before objects have been removed.\n             *\n             * @event beforeRemove\n             * @param {} event An event object\n             * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when a call to `Composite.remove` is made, after objects have been removed.\n             *\n             * @event afterRemove\n             * @param {} event An event object\n             * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"composite\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage composites.\n             *\n             * @property label\n             * @type string\n             * @default \"Composite\"\n             */\n\n            /**\n             * A flag that specifies whether the composite has been modified during the current step.\n             * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n             * If you need to change it manually, you should use the `Composite.setModified` method.\n             *\n             * @property isModified\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n             *\n             * @property parent\n             * @type composite\n             * @default null\n             */\n\n            /**\n             * An array of `Body` that are _direct_ children of this composite.\n             * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n             *\n             * @property bodies\n             * @type body[]\n             * @default []\n             */\n\n            /**\n             * An array of `Constraint` that are _direct_ children of this composite.\n             * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n             *\n             * @property constraints\n             * @type constraint[]\n             * @default []\n             */\n\n            /**\n             * An array of `Composite` that are _direct_ children of this composite.\n             * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n             * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n             *\n             * @property composites\n             * @type composite[]\n             * @default []\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../geometry/Bounds': 26,\n          './Body': 1,\n        },\n      ],\n      3: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.World` module contains methods for creating and manipulating the world composite.\n           * A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n           * A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n           * It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n           * There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class World\n           * @extends Composite\n           */\n\n          var World = {};\n\n          module.exports = World;\n\n          var Composite = _dereq_('./Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @constructor\n             * @param {} options\n             * @return {world} A new world\n             */\n            World.create = function(options) {\n              var composite = Composite.create();\n\n              var defaults = {\n                label: 'World',\n                gravity: {\n                  x: 0,\n                  y: 1,\n                  scale: 0.001,\n                },\n                bounds: {\n                  min: { x: -Infinity, y: -Infinity },\n                  max: { x: Infinity, y: Infinity },\n                },\n              };\n\n              return Common.extend(composite, defaults, options);\n            };\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * The gravity to apply on the world.\n             *\n             * @property gravity\n             * @type object\n             */\n\n            /**\n             * The gravity x component.\n             *\n             * @property gravity.x\n             * @type object\n             * @default 0\n             */\n\n            /**\n             * The gravity y component.\n             *\n             * @property gravity.y\n             * @type object\n             * @default 1\n             */\n\n            /**\n             * The gravity scale factor.\n             *\n             * @property gravity.scale\n             * @type object\n             * @default 0.001\n             */\n\n            /**\n             * A `Bounds` object that defines the world bounds for collision detection.\n             *\n             * @property bounds\n             * @type bounds\n             * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n             */\n\n            // World is a Composite body\n            // see src/module/Outro.js for these aliases:\n\n            /**\n             * An alias for Composite.add\n             * @method add\n             * @param {world} world\n             * @param {} object\n             * @return {composite} The original world with the objects added\n             */\n\n            /**\n             * An alias for Composite.remove\n             * @method remove\n             * @param {world} world\n             * @param {} object\n             * @param {boolean} [deep=false]\n             * @return {composite} The original world with the objects removed\n             */\n\n            /**\n             * An alias for Composite.clear\n             * @method clear\n             * @param {world} world\n             * @param {boolean} keepStatic\n             */\n\n            /**\n             * An alias for Composite.addComposite\n             * @method addComposite\n             * @param {world} world\n             * @param {composite} composite\n             * @return {world} The original world with the objects from composite added\n             */\n\n            /**\n             * An alias for Composite.addBody\n             * @method addBody\n             * @param {world} world\n             * @param {body} body\n             * @return {world} The original world with the body added\n             */\n\n            /**\n             * An alias for Composite.addConstraint\n             * @method addConstraint\n             * @param {world} world\n             * @param {constraint} constraint\n             * @return {world} The original world with the constraint added\n             */\n          })();\n        },\n        {\n          '../constraint/Constraint': 12,\n          '../core/Common': 14,\n          './Composite': 2,\n        },\n      ],\n      4: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n           *\n           * @class Contact\n           */\n\n          var Contact = {};\n\n          module.exports = Contact;\n\n          (function() {\n            /**\n             * Creates a new contact.\n             * @method create\n             * @param {vertex} vertex\n             * @return {contact} A new contact\n             */\n            Contact.create = function(vertex) {\n              return {\n                id: Contact.id(vertex),\n                vertex: vertex,\n                normalImpulse: 0,\n                tangentImpulse: 0,\n              };\n            };\n\n            /**\n             * Generates a contact id.\n             * @method id\n             * @param {vertex} vertex\n             * @return {string} Unique contactID\n             */\n            Contact.id = function(vertex) {\n              return vertex.body.id + '_' + vertex.index;\n            };\n          })();\n        },\n        {},\n      ],\n      5: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n           *\n           * @class Detector\n           */\n\n          // TODO: speculative contacts\n\n          var Detector = {};\n\n          module.exports = Detector;\n\n          var SAT = _dereq_('./SAT');\n          var Pair = _dereq_('./Pair');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            /**\n             * Finds all collisions given a list of pairs.\n             * @method collisions\n             * @param {pair[]} broadphasePairs\n             * @param {engine} engine\n             * @return {array} collisions\n             */\n            Detector.collisions = function(broadphasePairs, engine) {\n              var collisions = [],\n                pairsTable = engine.pairs.table;\n\n              for (var i = 0; i < broadphasePairs.length; i++) {\n                var bodyA = broadphasePairs[i][0],\n                  bodyB = broadphasePairs[i][1];\n\n                if (\n                  (bodyA.isStatic || bodyA.isSleeping) &&\n                  (bodyB.isStatic || bodyB.isSleeping)\n                )\n                  continue;\n\n                if (\n                  !Detector.canCollide(\n                    bodyA.collisionFilter,\n                    bodyB.collisionFilter\n                  )\n                )\n                  continue;\n\n                // mid phase\n                if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                  for (\n                    var j = bodyA.parts.length > 1 ? 1 : 0;\n                    j < bodyA.parts.length;\n                    j++\n                  ) {\n                    var partA = bodyA.parts[j];\n\n                    for (\n                      var k = bodyB.parts.length > 1 ? 1 : 0;\n                      k < bodyB.parts.length;\n                      k++\n                    ) {\n                      var partB = bodyB.parts[k];\n\n                      if (\n                        (partA === bodyA && partB === bodyB) ||\n                        Bounds.overlaps(partA.bounds, partB.bounds)\n                      ) {\n                        // find a previous collision we could reuse\n                        var pairId = Pair.id(partA, partB),\n                          pair = pairsTable[pairId],\n                          previousCollision;\n\n                        if (pair && pair.isActive) {\n                          previousCollision = pair.collision;\n                        } else {\n                          previousCollision = null;\n                        }\n\n                        // narrow phase\n                        var collision = SAT.collides(\n                          partA,\n                          partB,\n                          previousCollision\n                        );\n\n                        if (collision.collided) {\n                          collisions.push(collision);\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Returns `true` if both supplied collision filters will allow a collision to occur.\n             * See `body.collisionFilter` for more information.\n             * @method canCollide\n             * @param {} filterA\n             * @param {} filterB\n             * @return {bool} `true` if collision can occur\n             */\n            Detector.canCollide = function(filterA, filterB) {\n              if (filterA.group === filterB.group && filterA.group !== 0)\n                return filterA.group > 0;\n\n              return (\n                (filterA.mask & filterB.category) !== 0 &&\n                (filterB.mask & filterA.category) !== 0\n              );\n            };\n          })();\n        },\n        { '../geometry/Bounds': 26, './Pair': 7, './SAT': 11 },\n      ],\n      6: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n           *\n           * @class Grid\n           */\n\n          var Grid = {};\n\n          module.exports = Grid;\n\n          var Pair = _dereq_('./Pair');\n          var Detector = _dereq_('./Detector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new grid.\n             * @method create\n             * @param {} options\n             * @return {grid} A new grid\n             */\n            Grid.create = function(options) {\n              var defaults = {\n                controller: Grid,\n                detector: Detector.collisions,\n                buckets: {},\n                pairs: {},\n                pairsList: [],\n                bucketWidth: 48,\n                bucketHeight: 48,\n              };\n\n              return Common.extend(defaults, options);\n            };\n\n            /**\n             * The width of a single grid bucket.\n             *\n             * @property bucketWidth\n             * @type number\n             * @default 48\n             */\n\n            /**\n             * The height of a single grid bucket.\n             *\n             * @property bucketHeight\n             * @type number\n             * @default 48\n             */\n\n            /**\n             * Updates the grid.\n             * @method update\n             * @param {grid} grid\n             * @param {body[]} bodies\n             * @param {engine} engine\n             * @param {boolean} forceUpdate\n             */\n            Grid.update = function(grid, bodies, engine, forceUpdate) {\n              var i,\n                col,\n                row,\n                world = engine.world,\n                buckets = grid.buckets,\n                bucket,\n                bucketId,\n                gridChanged = false;\n\n              for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isSleeping && !forceUpdate) continue;\n\n                // don't update out of world bodies\n                if (\n                  body.bounds.max.x < world.bounds.min.x ||\n                  body.bounds.min.x > world.bounds.max.x ||\n                  body.bounds.max.y < world.bounds.min.y ||\n                  body.bounds.min.y > world.bounds.max.y\n                )\n                  continue;\n\n                var newRegion = Grid._getRegion(grid, body);\n\n                // if the body has changed grid region\n                if (\n                  !body.region ||\n                  newRegion.id !== body.region.id ||\n                  forceUpdate\n                ) {\n                  if (!body.region || forceUpdate) body.region = newRegion;\n\n                  var union = Grid._regionUnion(newRegion, body.region);\n\n                  // update grid buckets affected by region change\n                  // iterate over the union of both regions\n                  for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                      bucketId = Grid._getBucketId(col, row);\n                      bucket = buckets[bucketId];\n\n                      var isInsideNewRegion =\n                        col >= newRegion.startCol &&\n                        col <= newRegion.endCol &&\n                        row >= newRegion.startRow &&\n                        row <= newRegion.endRow;\n\n                      var isInsideOldRegion =\n                        col >= body.region.startCol &&\n                        col <= body.region.endCol &&\n                        row >= body.region.startRow &&\n                        row <= body.region.endRow;\n\n                      // remove from old region buckets\n                      if (!isInsideNewRegion && isInsideOldRegion) {\n                        if (isInsideOldRegion) {\n                          if (bucket)\n                            Grid._bucketRemoveBody(grid, bucket, body);\n                        }\n                      }\n\n                      // add to new region buckets\n                      if (\n                        body.region === newRegion ||\n                        (isInsideNewRegion && !isInsideOldRegion) ||\n                        forceUpdate\n                      ) {\n                        if (!bucket)\n                          bucket = Grid._createBucket(buckets, bucketId);\n                        Grid._bucketAddBody(grid, bucket, body);\n                      }\n                    }\n                  }\n\n                  // set the new region\n                  body.region = newRegion;\n\n                  // flag changes so we can update pairs\n                  gridChanged = true;\n                }\n              }\n\n              // update pairs list only if pairs changed (i.e. a body changed region)\n              if (gridChanged)\n                grid.pairsList = Grid._createActivePairsList(grid);\n            };\n\n            /**\n             * Clears the grid.\n             * @method clear\n             * @param {grid} grid\n             */\n            Grid.clear = function(grid) {\n              grid.buckets = {};\n              grid.pairs = {};\n              grid.pairsList = [];\n            };\n\n            /**\n             * Finds the union of two regions.\n             * @method _regionUnion\n             * @private\n             * @param {} regionA\n             * @param {} regionB\n             * @return {} region\n             */\n            Grid._regionUnion = function(regionA, regionB) {\n              var startCol = Math.min(regionA.startCol, regionB.startCol),\n                endCol = Math.max(regionA.endCol, regionB.endCol),\n                startRow = Math.min(regionA.startRow, regionB.startRow),\n                endRow = Math.max(regionA.endRow, regionB.endRow);\n\n              return Grid._createRegion(startCol, endCol, startRow, endRow);\n            };\n\n            /**\n             * Gets the region a given body falls in for a given grid.\n             * @method _getRegion\n             * @private\n             * @param {} grid\n             * @param {} body\n             * @return {} region\n             */\n            Grid._getRegion = function(grid, body) {\n              var bounds = body.bounds,\n                startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n                endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n                startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n                endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n              return Grid._createRegion(startCol, endCol, startRow, endRow);\n            };\n\n            /**\n             * Creates a region.\n             * @method _createRegion\n             * @private\n             * @param {} startCol\n             * @param {} endCol\n             * @param {} startRow\n             * @param {} endRow\n             * @return {} region\n             */\n            Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n              return {\n                id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n                startCol: startCol,\n                endCol: endCol,\n                startRow: startRow,\n                endRow: endRow,\n              };\n            };\n\n            /**\n             * Gets the bucket id at the given position.\n             * @method _getBucketId\n             * @private\n             * @param {} column\n             * @param {} row\n             * @return {string} bucket id\n             */\n            Grid._getBucketId = function(column, row) {\n              return 'C' + column + 'R' + row;\n            };\n\n            /**\n             * Creates a bucket.\n             * @method _createBucket\n             * @private\n             * @param {} buckets\n             * @param {} bucketId\n             * @return {} bucket\n             */\n            Grid._createBucket = function(buckets, bucketId) {\n              var bucket = (buckets[bucketId] = []);\n              return bucket;\n            };\n\n            /**\n             * Adds a body to a bucket.\n             * @method _bucketAddBody\n             * @private\n             * @param {} grid\n             * @param {} bucket\n             * @param {} body\n             */\n            Grid._bucketAddBody = function(grid, bucket, body) {\n              // add new pairs\n              for (var i = 0; i < bucket.length; i++) {\n                var bodyB = bucket[i];\n\n                if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                  continue;\n\n                // keep track of the number of buckets the pair exists in\n                // important for Grid.update to work\n                var pairId = Pair.id(body, bodyB),\n                  pair = grid.pairs[pairId];\n\n                if (pair) {\n                  pair[2] += 1;\n                } else {\n                  grid.pairs[pairId] = [body, bodyB, 1];\n                }\n              }\n\n              // add to bodies (after pairs, otherwise pairs with self)\n              bucket.push(body);\n            };\n\n            /**\n             * Removes a body from a bucket.\n             * @method _bucketRemoveBody\n             * @private\n             * @param {} grid\n             * @param {} bucket\n             * @param {} body\n             */\n            Grid._bucketRemoveBody = function(grid, bucket, body) {\n              // remove from bucket\n              bucket.splice(Common.indexOf(bucket, body), 1);\n\n              // update pair counts\n              for (var i = 0; i < bucket.length; i++) {\n                // keep track of the number of buckets the pair exists in\n                // important for _createActivePairsList to work\n                var bodyB = bucket[i],\n                  pairId = Pair.id(body, bodyB),\n                  pair = grid.pairs[pairId];\n\n                if (pair) pair[2] -= 1;\n              }\n            };\n\n            /**\n             * Generates a list of the active pairs in the grid.\n             * @method _createActivePairsList\n             * @private\n             * @param {} grid\n             * @return [] pairs\n             */\n            Grid._createActivePairsList = function(grid) {\n              var pairKeys,\n                pair,\n                pairs = [];\n\n              // grid.pairs is used as a hashmap\n              pairKeys = Common.keys(grid.pairs);\n\n              // iterate over grid.pairs\n              for (var k = 0; k < pairKeys.length; k++) {\n                pair = grid.pairs[pairKeys[k]];\n\n                // if pair exists in at least one bucket\n                // it is a pair that needs further collision testing so push it\n                if (pair[2] > 0) {\n                  pairs.push(pair);\n                } else {\n                  delete grid.pairs[pairKeys[k]];\n                }\n              }\n\n              return pairs;\n            };\n          })();\n        },\n        { '../core/Common': 14, './Detector': 5, './Pair': 7 },\n      ],\n      7: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n           *\n           * @class Pair\n           */\n\n          var Pair = {};\n\n          module.exports = Pair;\n\n          var Contact = _dereq_('./Contact');\n\n          (function() {\n            /**\n             * Creates a pair.\n             * @method create\n             * @param {collision} collision\n             * @param {number} timestamp\n             * @return {pair} A new pair\n             */\n            Pair.create = function(collision, timestamp) {\n              var bodyA = collision.bodyA,\n                bodyB = collision.bodyB,\n                parentA = collision.parentA,\n                parentB = collision.parentB;\n\n              var pair = {\n                id: Pair.id(bodyA, bodyB),\n                bodyA: bodyA,\n                bodyB: bodyB,\n                contacts: {},\n                activeContacts: [],\n                separation: 0,\n                isActive: true,\n                isSensor: bodyA.isSensor || bodyB.isSensor,\n                timeCreated: timestamp,\n                timeUpdated: timestamp,\n                inverseMass: parentA.inverseMass + parentB.inverseMass,\n                friction: Math.min(parentA.friction, parentB.friction),\n                frictionStatic: Math.max(\n                  parentA.frictionStatic,\n                  parentB.frictionStatic\n                ),\n                restitution: Math.max(parentA.restitution, parentB.restitution),\n                slop: Math.max(parentA.slop, parentB.slop),\n              };\n\n              Pair.update(pair, collision, timestamp);\n\n              return pair;\n            };\n\n            /**\n             * Updates a pair given a collision.\n             * @method update\n             * @param {pair} pair\n             * @param {collision} collision\n             * @param {number} timestamp\n             */\n            Pair.update = function(pair, collision, timestamp) {\n              var contacts = pair.contacts,\n                supports = collision.supports,\n                activeContacts = pair.activeContacts,\n                parentA = collision.parentA,\n                parentB = collision.parentB;\n\n              pair.collision = collision;\n              pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n              pair.friction = Math.min(parentA.friction, parentB.friction);\n              pair.frictionStatic = Math.max(\n                parentA.frictionStatic,\n                parentB.frictionStatic\n              );\n              pair.restitution = Math.max(\n                parentA.restitution,\n                parentB.restitution\n              );\n              pair.slop = Math.max(parentA.slop, parentB.slop);\n              activeContacts.length = 0;\n\n              if (collision.collided) {\n                for (var i = 0; i < supports.length; i++) {\n                  var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                  if (contact) {\n                    activeContacts.push(contact);\n                  } else {\n                    activeContacts.push(\n                      (contacts[contactId] = Contact.create(support))\n                    );\n                  }\n                }\n\n                pair.separation = collision.depth;\n                Pair.setActive(pair, true, timestamp);\n              } else {\n                if (pair.isActive === true)\n                  Pair.setActive(pair, false, timestamp);\n              }\n            };\n\n            /**\n             * Set a pair as active or inactive.\n             * @method setActive\n             * @param {pair} pair\n             * @param {bool} isActive\n             * @param {number} timestamp\n             */\n            Pair.setActive = function(pair, isActive, timestamp) {\n              if (isActive) {\n                pair.isActive = true;\n                pair.timeUpdated = timestamp;\n              } else {\n                pair.isActive = false;\n                pair.activeContacts.length = 0;\n              }\n            };\n\n            /**\n             * Get the id for the given pair.\n             * @method id\n             * @param {body} bodyA\n             * @param {body} bodyB\n             * @return {string} Unique pairId\n             */\n            Pair.id = function(bodyA, bodyB) {\n              if (bodyA.id < bodyB.id) {\n                return 'A' + bodyA.id + 'B' + bodyB.id;\n              } else {\n                return 'A' + bodyB.id + 'B' + bodyA.id;\n              }\n            };\n          })();\n        },\n        { './Contact': 4 },\n      ],\n      8: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n           *\n           * @class Pairs\n           */\n\n          var Pairs = {};\n\n          module.exports = Pairs;\n\n          var Pair = _dereq_('./Pair');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            Pairs._pairMaxIdleLife = 1000;\n\n            /**\n             * Creates a new pairs structure.\n             * @method create\n             * @param {object} options\n             * @return {pairs} A new pairs structure\n             */\n            Pairs.create = function(options) {\n              return Common.extend(\n                {\n                  table: {},\n                  list: [],\n                  collisionStart: [],\n                  collisionActive: [],\n                  collisionEnd: [],\n                },\n                options\n              );\n            };\n\n            /**\n             * Updates pairs given a list of collisions.\n             * @method update\n             * @param {object} pairs\n             * @param {collision[]} collisions\n             * @param {number} timestamp\n             */\n            Pairs.update = function(pairs, collisions, timestamp) {\n              var pairsList = pairs.list,\n                pairsTable = pairs.table,\n                collisionStart = pairs.collisionStart,\n                collisionEnd = pairs.collisionEnd,\n                collisionActive = pairs.collisionActive,\n                activePairIds = [],\n                collision,\n                pairId,\n                pair,\n                i;\n\n              // clear collision state arrays, but maintain old reference\n              collisionStart.length = 0;\n              collisionEnd.length = 0;\n              collisionActive.length = 0;\n\n              for (i = 0; i < collisions.length; i++) {\n                collision = collisions[i];\n\n                if (collision.collided) {\n                  pairId = Pair.id(collision.bodyA, collision.bodyB);\n                  activePairIds.push(pairId);\n\n                  pair = pairsTable[pairId];\n\n                  if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                      // pair exists and is active\n                      collisionActive.push(pair);\n                    } else {\n                      // pair exists but was inactive, so a collision has just started again\n                      collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                  } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                  }\n                }\n              }\n\n              // deactivate previously active pairs that are now inactive\n              for (i = 0; i < pairsList.length; i++) {\n                pair = pairsList[i];\n                if (\n                  pair.isActive &&\n                  Common.indexOf(activePairIds, pair.id) === -1\n                ) {\n                  Pair.setActive(pair, false, timestamp);\n                  collisionEnd.push(pair);\n                }\n              }\n            };\n\n            /**\n             * Finds and removes pairs that have been inactive for a set amount of time.\n             * @method removeOld\n             * @param {object} pairs\n             * @param {number} timestamp\n             */\n            Pairs.removeOld = function(pairs, timestamp) {\n              var pairsList = pairs.list,\n                pairsTable = pairs.table,\n                indexesToRemove = [],\n                pair,\n                collision,\n                pairIndex,\n                i;\n\n              for (i = 0; i < pairsList.length; i++) {\n                pair = pairsList[i];\n                collision = pair.collision;\n\n                // never remove sleeping pairs\n                if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                  pair.timeUpdated = timestamp;\n                  continue;\n                }\n\n                // if pair is inactive for too long, mark it to be removed\n                if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                  indexesToRemove.push(i);\n                }\n              }\n\n              // remove marked pairs\n              for (i = 0; i < indexesToRemove.length; i++) {\n                pairIndex = indexesToRemove[i] - i;\n                pair = pairsList[pairIndex];\n                delete pairsTable[pair.id];\n                pairsList.splice(pairIndex, 1);\n              }\n            };\n\n            /**\n             * Clears the given pairs structure.\n             * @method clear\n             * @param {pairs} pairs\n             * @return {pairs} pairs\n             */\n            Pairs.clear = function(pairs) {\n              pairs.table = {};\n              pairs.list.length = 0;\n              pairs.collisionStart.length = 0;\n              pairs.collisionActive.length = 0;\n              pairs.collisionEnd.length = 0;\n              return pairs;\n            };\n          })();\n        },\n        { '../core/Common': 14, './Pair': 7 },\n      ],\n      9: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Query` module contains methods for performing collision queries.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Query\n           */\n\n          var Query = {};\n\n          module.exports = Query;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var SAT = _dereq_('./SAT');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Bodies = _dereq_('../factory/Bodies');\n          var Vertices = _dereq_('../geometry/Vertices');\n\n          (function() {\n            /**\n             * Returns a list of collisions between `body` and `bodies`.\n             * @method collides\n             * @param {body} body\n             * @param {body[]} bodies\n             * @return {object[]} Collisions\n             */\n            Query.collides = function(body, bodies) {\n              var collisions = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var bodyA = bodies[i];\n\n                if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                  for (\n                    var j = bodyA.parts.length === 1 ? 0 : 1;\n                    j < bodyA.parts.length;\n                    j++\n                  ) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                      var collision = SAT.collides(part, body);\n\n                      if (collision.collided) {\n                        collisions.push(collision);\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n             * @method ray\n             * @param {body[]} bodies\n             * @param {vector} startPoint\n             * @param {vector} endPoint\n             * @param {number} [rayWidth]\n             * @return {object[]} Collisions\n             */\n            Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n              rayWidth = rayWidth || 1e-100;\n\n              var rayAngle = Vector.angle(startPoint, endPoint),\n                rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n                rayX = (endPoint.x + startPoint.x) * 0.5,\n                rayY = (endPoint.y + startPoint.y) * 0.5,\n                ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, {\n                  angle: rayAngle,\n                }),\n                collisions = Query.collides(ray, bodies);\n\n              for (var i = 0; i < collisions.length; i += 1) {\n                var collision = collisions[i];\n                collision.body = collision.bodyB = collision.bodyA;\n              }\n\n              return collisions;\n            };\n\n            /**\n             * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n             * @method region\n             * @param {body[]} bodies\n             * @param {bounds} bounds\n             * @param {bool} [outside=false]\n             * @return {body[]} The bodies matching the query\n             */\n            Query.region = function(bodies, bounds, outside) {\n              var result = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  overlaps = Bounds.overlaps(body.bounds, bounds);\n                if ((overlaps && !outside) || (!overlaps && outside))\n                  result.push(body);\n              }\n\n              return result;\n            };\n\n            /**\n             * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n             * @method point\n             * @param {body[]} bodies\n             * @param {vector} point\n             * @return {body[]} The bodies matching the query\n             */\n            Query.point = function(bodies, point) {\n              var result = [];\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (Bounds.contains(body.bounds, point)) {\n                  for (\n                    var j = body.parts.length === 1 ? 0 : 1;\n                    j < body.parts.length;\n                    j++\n                  ) {\n                    var part = body.parts[j];\n\n                    if (\n                      Bounds.contains(part.bounds, point) &&\n                      Vertices.contains(part.vertices, point)\n                    ) {\n                      result.push(body);\n                      break;\n                    }\n                  }\n                }\n              }\n\n              return result;\n            };\n          })();\n        },\n        {\n          '../factory/Bodies': 23,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          './SAT': 11,\n        },\n      ],\n      10: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Resolver` module contains methods for resolving collision pairs.\n           *\n           * @class Resolver\n           */\n\n          var Resolver = {};\n\n          module.exports = Resolver;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            Resolver._restingThresh = 4;\n            Resolver._restingThreshTangent = 6;\n            Resolver._positionDampen = 0.9;\n            Resolver._positionWarming = 0.8;\n            Resolver._frictionNormalMultiplier = 5;\n\n            /**\n             * Prepare pairs for position solving.\n             * @method preSolvePosition\n             * @param {pair[]} pairs\n             */\n            Resolver.preSolvePosition = function(pairs) {\n              var i, pair, activeCount;\n\n              // find total contacts on each body\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                activeCount = pair.activeContacts.length;\n                pair.collision.parentA.totalContacts += activeCount;\n                pair.collision.parentB.totalContacts += activeCount;\n              }\n            };\n\n            /**\n             * Find a solution for pair positions.\n             * @method solvePosition\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Resolver.solvePosition = function(pairs, timeScale) {\n              var i,\n                pair,\n                collision,\n                bodyA,\n                bodyB,\n                normal,\n                bodyBtoA,\n                contactShare,\n                positionImpulse,\n                contactCount = {},\n                tempA = Vector._temp[0],\n                tempB = Vector._temp[1],\n                tempC = Vector._temp[2],\n                tempD = Vector._temp[3];\n\n              // find impulses required to resolve penetration\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n\n                // get current separation between body edges involved in collision\n                bodyBtoA = Vector.sub(\n                  Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                  Vector.add(\n                    bodyA.positionImpulse,\n                    Vector.sub(bodyB.position, collision.penetration, tempB),\n                    tempC\n                  ),\n                  tempD\n                );\n\n                pair.separation = Vector.dot(normal, bodyBtoA);\n              }\n\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n                positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n                if (bodyA.isStatic || bodyB.isStatic) positionImpulse *= 2;\n\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                  contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                  bodyA.positionImpulse.x +=\n                    normal.x * positionImpulse * contactShare;\n                  bodyA.positionImpulse.y +=\n                    normal.y * positionImpulse * contactShare;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                  contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                  bodyB.positionImpulse.x -=\n                    normal.x * positionImpulse * contactShare;\n                  bodyB.positionImpulse.y -=\n                    normal.y * positionImpulse * contactShare;\n                }\n              }\n            };\n\n            /**\n             * Apply position resolution.\n             * @method postSolvePosition\n             * @param {body[]} bodies\n             */\n            Resolver.postSolvePosition = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                // reset contact count\n                body.totalContacts = 0;\n\n                if (\n                  body.positionImpulse.x !== 0 ||\n                  body.positionImpulse.y !== 0\n                ) {\n                  // update body geometry\n                  for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                  }\n\n                  // move the body without changing velocity\n                  body.positionPrev.x += body.positionImpulse.x;\n                  body.positionPrev.y += body.positionImpulse.y;\n\n                  if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                  } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                  }\n                }\n              }\n            };\n\n            /**\n             * Prepare pairs for velocity solving.\n             * @method preSolveVelocity\n             * @param {pair[]} pairs\n             */\n            Resolver.preSolveVelocity = function(pairs) {\n              var i,\n                j,\n                pair,\n                contacts,\n                collision,\n                bodyA,\n                bodyB,\n                normal,\n                tangent,\n                contact,\n                contactVertex,\n                normalImpulse,\n                tangentImpulse,\n                offset,\n                impulse = Vector._temp[0],\n                tempA = Vector._temp[1];\n\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                contacts = pair.activeContacts;\n                collision = pair.collision;\n                bodyA = collision.parentA;\n                bodyB = collision.parentB;\n                normal = collision.normal;\n                tangent = collision.tangent;\n\n                // resolve each contact\n                for (j = 0; j < contacts.length; j++) {\n                  contact = contacts[j];\n                  contactVertex = contact.vertex;\n                  normalImpulse = contact.normalImpulse;\n                  tangentImpulse = contact.tangentImpulse;\n\n                  if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x =\n                      normal.x * normalImpulse + tangent.x * tangentImpulse;\n                    impulse.y =\n                      normal.y * normalImpulse + tangent.y * tangentImpulse;\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                      offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                      bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                      bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                      bodyA.anglePrev +=\n                        Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                      offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                      bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                      bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                      bodyB.anglePrev -=\n                        Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                  }\n                }\n              }\n            };\n\n            /**\n             * Find a solution for pair velocities.\n             * @method solveVelocity\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Resolver.solveVelocity = function(pairs, timeScale) {\n              var timeScaleSquared = timeScale * timeScale,\n                impulse = Vector._temp[0],\n                tempA = Vector._temp[1],\n                tempB = Vector._temp[2],\n                tempC = Vector._temp[3],\n                tempD = Vector._temp[4],\n                tempE = Vector._temp[5];\n\n              for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n\n                if (!pair.isActive || pair.isSensor) continue;\n\n                var collision = pair.collision,\n                  bodyA = collision.parentA,\n                  bodyB = collision.parentB,\n                  normal = collision.normal,\n                  tangent = collision.tangent,\n                  contacts = pair.activeContacts,\n                  contactShare = 1 / contacts.length;\n\n                // update body velocities\n                bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n                bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n                bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n                bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n                bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n                bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n                // resolve each contact\n                for (var j = 0; j < contacts.length; j++) {\n                  var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(\n                      bodyA.velocity,\n                      Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity),\n                      tempC\n                    ),\n                    velocityPointB = Vector.add(\n                      bodyB.velocity,\n                      Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity),\n                      tempD\n                    ),\n                    relativeVelocity = Vector.sub(\n                      velocityPointA,\n                      velocityPointB,\n                      tempE\n                    ),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                  var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                  // raw impulses\n                  var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce =\n                      Common.clamp(pair.separation + normalVelocity, 0, 1) *\n                      Resolver._frictionNormalMultiplier;\n\n                  // coulomb friction\n                  var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                  if (\n                    tangentSpeed >\n                    pair.friction *\n                      pair.frictionStatic *\n                      normalForce *\n                      timeScaleSquared\n                  ) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                      pair.friction *\n                        tangentVelocityDirection *\n                        timeScaleSquared,\n                      -maxFriction,\n                      maxFriction\n                    );\n                  }\n\n                  // modify impulses accounting for mass, inertia and offset\n                  var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share =\n                      contactShare /\n                      (bodyA.inverseMass +\n                        bodyB.inverseMass +\n                        bodyA.inverseInertia * oAcN * oAcN +\n                        bodyB.inverseInertia * oBcN * oBcN);\n\n                  normalImpulse *= share;\n                  tangentImpulse *= share;\n\n                  // handle high velocity and resting collisions separately\n                  if (\n                    normalVelocity < 0 &&\n                    normalVelocity * normalVelocity >\n                      Resolver._restingThresh * timeScaleSquared\n                  ) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                  } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(\n                      contact.normalImpulse + normalImpulse,\n                      0\n                    );\n                    normalImpulse =\n                      contact.normalImpulse - contactNormalImpulse;\n                  }\n\n                  // handle high velocity and resting collisions separately\n                  if (\n                    tangentVelocity * tangentVelocity >\n                    Resolver._restingThreshTangent * timeScaleSquared\n                  ) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                  } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(\n                      contact.tangentImpulse + tangentImpulse,\n                      -maxFriction,\n                      maxFriction\n                    );\n                    tangentImpulse =\n                      contact.tangentImpulse - contactTangentImpulse;\n                  }\n\n                  // total impulse from contact\n                  impulse.x =\n                    normal.x * normalImpulse + tangent.x * tangentImpulse;\n                  impulse.y =\n                    normal.y * normalImpulse + tangent.y * tangentImpulse;\n\n                  // apply impulse from contact\n                  if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev +=\n                      Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                  }\n\n                  if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -=\n                      Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                  }\n                }\n              }\n            };\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      11: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n           *\n           * @class SAT\n           */\n\n          // TODO: true circles and curves\n\n          var SAT = {};\n\n          module.exports = SAT;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n\n          (function() {\n            /**\n             * Detect collision between two bodies using the Separating Axis Theorem.\n             * @method collides\n             * @param {body} bodyA\n             * @param {body} bodyB\n             * @param {collision} previousCollision\n             * @return {collision} collision\n             */\n            SAT.collides = function(bodyA, bodyB, previousCollision) {\n              var overlapAB,\n                overlapBA,\n                minOverlap,\n                collision,\n                canReusePrevCol = false;\n\n              if (previousCollision) {\n                // estimate total motion\n                var parentA = bodyA.parent,\n                  parentB = bodyB.parent,\n                  motion =\n                    parentA.speed * parentA.speed +\n                    parentA.angularSpeed * parentA.angularSpeed +\n                    parentB.speed * parentB.speed +\n                    parentB.angularSpeed * parentB.angularSpeed;\n\n                // we may be able to (partially) reuse collision result\n                // but only safe if collision was resting\n                canReusePrevCol =\n                  previousCollision &&\n                  previousCollision.collided &&\n                  motion < 0.2;\n\n                // reuse collision object\n                collision = previousCollision;\n              } else {\n                collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n              }\n\n              if (previousCollision && canReusePrevCol) {\n                // if we can reuse the collision result\n                // we only need to test the previously found axis\n                var axisBodyA = collision.axisBody,\n                  axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                  axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n                minOverlap = SAT._overlapAxes(\n                  axisBodyA.vertices,\n                  axisBodyB.vertices,\n                  axes\n                );\n                collision.reused = true;\n\n                if (minOverlap.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n              } else {\n                // if we can't reuse a result, perform a full SAT test\n\n                overlapAB = SAT._overlapAxes(\n                  bodyA.vertices,\n                  bodyB.vertices,\n                  bodyA.axes\n                );\n\n                if (overlapAB.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n\n                overlapBA = SAT._overlapAxes(\n                  bodyB.vertices,\n                  bodyA.vertices,\n                  bodyB.axes\n                );\n\n                if (overlapBA.overlap <= 0) {\n                  collision.collided = false;\n                  return collision;\n                }\n\n                if (overlapAB.overlap < overlapBA.overlap) {\n                  minOverlap = overlapAB;\n                  collision.axisBody = bodyA;\n                } else {\n                  minOverlap = overlapBA;\n                  collision.axisBody = bodyB;\n                }\n\n                // important for reuse later\n                collision.axisNumber = minOverlap.axisNumber;\n              }\n\n              collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n              collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n              collision.collided = true;\n              collision.depth = minOverlap.overlap;\n              collision.parentA = collision.bodyA.parent;\n              collision.parentB = collision.bodyB.parent;\n\n              bodyA = collision.bodyA;\n              bodyB = collision.bodyB;\n\n              // ensure normal is facing away from bodyA\n              if (\n                Vector.dot(\n                  minOverlap.axis,\n                  Vector.sub(bodyB.position, bodyA.position)\n                ) < 0\n              ) {\n                collision.normal = {\n                  x: minOverlap.axis.x,\n                  y: minOverlap.axis.y,\n                };\n              } else {\n                collision.normal = {\n                  x: -minOverlap.axis.x,\n                  y: -minOverlap.axis.y,\n                };\n              }\n\n              collision.tangent = Vector.perp(collision.normal);\n\n              collision.penetration = collision.penetration || {};\n              collision.penetration.x = collision.normal.x * collision.depth;\n              collision.penetration.y = collision.normal.y * collision.depth;\n\n              // find support points, there is always either exactly one or two\n              var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n                supports = [];\n\n              // find the supports from bodyB that are inside bodyA\n              if (Vertices.contains(bodyA.vertices, verticesB[0]))\n                supports.push(verticesB[0]);\n\n              if (Vertices.contains(bodyA.vertices, verticesB[1]))\n                supports.push(verticesB[1]);\n\n              // find the supports from bodyA that are inside bodyB\n              if (supports.length < 2) {\n                var verticesA = SAT._findSupports(\n                  bodyB,\n                  bodyA,\n                  Vector.neg(collision.normal)\n                );\n\n                if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                  supports.push(verticesA[0]);\n\n                if (\n                  supports.length < 2 &&\n                  Vertices.contains(bodyB.vertices, verticesA[1])\n                )\n                  supports.push(verticesA[1]);\n              }\n\n              // account for the edge case of overlapping but no vertex containment\n              if (supports.length < 1) supports = [verticesB[0]];\n\n              collision.supports = supports;\n\n              return collision;\n            };\n\n            /**\n             * Find the overlap between two sets of vertices.\n             * @method _overlapAxes\n             * @private\n             * @param {} verticesA\n             * @param {} verticesB\n             * @param {} axes\n             * @return result\n             */\n            SAT._overlapAxes = function(verticesA, verticesB, axes) {\n              var projectionA = Vector._temp[0],\n                projectionB = Vector._temp[1],\n                result = { overlap: Number.MAX_VALUE },\n                overlap,\n                axis;\n\n              for (var i = 0; i < axes.length; i++) {\n                axis = axes[i];\n\n                SAT._projectToAxis(projectionA, verticesA, axis);\n                SAT._projectToAxis(projectionB, verticesB, axis);\n\n                overlap = Math.min(\n                  projectionA.max - projectionB.min,\n                  projectionB.max - projectionA.min\n                );\n\n                if (overlap <= 0) {\n                  result.overlap = overlap;\n                  return result;\n                }\n\n                if (overlap < result.overlap) {\n                  result.overlap = overlap;\n                  result.axis = axis;\n                  result.axisNumber = i;\n                }\n              }\n\n              return result;\n            };\n\n            /**\n             * Projects vertices on an axis and returns an interval.\n             * @method _projectToAxis\n             * @private\n             * @param {} projection\n             * @param {} vertices\n             * @param {} axis\n             */\n            SAT._projectToAxis = function(projection, vertices, axis) {\n              var min = Vector.dot(vertices[0], axis),\n                max = min;\n\n              for (var i = 1; i < vertices.length; i += 1) {\n                var dot = Vector.dot(vertices[i], axis);\n\n                if (dot > max) {\n                  max = dot;\n                } else if (dot < min) {\n                  min = dot;\n                }\n              }\n\n              projection.min = min;\n              projection.max = max;\n            };\n\n            /**\n             * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n             * @method _findSupports\n             * @private\n             * @param {} bodyA\n             * @param {} bodyB\n             * @param {} normal\n             * @return [vector]\n             */\n            SAT._findSupports = function(bodyA, bodyB, normal) {\n              var nearestDistance = Number.MAX_VALUE,\n                vertexToBody = Vector._temp[0],\n                vertices = bodyB.vertices,\n                bodyAPosition = bodyA.position,\n                distance,\n                vertex,\n                vertexA,\n                vertexB;\n\n              // find closest vertex on bodyB\n              for (var i = 0; i < vertices.length; i++) {\n                vertex = vertices[i];\n                vertexToBody.x = vertex.x - bodyAPosition.x;\n                vertexToBody.y = vertex.y - bodyAPosition.y;\n                distance = -Vector.dot(normal, vertexToBody);\n\n                if (distance < nearestDistance) {\n                  nearestDistance = distance;\n                  vertexA = vertex;\n                }\n              }\n\n              // find next closest vertex using the two connected to it\n              var prevIndex =\n                vertexA.index - 1 >= 0\n                  ? vertexA.index - 1\n                  : vertices.length - 1;\n              vertex = vertices[prevIndex];\n              vertexToBody.x = vertex.x - bodyAPosition.x;\n              vertexToBody.y = vertex.y - bodyAPosition.y;\n              nearestDistance = -Vector.dot(normal, vertexToBody);\n              vertexB = vertex;\n\n              var nextIndex = (vertexA.index + 1) % vertices.length;\n              vertex = vertices[nextIndex];\n              vertexToBody.x = vertex.x - bodyAPosition.x;\n              vertexToBody.y = vertex.y - bodyAPosition.y;\n              distance = -Vector.dot(normal, vertexToBody);\n              if (distance < nearestDistance) {\n                vertexB = vertex;\n              }\n\n              return [vertexA, vertexB];\n            };\n          })();\n        },\n        { '../geometry/Vector': 28, '../geometry/Vertices': 29 },\n      ],\n      12: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n           * Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n           * The stiffness of constraints can be modified to create springs or elastic.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Constraint\n           */\n\n          var Constraint = {};\n\n          module.exports = Constraint;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Vector = _dereq_('../geometry/Vector');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Axes = _dereq_('../geometry/Axes');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            Constraint._warming = 0.4;\n            Constraint._torqueDampen = 1;\n            Constraint._minLength = 0.000001;\n\n            /**\n             * Creates a new constraint.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n             * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n             * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {} options\n             * @return {constraint} constraint\n             */\n            Constraint.create = function(options) {\n              var constraint = options;\n\n              // if bodies defined but no points, use body centre\n              if (constraint.bodyA && !constraint.pointA)\n                constraint.pointA = { x: 0, y: 0 };\n              if (constraint.bodyB && !constraint.pointB)\n                constraint.pointB = { x: 0, y: 0 };\n\n              // calculate static length using initial world space points\n              var initialPointA = constraint.bodyA\n                  ? Vector.add(constraint.bodyA.position, constraint.pointA)\n                  : constraint.pointA,\n                initialPointB = constraint.bodyB\n                  ? Vector.add(constraint.bodyB.position, constraint.pointB)\n                  : constraint.pointB,\n                length = Vector.magnitude(\n                  Vector.sub(initialPointA, initialPointB)\n                );\n\n              constraint.length =\n                typeof constraint.length !== 'undefined'\n                  ? constraint.length\n                  : length;\n\n              // option defaults\n              constraint.id = constraint.id || Common.nextId();\n              constraint.label = constraint.label || 'Constraint';\n              constraint.type = 'constraint';\n              constraint.stiffness =\n                constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n              constraint.damping = constraint.damping || 0;\n              constraint.angularStiffness = constraint.angularStiffness || 0;\n              constraint.angleA = constraint.bodyA\n                ? constraint.bodyA.angle\n                : constraint.angleA;\n              constraint.angleB = constraint.bodyB\n                ? constraint.bodyB.angle\n                : constraint.angleB;\n              constraint.plugin = {};\n\n              // render\n              var render = {\n                visible: true,\n                lineWidth: 2,\n                strokeStyle: '#ffffff',\n                type: 'line',\n                anchors: true,\n              };\n\n              if (constraint.length === 0 && constraint.stiffness > 0.1) {\n                render.type = 'pin';\n                render.anchors = false;\n              } else if (constraint.stiffness < 0.9) {\n                render.type = 'spring';\n              }\n\n              constraint.render = Common.extend(render, constraint.render);\n\n              return constraint;\n            };\n\n            /**\n             * Prepares for solving by constraint warming.\n             * @private\n             * @method preSolveAll\n             * @param {body[]} bodies\n             */\n            Constraint.preSolveAll = function(bodies) {\n              for (var i = 0; i < bodies.length; i += 1) {\n                var body = bodies[i],\n                  impulse = body.constraintImpulse;\n\n                if (\n                  body.isStatic ||\n                  (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)\n                ) {\n                  continue;\n                }\n\n                body.position.x += impulse.x;\n                body.position.y += impulse.y;\n                body.angle += impulse.angle;\n              }\n            };\n\n            /**\n             * Solves all constraints in a list of collisions.\n             * @private\n             * @method solveAll\n             * @param {constraint[]} constraints\n             * @param {number} timeScale\n             */\n            Constraint.solveAll = function(constraints, timeScale) {\n              // Solve fixed constraints first.\n              for (var i = 0; i < constraints.length; i += 1) {\n                var constraint = constraints[i],\n                  fixedA =\n                    !constraint.bodyA ||\n                    (constraint.bodyA && constraint.bodyA.isStatic),\n                  fixedB =\n                    !constraint.bodyB ||\n                    (constraint.bodyB && constraint.bodyB.isStatic);\n\n                if (fixedA || fixedB) {\n                  Constraint.solve(constraints[i], timeScale);\n                }\n              }\n\n              // Solve free constraints last.\n              for (i = 0; i < constraints.length; i += 1) {\n                constraint = constraints[i];\n                fixedA =\n                  !constraint.bodyA ||\n                  (constraint.bodyA && constraint.bodyA.isStatic);\n                fixedB =\n                  !constraint.bodyB ||\n                  (constraint.bodyB && constraint.bodyB.isStatic);\n\n                if (!fixedA && !fixedB) {\n                  Constraint.solve(constraints[i], timeScale);\n                }\n              }\n            };\n\n            /**\n             * Solves a distance constraint with Gauss-Siedel method.\n             * @private\n             * @method solve\n             * @param {constraint} constraint\n             * @param {number} timeScale\n             */\n            Constraint.solve = function(constraint, timeScale) {\n              var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                pointA = constraint.pointA,\n                pointB = constraint.pointB;\n\n              if (!bodyA && !bodyB) return;\n\n              // update reference angle\n              if (bodyA && !bodyA.isStatic) {\n                Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n                constraint.angleA = bodyA.angle;\n              }\n\n              // update reference angle\n              if (bodyB && !bodyB.isStatic) {\n                Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n                constraint.angleB = bodyB.angle;\n              }\n\n              var pointAWorld = pointA,\n                pointBWorld = pointB;\n\n              if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n              if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n              if (!pointAWorld || !pointBWorld) return;\n\n              var delta = Vector.sub(pointAWorld, pointBWorld),\n                currentLength = Vector.magnitude(delta);\n\n              // prevent singularity\n              if (currentLength < Constraint._minLength) {\n                currentLength = Constraint._minLength;\n              }\n\n              // solve distance constraint with Gauss-Siedel method\n              var difference =\n                  (currentLength - constraint.length) / currentLength,\n                stiffness =\n                  constraint.stiffness < 1\n                    ? constraint.stiffness * timeScale\n                    : constraint.stiffness,\n                force = Vector.mult(delta, difference * stiffness),\n                massTotal =\n                  (bodyA ? bodyA.inverseMass : 0) +\n                  (bodyB ? bodyB.inverseMass : 0),\n                inertiaTotal =\n                  (bodyA ? bodyA.inverseInertia : 0) +\n                  (bodyB ? bodyB.inverseInertia : 0),\n                resistanceTotal = massTotal + inertiaTotal,\n                torque,\n                share,\n                normal,\n                normalVelocity,\n                relativeVelocity;\n\n              if (constraint.damping) {\n                var zero = Vector.create();\n                normal = Vector.div(delta, currentLength);\n\n                relativeVelocity = Vector.sub(\n                  (bodyB && Vector.sub(bodyB.position, bodyB.positionPrev)) ||\n                    zero,\n                  (bodyA && Vector.sub(bodyA.position, bodyA.positionPrev)) ||\n                    zero\n                );\n\n                normalVelocity = Vector.dot(normal, relativeVelocity);\n              }\n\n              if (bodyA && !bodyA.isStatic) {\n                share = bodyA.inverseMass / massTotal;\n\n                // keep track of applied impulses for post solving\n                bodyA.constraintImpulse.x -= force.x * share;\n                bodyA.constraintImpulse.y -= force.y * share;\n\n                // apply forces\n                bodyA.position.x -= force.x * share;\n                bodyA.position.y -= force.y * share;\n\n                // apply damping\n                if (constraint.damping) {\n                  bodyA.positionPrev.x -=\n                    constraint.damping * normal.x * normalVelocity * share;\n                  bodyA.positionPrev.y -=\n                    constraint.damping * normal.y * normalVelocity * share;\n                }\n\n                // apply torque\n                torque =\n                  Vector.cross(pointA, force) /\n                  resistanceTotal *\n                  Constraint._torqueDampen *\n                  bodyA.inverseInertia *\n                  (1 - constraint.angularStiffness);\n                bodyA.constraintImpulse.angle -= torque;\n                bodyA.angle -= torque;\n              }\n\n              if (bodyB && !bodyB.isStatic) {\n                share = bodyB.inverseMass / massTotal;\n\n                // keep track of applied impulses for post solving\n                bodyB.constraintImpulse.x += force.x * share;\n                bodyB.constraintImpulse.y += force.y * share;\n\n                // apply forces\n                bodyB.position.x += force.x * share;\n                bodyB.position.y += force.y * share;\n\n                // apply damping\n                if (constraint.damping) {\n                  bodyB.positionPrev.x +=\n                    constraint.damping * normal.x * normalVelocity * share;\n                  bodyB.positionPrev.y +=\n                    constraint.damping * normal.y * normalVelocity * share;\n                }\n\n                // apply torque\n                torque =\n                  Vector.cross(pointB, force) /\n                  resistanceTotal *\n                  Constraint._torqueDampen *\n                  bodyB.inverseInertia *\n                  (1 - constraint.angularStiffness);\n                bodyB.constraintImpulse.angle += torque;\n                bodyB.angle += torque;\n              }\n            };\n\n            /**\n             * Performs body updates required after solving constraints.\n             * @private\n             * @method postSolveAll\n             * @param {body[]} bodies\n             */\n            Constraint.postSolveAll = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  impulse = body.constraintImpulse;\n\n                if (\n                  body.isStatic ||\n                  (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)\n                ) {\n                  continue;\n                }\n\n                Sleeping.set(body, false);\n\n                // update geometry and reset\n                for (var j = 0; j < body.parts.length; j++) {\n                  var part = body.parts[j];\n\n                  Vertices.translate(part.vertices, impulse);\n\n                  if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                  }\n\n                  if (impulse.angle !== 0) {\n                    Vertices.rotate(\n                      part.vertices,\n                      impulse.angle,\n                      body.position\n                    );\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                      Vector.rotateAbout(\n                        part.position,\n                        impulse.angle,\n                        body.position,\n                        part.position\n                      );\n                    }\n                  }\n\n                  Bounds.update(part.bounds, part.vertices, body.velocity);\n                }\n\n                // dampen the cached impulse for warming next step\n                impulse.angle *= Constraint._warming;\n                impulse.x *= Constraint._warming;\n                impulse.y *= Constraint._warming;\n              }\n            };\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n             *\n             * @property id\n             * @type number\n             */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"constraint\"\n             * @readOnly\n             */\n\n            /**\n             * An arbitrary `String` name to help the user identify and manage bodies.\n             *\n             * @property label\n             * @type string\n             * @default \"Constraint\"\n             */\n\n            /**\n             * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n             *\n             * @property render\n             * @type object\n             */\n\n            /**\n             * A flag that indicates if the constraint should be rendered.\n             *\n             * @property render.visible\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * A `Number` that defines the line width to use when rendering the constraint outline.\n             * A value of `0` means no outline will be rendered.\n             *\n             * @property render.lineWidth\n             * @type number\n             * @default 2\n             */\n\n            /**\n             * A `String` that defines the stroke style to use when rendering the constraint outline.\n             * It is the same as when using a canvas, so it accepts CSS style property values.\n             *\n             * @property render.strokeStyle\n             * @type string\n             * @default a random colour\n             */\n\n            /**\n             * A `String` that defines the constraint rendering type.\n             * The possible values are 'line', 'pin', 'spring'.\n             * An appropriate render type will be automatically chosen unless one is given in options.\n             *\n             * @property render.type\n             * @type string\n             * @default 'line'\n             */\n\n            /**\n             * A `Boolean` that defines if the constraint's anchor points should be rendered.\n             *\n             * @property render.anchors\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * The first possible `Body` that this constraint is attached to.\n             *\n             * @property bodyA\n             * @type body\n             * @default null\n             */\n\n            /**\n             * The second possible `Body` that this constraint is attached to.\n             *\n             * @property bodyB\n             * @type body\n             * @default null\n             */\n\n            /**\n             * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n             *\n             * @property pointA\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n             *\n             * @property pointB\n             * @type vector\n             * @default { x: 0, y: 0 }\n             */\n\n            /**\n             * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n             * A value of `1` means the constraint should be very stiff.\n             * A value of `0.2` means the constraint acts like a soft spring.\n             *\n             * @property stiffness\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that specifies the damping of the constraint,\n             * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n             * Damping will only be apparent when the constraint also has a very low `stiffness`.\n             * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n             * A value of `0` means the constraint will apply no damping.\n             *\n             * @property damping\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * A `Number` that specifies the target resting length of the constraint.\n             * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n             *\n             * @property length\n             * @type number\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../core/Common': 14,\n          '../core/Sleeping': 22,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      13: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n           * Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class MouseConstraint\n           */\n\n          var MouseConstraint = {};\n\n          module.exports = MouseConstraint;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Sleeping = _dereq_('../core/Sleeping');\n          var Mouse = _dereq_('../core/Mouse');\n          var Events = _dereq_('../core/Events');\n          var Detector = _dereq_('../collision/Detector');\n          var Constraint = _dereq_('./Constraint');\n          var Composite = _dereq_('../body/Composite');\n          var Common = _dereq_('../core/Common');\n          var Bounds = _dereq_('../geometry/Bounds');\n\n          (function() {\n            /**\n             * Creates a new mouse constraint.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {engine} engine\n             * @param {} options\n             * @return {MouseConstraint} A new MouseConstraint\n             */\n            MouseConstraint.create = function(engine, options) {\n              var mouse =\n                (engine ? engine.mouse : null) ||\n                (options ? options.mouse : null);\n\n              if (!mouse) {\n                if (engine && engine.render && engine.render.canvas) {\n                  mouse = Mouse.create(engine.render.canvas);\n                } else if (options && options.element) {\n                  mouse = Mouse.create(options.element);\n                } else {\n                  mouse = Mouse.create();\n                  Common.warn(\n                    'MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected'\n                  );\n                }\n              }\n\n              var constraint = Constraint.create({\n                label: 'Mouse Constraint',\n                pointA: mouse.position,\n                pointB: { x: 0, y: 0 },\n                length: 0.01,\n                stiffness: 0.1,\n                angularStiffness: 1,\n                render: {\n                  strokeStyle: '#90EE90',\n                  lineWidth: 3,\n                },\n              });\n\n              var defaults = {\n                type: 'mouseConstraint',\n                mouse: mouse,\n                element: null,\n                body: null,\n                constraint: constraint,\n                collisionFilter: {\n                  category: 0x0001,\n                  mask: 0xffffffff,\n                  group: 0,\n                },\n              };\n\n              var mouseConstraint = Common.extend(defaults, options);\n\n              Events.on(engine, 'beforeUpdate', function() {\n                var allBodies = Composite.allBodies(engine.world);\n                MouseConstraint.update(mouseConstraint, allBodies);\n                MouseConstraint._triggerEvents(mouseConstraint);\n              });\n\n              return mouseConstraint;\n            };\n\n            /**\n             * Updates the given mouse constraint.\n             * @private\n             * @method update\n             * @param {MouseConstraint} mouseConstraint\n             * @param {body[]} bodies\n             */\n            MouseConstraint.update = function(mouseConstraint, bodies) {\n              var mouse = mouseConstraint.mouse,\n                constraint = mouseConstraint.constraint,\n                body = mouseConstraint.body;\n\n              if (mouse.button === 0) {\n                if (!constraint.bodyB) {\n                  for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (\n                      Bounds.contains(body.bounds, mouse.position) &&\n                      Detector.canCollide(\n                        body.collisionFilter,\n                        mouseConstraint.collisionFilter\n                      )\n                    ) {\n                      for (\n                        var j = body.parts.length > 1 ? 1 : 0;\n                        j < body.parts.length;\n                        j++\n                      ) {\n                        var part = body.parts[j];\n                        if (Vertices.contains(part.vertices, mouse.position)) {\n                          constraint.pointA = mouse.position;\n                          constraint.bodyB = mouseConstraint.body = body;\n                          constraint.pointB = {\n                            x: mouse.position.x - body.position.x,\n                            y: mouse.position.y - body.position.y,\n                          };\n                          constraint.angleB = body.angle;\n\n                          Sleeping.set(body, false);\n                          Events.trigger(mouseConstraint, 'startdrag', {\n                            mouse: mouse,\n                            body: body,\n                          });\n\n                          break;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  Sleeping.set(constraint.bodyB, false);\n                  constraint.pointA = mouse.position;\n                }\n              } else {\n                constraint.bodyB = mouseConstraint.body = null;\n                constraint.pointB = null;\n\n                if (body)\n                  Events.trigger(mouseConstraint, 'enddrag', {\n                    mouse: mouse,\n                    body: body,\n                  });\n              }\n            };\n\n            /**\n             * Triggers mouse constraint events.\n             * @method _triggerEvents\n             * @private\n             * @param {mouse} mouseConstraint\n             */\n            MouseConstraint._triggerEvents = function(mouseConstraint) {\n              var mouse = mouseConstraint.mouse,\n                mouseEvents = mouse.sourceEvents;\n\n              if (mouseEvents.mousemove)\n                Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n              if (mouseEvents.mousedown)\n                Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n              if (mouseEvents.mouseup)\n                Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n              // reset the mouse state ready for the next step\n              Mouse.clearSourceEvents(mouse);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired when the mouse has moved (or a touch moves) during the last step\n             *\n             * @event mousemove\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the mouse is down (or a touch has started) during the last step\n             *\n             * @event mousedown\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the mouse is up (or a touch has ended) during the last step\n             *\n             * @event mouseup\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the user starts dragging a body\n             *\n             * @event startdrag\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {body} event.body The body being dragged\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired when the user ends dragging a body\n             *\n             * @event enddrag\n             * @param {} event An event object\n             * @param {mouse} event.mouse The engine's mouse instance\n             * @param {body} event.body The body that has stopped being dragged\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A `String` denoting the type of object.\n             *\n             * @property type\n             * @type string\n             * @default \"constraint\"\n             * @readOnly\n             */\n\n            /**\n             * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n             *\n             * @property mouse\n             * @type mouse\n             * @default mouse\n             */\n\n            /**\n             * The `Body` that is currently being moved by the user, or `null` if no body.\n             *\n             * @property body\n             * @type body\n             * @default null\n             */\n\n            /**\n             * The `Constraint` object that is used to move the body during interaction.\n             *\n             * @property constraint\n             * @type constraint\n             */\n\n            /**\n             * An `Object` that specifies the collision filter properties.\n             * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n             * See `body.collisionFilter` for more information.\n             *\n             * @property collisionFilter\n             * @type object\n             */\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../collision/Detector': 5,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../core/Mouse': 19,\n          '../core/Sleeping': 22,\n          '../geometry/Bounds': 26,\n          '../geometry/Vertices': 29,\n          './Constraint': 12,\n        },\n      ],\n      14: [\n        function(_dereq_, module, exports) {\n          (function(global) {\n            /**\n             * The `Matter.Common` module contains utility functions that are common to all modules.\n             *\n             * @class Common\n             */\n\n            var Common = {};\n\n            module.exports = Common;\n\n            (function() {\n              Common._nextId = 0;\n              Common._seed = 0;\n              Common._nowStartTime = +new Date();\n\n              /**\n               * Extends the object in the first argument using the object in the second argument.\n               * @method extend\n               * @param {} obj\n               * @param {boolean} deep\n               * @return {} obj extended\n               */\n              Common.extend = function(obj, deep) {\n                var argsStart, args, deepClone;\n\n                if (typeof deep === 'boolean') {\n                  argsStart = 2;\n                  deepClone = deep;\n                } else {\n                  argsStart = 1;\n                  deepClone = true;\n                }\n\n                for (var i = argsStart; i < arguments.length; i++) {\n                  var source = arguments[i];\n\n                  if (source) {\n                    for (var prop in source) {\n                      if (\n                        deepClone &&\n                        source[prop] &&\n                        source[prop].constructor === Object\n                      ) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                          obj[prop] = obj[prop] || {};\n                          Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                          obj[prop] = source[prop];\n                        }\n                      } else {\n                        obj[prop] = source[prop];\n                      }\n                    }\n                  }\n                }\n\n                return obj;\n              };\n\n              /**\n               * Creates a new clone of the object, if deep is true references will also be cloned.\n               * @method clone\n               * @param {} obj\n               * @param {bool} deep\n               * @return {} obj cloned\n               */\n              Common.clone = function(obj, deep) {\n                return Common.extend({}, deep, obj);\n              };\n\n              /**\n               * Returns the list of keys for the given object.\n               * @method keys\n               * @param {} obj\n               * @return {string[]} keys\n               */\n              Common.keys = function(obj) {\n                if (Object.keys) return Object.keys(obj);\n\n                // avoid hasOwnProperty for performance\n                var keys = [];\n                for (var key in obj) keys.push(key);\n                return keys;\n              };\n\n              /**\n               * Returns the list of values for the given object.\n               * @method values\n               * @param {} obj\n               * @return {array} Array of the objects property values\n               */\n              Common.values = function(obj) {\n                var values = [];\n\n                if (Object.keys) {\n                  var keys = Object.keys(obj);\n                  for (var i = 0; i < keys.length; i++) {\n                    values.push(obj[keys[i]]);\n                  }\n                  return values;\n                }\n\n                // avoid hasOwnProperty for performance\n                for (var key in obj) values.push(obj[key]);\n                return values;\n              };\n\n              /**\n               * Gets a value from `base` relative to the `path` string.\n               * @method get\n               * @param {} obj The base object\n               * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n               * @param {number} [begin] Path slice begin\n               * @param {number} [end] Path slice end\n               * @return {} The object at the given path\n               */\n              Common.get = function(obj, path, begin, end) {\n                path = path.split('.').slice(begin, end);\n\n                for (var i = 0; i < path.length; i += 1) {\n                  obj = obj[path[i]];\n                }\n\n                return obj;\n              };\n\n              /**\n               * Sets a value on `base` relative to the given `path` string.\n               * @method set\n               * @param {} obj The base object\n               * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n               * @param {} val The value to set\n               * @param {number} [begin] Path slice begin\n               * @param {number} [end] Path slice end\n               * @return {} Pass through `val` for chaining\n               */\n              Common.set = function(obj, path, val, begin, end) {\n                var parts = path.split('.').slice(begin, end);\n                Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n                return val;\n              };\n\n              /**\n               * Shuffles the given array in-place.\n               * The function uses a seeded random generator.\n               * @method shuffle\n               * @param {array} array\n               * @return {array} array shuffled randomly\n               */\n              Common.shuffle = function(array) {\n                for (var i = array.length - 1; i > 0; i--) {\n                  var j = Math.floor(Common.random() * (i + 1));\n                  var temp = array[i];\n                  array[i] = array[j];\n                  array[j] = temp;\n                }\n                return array;\n              };\n\n              /**\n               * Randomly chooses a value from a list with equal probability.\n               * The function uses a seeded random generator.\n               * @method choose\n               * @param {array} choices\n               * @return {object} A random choice object from the array\n               */\n              Common.choose = function(choices) {\n                return choices[Math.floor(Common.random() * choices.length)];\n              };\n\n              /**\n               * Returns true if the object is a HTMLElement, otherwise false.\n               * @method isElement\n               * @param {object} obj\n               * @return {boolean} True if the object is a HTMLElement, otherwise false\n               */\n              Common.isElement = function(obj) {\n                if (typeof HTMLElement !== 'undefined') {\n                  return obj instanceof HTMLElement;\n                }\n\n                return !!(obj && obj.nodeType && obj.nodeName);\n              };\n\n              /**\n               * Returns true if the object is an array.\n               * @method isArray\n               * @param {object} obj\n               * @return {boolean} True if the object is an array, otherwise false\n               */\n              Common.isArray = function(obj) {\n                return Object.prototype.toString.call(obj) === '[object Array]';\n              };\n\n              /**\n               * Returns true if the object is a function.\n               * @method isFunction\n               * @param {object} obj\n               * @return {boolean} True if the object is a function, otherwise false\n               */\n              Common.isFunction = function(obj) {\n                return typeof obj === 'function';\n              };\n\n              /**\n               * Returns true if the object is a plain object.\n               * @method isPlainObject\n               * @param {object} obj\n               * @return {boolean} True if the object is a plain object, otherwise false\n               */\n              Common.isPlainObject = function(obj) {\n                return typeof obj === 'object' && obj.constructor === Object;\n              };\n\n              /**\n               * Returns true if the object is a string.\n               * @method isString\n               * @param {object} obj\n               * @return {boolean} True if the object is a string, otherwise false\n               */\n              Common.isString = function(obj) {\n                return toString.call(obj) === '[object String]';\n              };\n\n              /**\n               * Returns the given value clamped between a minimum and maximum value.\n               * @method clamp\n               * @param {number} value\n               * @param {number} min\n               * @param {number} max\n               * @return {number} The value clamped between min and max inclusive\n               */\n              Common.clamp = function(value, min, max) {\n                if (value < min) return min;\n                if (value > max) return max;\n                return value;\n              };\n\n              /**\n               * Returns the sign of the given value.\n               * @method sign\n               * @param {number} value\n               * @return {number} -1 if negative, +1 if 0 or positive\n               */\n              Common.sign = function(value) {\n                return value < 0 ? -1 : 1;\n              };\n\n              /**\n               * Returns the current timestamp since the time origin (e.g. from page load).\n               * The result will be high-resolution including decimal places if available.\n               * @method now\n               * @return {number} the current timestamp\n               */\n              Common.now = function() {\n                if (window.performance) {\n                  if (window.performance.now) {\n                    return window.performance.now();\n                  } else if (window.performance.webkitNow) {\n                    return window.performance.webkitNow();\n                  }\n                }\n\n                return new Date() - Common._nowStartTime;\n              };\n\n              /**\n               * Returns a random value between a minimum and a maximum value inclusive.\n               * The function uses a seeded random generator.\n               * @method random\n               * @param {number} min\n               * @param {number} max\n               * @return {number} A random number between min and max inclusive\n               */\n              Common.random = function(min, max) {\n                min = typeof min !== 'undefined' ? min : 0;\n                max = typeof max !== 'undefined' ? max : 1;\n                return min + _seededRandom() * (max - min);\n              };\n\n              var _seededRandom = function() {\n                // https://en.wikipedia.org/wiki/Linear_congruential_generator\n                Common._seed = (Common._seed * 9301 + 49297) % 233280;\n                return Common._seed / 233280;\n              };\n\n              /**\n               * Converts a CSS hex colour string into an integer.\n               * @method colorToNumber\n               * @param {string} colorString\n               * @return {number} An integer representing the CSS hex string\n               */\n              Common.colorToNumber = function(colorString) {\n                colorString = colorString.replace('#', '');\n\n                if (colorString.length == 3) {\n                  colorString =\n                    colorString.charAt(0) +\n                    colorString.charAt(0) +\n                    colorString.charAt(1) +\n                    colorString.charAt(1) +\n                    colorString.charAt(2) +\n                    colorString.charAt(2);\n                }\n\n                return parseInt(colorString, 16);\n              };\n\n              /**\n               * The console logging level to use, where each level includes all levels above and excludes the levels below.\n               * The default level is 'debug' which shows all console messages.\n               *\n               * Possible level values are:\n               * - 0 = None\n               * - 1 = Debug\n               * - 2 = Info\n               * - 3 = Warn\n               * - 4 = Error\n               * @property Common.logLevel\n               * @type {Number}\n               * @default 1\n               */\n              Common.logLevel = 1;\n\n              /**\n               * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method log\n               * @param ...objs {} The objects to log.\n               */\n              Common.log = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n                  console.log.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method info\n               * @param ...objs {} The objects to log.\n               */\n              Common.info = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n                  console.info.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n               * The message will be prefixed with 'matter-js' to make it easily identifiable.\n               * @method warn\n               * @param ...objs {} The objects to log.\n               */\n              Common.warn = function() {\n                if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n                  console.warn.apply(\n                    console,\n                    ['matter-js:'].concat(Array.prototype.slice.call(arguments))\n                  );\n                }\n              };\n\n              /**\n               * Returns the next unique sequential ID.\n               * @method nextId\n               * @return {Number} Unique sequential ID\n               */\n              Common.nextId = function() {\n                return Common._nextId++;\n              };\n\n              /**\n               * A cross browser compatible indexOf implementation.\n               * @method indexOf\n               * @param {array} haystack\n               * @param {object} needle\n               * @return {number} The position of needle in haystack, otherwise -1.\n               */\n              Common.indexOf = function(haystack, needle) {\n                if (haystack.indexOf) return haystack.indexOf(needle);\n\n                for (var i = 0; i < haystack.length; i++) {\n                  if (haystack[i] === needle) return i;\n                }\n\n                return -1;\n              };\n\n              /**\n               * A cross browser compatible array map implementation.\n               * @method map\n               * @param {array} list\n               * @param {function} func\n               * @return {array} Values from list transformed by func.\n               */\n              Common.map = function(list, func) {\n                if (list.map) {\n                  return list.map(func);\n                }\n\n                var mapped = [];\n\n                for (var i = 0; i < list.length; i += 1) {\n                  mapped.push(func(list[i]));\n                }\n\n                return mapped;\n              };\n\n              /**\n               * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n               * Circular dependencies are allowed.\n               * @method topologicalSort\n               * @param {object} graph\n               * @return {array} Partially ordered set of vertices in topological order.\n               */\n              Common.topologicalSort = function(graph) {\n                // https://github.com/mgechev/javascript-algorithms\n                // Copyright (c) Minko Gechev (MIT license)\n                // Modifications: tidy formatting and naming\n                var result = [],\n                  visited = [],\n                  temp = [];\n\n                for (var node in graph) {\n                  if (!visited[node] && !temp[node]) {\n                    Common._topologicalSort(node, visited, temp, graph, result);\n                  }\n                }\n\n                return result;\n              };\n\n              Common._topologicalSort = function(\n                node,\n                visited,\n                temp,\n                graph,\n                result\n              ) {\n                var neighbors = graph[node] || [];\n                temp[node] = true;\n\n                for (var i = 0; i < neighbors.length; i += 1) {\n                  var neighbor = neighbors[i];\n\n                  if (temp[neighbor]) {\n                    // skip circular dependencies\n                    continue;\n                  }\n\n                  if (!visited[neighbor]) {\n                    Common._topologicalSort(\n                      neighbor,\n                      visited,\n                      temp,\n                      graph,\n                      result\n                    );\n                  }\n                }\n\n                temp[node] = false;\n                visited[node] = true;\n\n                result.push(node);\n              };\n\n              /**\n               * Takes _n_ functions as arguments and returns a new function that calls them in order.\n               * The arguments applied when calling the new function will also be applied to every function passed.\n               * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n               * Therefore if a passed function does not return a value, the previously returned value is maintained.\n               * After all passed functions have been called the new function returns the last returned value (if any).\n               * If any of the passed functions are a chain, then the chain will be flattened.\n               * @method chain\n               * @param ...funcs {function} The functions to chain.\n               * @return {function} A new function that calls the passed functions in order.\n               */\n              Common.chain = function() {\n                var funcs = [];\n\n                for (var i = 0; i < arguments.length; i += 1) {\n                  var func = arguments[i];\n\n                  if (func._chained) {\n                    // flatten already chained functions\n                    funcs.push.apply(funcs, func._chained);\n                  } else {\n                    funcs.push(func);\n                  }\n                }\n\n                var chain = function() {\n                  // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n                  var lastResult,\n                    args = new Array(arguments.length);\n\n                  for (var i = 0, l = arguments.length; i < l; i++) {\n                    args[i] = arguments[i];\n                  }\n\n                  for (i = 0; i < funcs.length; i += 1) {\n                    var result = funcs[i].apply(lastResult, args);\n\n                    if (typeof result !== 'undefined') {\n                      lastResult = result;\n                    }\n                  }\n\n                  return lastResult;\n                };\n\n                chain._chained = funcs;\n\n                return chain;\n              };\n\n              /**\n               * Chains a function to excute before the original function on the given `path` relative to `base`.\n               * See also docs for `Common.chain`.\n               * @method chainPathBefore\n               * @param {} base The base object\n               * @param {string} path The path relative to `base`\n               * @param {function} func The function to chain before the original\n               * @return {function} The chained function that replaced the original\n               */\n              Common.chainPathBefore = function(base, path, func) {\n                return Common.set(\n                  base,\n                  path,\n                  Common.chain(func, Common.get(base, path))\n                );\n              };\n\n              /**\n               * Chains a function to excute after the original function on the given `path` relative to `base`.\n               * See also docs for `Common.chain`.\n               * @method chainPathAfter\n               * @param {} base The base object\n               * @param {string} path The path relative to `base`\n               * @param {function} func The function to chain after the original\n               * @return {function} The chained function that replaced the original\n               */\n              Common.chainPathAfter = function(base, path, func) {\n                return Common.set(\n                  base,\n                  path,\n                  Common.chain(Common.get(base, path), func)\n                );\n              };\n\n              /**\n               * Used to require external libraries outside of the bundle.\n               * It first looks for the `globalName` on the environment's global namespace.\n               * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n               * @private\n               * @method _requireGlobal\n               * @param {string} globalName The global module name\n               * @param {string} moduleName The fallback CommonJS module name\n               * @return {} The loaded module\n               */\n              Common._requireGlobal = function(globalName, moduleName) {\n                var obj =\n                  typeof window !== 'undefined'\n                    ? window[globalName]\n                    : typeof global !== 'undefined'\n                      ? global[globalName]\n                      : null;\n                return obj || _dereq_(moduleName);\n              };\n            })();\n          }.call(\n            this,\n            typeof global !== 'undefined'\n              ? global\n              : typeof self !== 'undefined'\n                ? self\n                : typeof window !== 'undefined'\n                  ? window\n                  : {}\n          ));\n        },\n        {},\n      ],\n      15: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Engine` module contains methods for creating and manipulating engines.\n           * An engine is a controller that manages updating the simulation of the world.\n           * See `Matter.Runner` for an optional game loop utility.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Engine\n           */\n\n          var Engine = {};\n\n          module.exports = Engine;\n\n          var World = _dereq_('../body/World');\n          var Sleeping = _dereq_('./Sleeping');\n          var Resolver = _dereq_('../collision/Resolver');\n          var Render = _dereq_('../render/Render');\n          var Pairs = _dereq_('../collision/Pairs');\n          var Metrics = _dereq_('./Metrics');\n          var Grid = _dereq_('../collision/Grid');\n          var Events = _dereq_('./Events');\n          var Composite = _dereq_('../body/Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('./Common');\n          var Body = _dereq_('../body/Body');\n\n          (function() {\n            /**\n             * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {object} [options]\n             * @return {engine} engine\n             */\n            Engine.create = function(element, options) {\n              // options may be passed as the first (and only) argument\n              options = Common.isElement(element) ? options : element;\n              element = Common.isElement(element) ? element : null;\n              options = options || {};\n\n              if (element || options.render) {\n                Common.warn(\n                  'Engine.create: engine.render is deprecated (see docs)'\n                );\n              }\n\n              var defaults = {\n                positionIterations: 6,\n                velocityIterations: 4,\n                constraintIterations: 2,\n                enableSleeping: false,\n                events: [],\n                plugin: {},\n                timing: {\n                  timestamp: 0,\n                  timeScale: 1,\n                },\n                broadphase: {\n                  controller: Grid,\n                },\n              };\n\n              var engine = Common.extend(defaults, options);\n\n              // @deprecated\n              if (element || engine.render) {\n                var renderDefaults = {\n                  element: element,\n                  controller: Render,\n                };\n\n                engine.render = Common.extend(renderDefaults, engine.render);\n              }\n\n              // @deprecated\n              if (engine.render && engine.render.controller) {\n                engine.render = engine.render.controller.create(engine.render);\n              }\n\n              // @deprecated\n              if (engine.render) {\n                engine.render.engine = engine;\n              }\n\n              engine.world = options.world || World.create(engine.world);\n              engine.pairs = Pairs.create();\n              engine.broadphase = engine.broadphase.controller.create(\n                engine.broadphase\n              );\n              engine.metrics = engine.metrics || { extended: false };\n\n              return engine;\n            };\n\n            /**\n             * Moves the simulation forward in time by `delta` ms.\n             * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n             * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n             * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n             * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n             * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n             *\n             * Triggers `beforeUpdate` and `afterUpdate` events.\n             * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n             * @method update\n             * @param {engine} engine\n             * @param {number} [delta=16.666]\n             * @param {number} [correction=1]\n             */\n            Engine.update = function(engine, delta, correction) {\n              delta = delta || 1000 / 60;\n              correction = correction || 1;\n\n              var world = engine.world,\n                timing = engine.timing,\n                broadphase = engine.broadphase,\n                broadphasePairs = [],\n                i;\n\n              // increment timestamp\n              timing.timestamp += delta * timing.timeScale;\n\n              // create an event object\n              var event = {\n                timestamp: timing.timestamp,\n              };\n\n              Events.trigger(engine, 'beforeUpdate', event);\n\n              // get lists of all bodies and constraints, no matter what composites they are in\n              var allBodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world);\n\n              // if sleeping enabled, call the sleeping controller\n              if (engine.enableSleeping)\n                Sleeping.update(allBodies, timing.timeScale);\n\n              // applies gravity to all bodies\n              Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n              // update all body position and rotation by integration\n              Engine._bodiesUpdate(\n                allBodies,\n                delta,\n                timing.timeScale,\n                correction,\n                world.bounds\n              );\n\n              // update all constraints (first pass)\n              Constraint.preSolveAll(allBodies);\n              for (i = 0; i < engine.constraintIterations; i++) {\n                Constraint.solveAll(allConstraints, timing.timeScale);\n              }\n              Constraint.postSolveAll(allBodies);\n\n              // broadphase pass: find potential collision pairs\n              if (broadphase.controller) {\n                // if world is dirty, we must flush the whole grid\n                if (world.isModified) broadphase.controller.clear(broadphase);\n\n                // update the grid buckets based on current bodies\n                broadphase.controller.update(\n                  broadphase,\n                  allBodies,\n                  engine,\n                  world.isModified\n                );\n                broadphasePairs = broadphase.pairsList;\n              } else {\n                // if no broadphase set, we just pass all bodies\n                broadphasePairs = allBodies;\n              }\n\n              // clear all composite modified flags\n              if (world.isModified) {\n                Composite.setModified(world, false, false, true);\n              }\n\n              // narrowphase pass: find actual collisions, then create or update collision pairs\n              var collisions = broadphase.detector(broadphasePairs, engine);\n\n              // update collision pairs\n              var pairs = engine.pairs,\n                timestamp = timing.timestamp;\n              Pairs.update(pairs, collisions, timestamp);\n              Pairs.removeOld(pairs, timestamp);\n\n              // wake up bodies involved in collisions\n              if (engine.enableSleeping)\n                Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n              // trigger collision events\n              if (pairs.collisionStart.length > 0)\n                Events.trigger(engine, 'collisionStart', {\n                  pairs: pairs.collisionStart,\n                });\n\n              // iteratively resolve position between collisions\n              Resolver.preSolvePosition(pairs.list);\n              for (i = 0; i < engine.positionIterations; i++) {\n                Resolver.solvePosition(pairs.list, timing.timeScale);\n              }\n              Resolver.postSolvePosition(allBodies);\n\n              // update all constraints (second pass)\n              Constraint.preSolveAll(allBodies);\n              for (i = 0; i < engine.constraintIterations; i++) {\n                Constraint.solveAll(allConstraints, timing.timeScale);\n              }\n              Constraint.postSolveAll(allBodies);\n\n              // iteratively resolve velocity between collisions\n              Resolver.preSolveVelocity(pairs.list);\n              for (i = 0; i < engine.velocityIterations; i++) {\n                Resolver.solveVelocity(pairs.list, timing.timeScale);\n              }\n\n              // trigger collision events\n              if (pairs.collisionActive.length > 0)\n                Events.trigger(engine, 'collisionActive', {\n                  pairs: pairs.collisionActive,\n                });\n\n              if (pairs.collisionEnd.length > 0)\n                Events.trigger(engine, 'collisionEnd', {\n                  pairs: pairs.collisionEnd,\n                });\n\n              // clear force buffers\n              Engine._bodiesClearForces(allBodies);\n\n              Events.trigger(engine, 'afterUpdate', event);\n\n              return engine;\n            };\n\n            /**\n             * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n             * @method merge\n             * @param {engine} engineA\n             * @param {engine} engineB\n             */\n            Engine.merge = function(engineA, engineB) {\n              Common.extend(engineA, engineB);\n\n              if (engineB.world) {\n                engineA.world = engineB.world;\n\n                Engine.clear(engineA);\n\n                var bodies = Composite.allBodies(engineA.world);\n\n                for (var i = 0; i < bodies.length; i++) {\n                  var body = bodies[i];\n                  Sleeping.set(body, false);\n                  body.id = Common.nextId();\n                }\n              }\n            };\n\n            /**\n             * Clears the engine including the world, pairs and broadphase.\n             * @method clear\n             * @param {engine} engine\n             */\n            Engine.clear = function(engine) {\n              var world = engine.world;\n\n              Pairs.clear(engine.pairs);\n\n              var broadphase = engine.broadphase;\n              if (broadphase.controller) {\n                var bodies = Composite.allBodies(world);\n                broadphase.controller.clear(broadphase);\n                broadphase.controller.update(broadphase, bodies, engine, true);\n              }\n            };\n\n            /**\n             * Zeroes the `body.force` and `body.torque` force buffers.\n             * @method _bodiesClearForces\n             * @private\n             * @param {body[]} bodies\n             */\n            Engine._bodiesClearForces = function(bodies) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                // reset force buffers\n                body.force.x = 0;\n                body.force.y = 0;\n                body.torque = 0;\n              }\n            };\n\n            /**\n             * Applys a mass dependant force to all given bodies.\n             * @method _bodiesApplyGravity\n             * @private\n             * @param {body[]} bodies\n             * @param {vector} gravity\n             */\n            Engine._bodiesApplyGravity = function(bodies, gravity) {\n              var gravityScale =\n                typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n              if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n                return;\n              }\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isStatic || body.isSleeping) continue;\n\n                // apply gravity\n                body.force.y += body.mass * gravity.y * gravityScale;\n                body.force.x += body.mass * gravity.x * gravityScale;\n              }\n            };\n\n            /**\n             * Applys `Body.update` to all given `bodies`.\n             * @method _bodiesUpdate\n             * @private\n             * @param {body[]} bodies\n             * @param {number} deltaTime\n             * The amount of time elapsed between updates\n             * @param {number} timeScale\n             * @param {number} correction\n             * The Verlet correction factor (deltaTime / lastDeltaTime)\n             * @param {bounds} worldBounds\n             */\n            Engine._bodiesUpdate = function(\n              bodies,\n              deltaTime,\n              timeScale,\n              correction,\n              worldBounds\n            ) {\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.isStatic || body.isSleeping) continue;\n\n                Body.update(body, deltaTime, timeScale, correction);\n              }\n            };\n\n            /**\n             * An alias for `Runner.run`, see `Matter.Runner` for more information.\n             * @method run\n             * @param {engine} engine\n             */\n\n            /**\n             * Fired just before an update\n             *\n             * @event beforeUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update and all collision events\n             *\n             * @event afterUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n             *\n             * @event collisionStart\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n             *\n             * @event collisionActive\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n             *\n             * @event collisionEnd\n             * @param {} event An event object\n             * @param {} event.pairs List of affected pairs\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * An integer `Number` that specifies the number of position iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             *\n             * @property positionIterations\n             * @type number\n             * @default 6\n             */\n\n            /**\n             * An integer `Number` that specifies the number of velocity iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             *\n             * @property velocityIterations\n             * @type number\n             * @default 4\n             */\n\n            /**\n             * An integer `Number` that specifies the number of constraint iterations to perform each update.\n             * The higher the value, the higher quality the simulation will be at the expense of performance.\n             * The default value of `2` is usually very adequate.\n             *\n             * @property constraintIterations\n             * @type number\n             * @default 2\n             */\n\n            /**\n             * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n             * Sleeping can improve stability and performance, but often at the expense of accuracy.\n             *\n             * @property enableSleeping\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * An `Object` containing properties regarding the timing systems of the engine.\n             *\n             * @property timing\n             * @type object\n             */\n\n            /**\n             * A `Number` that specifies the global scaling factor of time for all bodies.\n             * A value of `0` freezes the simulation.\n             * A value of `0.1` gives a slow-motion effect.\n             * A value of `1.2` gives a speed-up effect.\n             *\n             * @property timing.timeScale\n             * @type number\n             * @default 1\n             */\n\n            /**\n             * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n             * It is incremented on every `Engine.update` by the given `delta` argument.\n             *\n             * @property timing.timestamp\n             * @type number\n             * @default 0\n             */\n\n            /**\n             * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n             * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n             *\n             * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n             * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n             *\n             * @property render\n             * @type render\n             * @deprecated see Demo.js for an example of creating a renderer\n             * @default a Matter.Render instance\n             */\n\n            /**\n             * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n             *\n             * @property broadphase\n             * @type grid\n             * @default a Matter.Grid instance\n             */\n\n            /**\n             * A `World` composite object that will contain all simulated bodies and constraints.\n             *\n             * @property world\n             * @type world\n             * @default a Matter.World instance\n             */\n\n            /**\n             * An object reserved for storing plugin-specific properties.\n             *\n             * @property plugin\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../body/World': 3,\n          '../collision/Grid': 6,\n          '../collision/Pairs': 8,\n          '../collision/Resolver': 10,\n          '../constraint/Constraint': 12,\n          '../render/Render': 31,\n          './Common': 14,\n          './Events': 16,\n          './Metrics': 18,\n          './Sleeping': 22,\n        },\n      ],\n      16: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Events` module contains methods to fire and listen to events on other objects.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Events\n           */\n\n          var Events = {};\n\n          module.exports = Events;\n\n          var Common = _dereq_('./Common');\n\n          (function() {\n            /**\n             * Subscribes a callback function to the given object's `eventName`.\n             * @method on\n             * @param {} object\n             * @param {string} eventNames\n             * @param {function} callback\n             */\n            Events.on = function(object, eventNames, callback) {\n              var names = eventNames.split(' '),\n                name;\n\n              for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                object.events = object.events || {};\n                object.events[name] = object.events[name] || [];\n                object.events[name].push(callback);\n              }\n\n              return callback;\n            };\n\n            /**\n             * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n             * @method off\n             * @param {} object\n             * @param {string} eventNames\n             * @param {function} callback\n             */\n            Events.off = function(object, eventNames, callback) {\n              if (!eventNames) {\n                object.events = {};\n                return;\n              }\n\n              // handle Events.off(object, callback)\n              if (typeof eventNames === 'function') {\n                callback = eventNames;\n                eventNames = Common.keys(object.events).join(' ');\n              }\n\n              var names = eventNames.split(' ');\n\n              for (var i = 0; i < names.length; i++) {\n                var callbacks = object.events[names[i]],\n                  newCallbacks = [];\n\n                if (callback && callbacks) {\n                  for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                      newCallbacks.push(callbacks[j]);\n                  }\n                }\n\n                object.events[names[i]] = newCallbacks;\n              }\n            };\n\n            /**\n             * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n             * @method trigger\n             * @param {} object\n             * @param {string} eventNames\n             * @param {} event\n             */\n            Events.trigger = function(object, eventNames, event) {\n              var names, name, callbacks, eventClone;\n\n              if (object.events) {\n                if (!event) event = {};\n\n                names = eventNames.split(' ');\n\n                for (var i = 0; i < names.length; i++) {\n                  name = names[i];\n                  callbacks = object.events[name];\n\n                  if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                      callbacks[j].apply(object, [eventClone]);\n                    }\n                  }\n                }\n              }\n            };\n          })();\n        },\n        { './Common': 14 },\n      ],\n      17: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n           *\n           * @class Matter\n           */\n\n          var Matter = {};\n\n          module.exports = Matter;\n\n          var Plugin = _dereq_('./Plugin');\n          var Common = _dereq_('./Common');\n\n          (function() {\n            /**\n             * The library name.\n             * @property name\n             * @readOnly\n             * @type {String}\n             */\n            Matter.name = 'matter-js';\n\n            /**\n             * The library version.\n             * @property version\n             * @readOnly\n             * @type {String}\n             */\n            Matter.version = '0.14.2';\n\n            /**\n             * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n             * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n             * @property uses\n             * @type {Array}\n             */\n            Matter.uses = [];\n\n            /**\n             * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n             * @property used\n             * @readOnly\n             * @type {Array}\n             */\n            Matter.used = [];\n\n            /**\n             * Installs the given plugins on the `Matter` namespace.\n             * This is a short-hand for `Plugin.use`, see it for more information.\n             * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n             * Avoid calling this function multiple times unless you intend to manually control installation order.\n             * @method use\n             * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n             */\n            Matter.use = function() {\n              Plugin.use(Matter, Array.prototype.slice.call(arguments));\n            };\n\n            /**\n             * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n             * See also docs for `Common.chain`.\n             * @method before\n             * @param {string} path The path relative to `Matter`\n             * @param {function} func The function to chain before the original\n             * @return {function} The chained function that replaced the original\n             */\n            Matter.before = function(path, func) {\n              path = path.replace(/^Matter./, '');\n              return Common.chainPathBefore(Matter, path, func);\n            };\n\n            /**\n             * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n             * See also docs for `Common.chain`.\n             * @method after\n             * @param {string} path The path relative to `Matter`\n             * @param {function} func The function to chain after the original\n             * @return {function} The chained function that replaced the original\n             */\n            Matter.after = function(path, func) {\n              path = path.replace(/^Matter./, '');\n              return Common.chainPathAfter(Matter, path, func);\n            };\n          })();\n        },\n        { './Common': 14, './Plugin': 20 },\n      ],\n      18: [\n        function(_dereq_, module, exports) {},\n        { '../body/Composite': 2, './Common': 14 },\n      ],\n      19: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n           *\n           * @class Mouse\n           */\n\n          var Mouse = {};\n\n          module.exports = Mouse;\n\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a mouse input.\n             * @method create\n             * @param {HTMLElement} element\n             * @return {mouse} A new mouse\n             */\n            Mouse.create = function(element) {\n              var mouse = {};\n\n              if (!element) {\n                Common.log(\n                  'Mouse.create: element was undefined, defaulting to document.body',\n                  'warn'\n                );\n              }\n\n              mouse.element = element || document.body;\n              mouse.absolute = { x: 0, y: 0 };\n              mouse.position = { x: 0, y: 0 };\n              mouse.mousedownPosition = { x: 0, y: 0 };\n              mouse.mouseupPosition = { x: 0, y: 0 };\n              mouse.offset = { x: 0, y: 0 };\n              mouse.scale = { x: 1, y: 1 };\n              mouse.wheelDelta = 0;\n              mouse.button = -1;\n              mouse.pixelRatio =\n                mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n              mouse.sourceEvents = {\n                mousemove: null,\n                mousedown: null,\n                mouseup: null,\n                mousewheel: null,\n              };\n\n              mouse.mousemove = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  mouse.button = 0;\n                  event.preventDefault();\n                }\n\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.sourceEvents.mousemove = event;\n              };\n\n              mouse.mousedown = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  mouse.button = 0;\n                  event.preventDefault();\n                } else {\n                  mouse.button = event.button;\n                }\n\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.mousedownPosition.x = mouse.position.x;\n                mouse.mousedownPosition.y = mouse.position.y;\n                mouse.sourceEvents.mousedown = event;\n              };\n\n              mouse.mouseup = function(event) {\n                var position = Mouse._getRelativeMousePosition(\n                    event,\n                    mouse.element,\n                    mouse.pixelRatio\n                  ),\n                  touches = event.changedTouches;\n\n                if (touches) {\n                  event.preventDefault();\n                }\n\n                mouse.button = -1;\n                mouse.absolute.x = position.x;\n                mouse.absolute.y = position.y;\n                mouse.position.x =\n                  mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n                mouse.position.y =\n                  mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n                mouse.mouseupPosition.x = mouse.position.x;\n                mouse.mouseupPosition.y = mouse.position.y;\n                mouse.sourceEvents.mouseup = event;\n              };\n\n              mouse.mousewheel = function(event) {\n                mouse.wheelDelta = Math.max(\n                  -1,\n                  Math.min(1, event.wheelDelta || -event.detail)\n                );\n                event.preventDefault();\n              };\n\n              Mouse.setElement(mouse, mouse.element);\n\n              return mouse;\n            };\n\n            /**\n             * Sets the element the mouse is bound to (and relative to).\n             * @method setElement\n             * @param {mouse} mouse\n             * @param {HTMLElement} element\n             */\n            Mouse.setElement = function(mouse, element) {\n              mouse.element = element;\n\n              element.addEventListener('mousemove', mouse.mousemove);\n              element.addEventListener('mousedown', mouse.mousedown);\n              element.addEventListener('mouseup', mouse.mouseup);\n\n              element.addEventListener('mousewheel', mouse.mousewheel);\n              element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n              element.addEventListener('touchmove', mouse.mousemove);\n              element.addEventListener('touchstart', mouse.mousedown);\n              element.addEventListener('touchend', mouse.mouseup);\n            };\n\n            /**\n             * Clears all captured source events.\n             * @method clearSourceEvents\n             * @param {mouse} mouse\n             */\n            Mouse.clearSourceEvents = function(mouse) {\n              mouse.sourceEvents.mousemove = null;\n              mouse.sourceEvents.mousedown = null;\n              mouse.sourceEvents.mouseup = null;\n              mouse.sourceEvents.mousewheel = null;\n              mouse.wheelDelta = 0;\n            };\n\n            /**\n             * Sets the mouse position offset.\n             * @method setOffset\n             * @param {mouse} mouse\n             * @param {vector} offset\n             */\n            Mouse.setOffset = function(mouse, offset) {\n              mouse.offset.x = offset.x;\n              mouse.offset.y = offset.y;\n              mouse.position.x =\n                mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n              mouse.position.y =\n                mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            };\n\n            /**\n             * Sets the mouse position scale.\n             * @method setScale\n             * @param {mouse} mouse\n             * @param {vector} scale\n             */\n            Mouse.setScale = function(mouse, scale) {\n              mouse.scale.x = scale.x;\n              mouse.scale.y = scale.y;\n              mouse.position.x =\n                mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n              mouse.position.y =\n                mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            };\n\n            /**\n             * Gets the mouse position relative to an element given a screen pixel ratio.\n             * @method _getRelativeMousePosition\n             * @private\n             * @param {} event\n             * @param {} element\n             * @param {number} pixelRatio\n             * @return {}\n             */\n            Mouse._getRelativeMousePosition = function(\n              event,\n              element,\n              pixelRatio\n            ) {\n              var elementBounds = element.getBoundingClientRect(),\n                rootNode =\n                  document.documentElement ||\n                  document.body.parentNode ||\n                  document.body,\n                scrollX =\n                  window.pageXOffset !== undefined\n                    ? window.pageXOffset\n                    : rootNode.scrollLeft,\n                scrollY =\n                  window.pageYOffset !== undefined\n                    ? window.pageYOffset\n                    : rootNode.scrollTop,\n                touches = event.changedTouches,\n                x,\n                y;\n\n              if (touches) {\n                x = touches[0].pageX - elementBounds.left - scrollX;\n                y = touches[0].pageY - elementBounds.top - scrollY;\n              } else {\n                x = event.pageX - elementBounds.left - scrollX;\n                y = event.pageY - elementBounds.top - scrollY;\n              }\n\n              return {\n                x:\n                  x /\n                  (element.clientWidth /\n                    (element.width || element.clientWidth) *\n                    pixelRatio),\n                y:\n                  y /\n                  (element.clientHeight /\n                    (element.height || element.clientHeight) *\n                    pixelRatio),\n              };\n            };\n          })();\n        },\n        { '../core/Common': 14 },\n      ],\n      20: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n           *\n           * @class Plugin\n           */\n\n          var Plugin = {};\n\n          module.exports = Plugin;\n\n          var Common = _dereq_('./Common');\n\n          (function() {\n            Plugin._registry = {};\n\n            /**\n             * Registers a plugin object so it can be resolved later by name.\n             * @method register\n             * @param plugin {} The plugin to register.\n             * @return {object} The plugin.\n             */\n            Plugin.register = function(plugin) {\n              if (!Plugin.isPlugin(plugin)) {\n                Common.warn(\n                  'Plugin.register:',\n                  Plugin.toString(plugin),\n                  'does not implement all required fields.'\n                );\n              }\n\n              if (plugin.name in Plugin._registry) {\n                var registered = Plugin._registry[plugin.name],\n                  pluginVersion = Plugin.versionParse(plugin.version).number,\n                  registeredVersion = Plugin.versionParse(registered.version)\n                    .number;\n\n                if (pluginVersion > registeredVersion) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(registered),\n                    'was upgraded to',\n                    Plugin.toString(plugin)\n                  );\n                  Plugin._registry[plugin.name] = plugin;\n                } else if (pluginVersion < registeredVersion) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(registered),\n                    'can not be downgraded to',\n                    Plugin.toString(plugin)\n                  );\n                } else if (plugin !== registered) {\n                  Common.warn(\n                    'Plugin.register:',\n                    Plugin.toString(plugin),\n                    'is already registered to different plugin object'\n                  );\n                }\n              } else {\n                Plugin._registry[plugin.name] = plugin;\n              }\n\n              return plugin;\n            };\n\n            /**\n             * Resolves a dependency to a plugin object from the registry if it exists.\n             * The `dependency` may contain a version, but only the name matters when resolving.\n             * @method resolve\n             * @param dependency {string} The dependency.\n             * @return {object} The plugin if resolved, otherwise `undefined`.\n             */\n            Plugin.resolve = function(dependency) {\n              return Plugin._registry[Plugin.dependencyParse(dependency).name];\n            };\n\n            /**\n             * Returns a pretty printed plugin name and version.\n             * @method toString\n             * @param plugin {} The plugin.\n             * @return {string} Pretty printed plugin name and version.\n             */\n            Plugin.toString = function(plugin) {\n              return typeof plugin === 'string'\n                ? plugin\n                : (plugin.name || 'anonymous') +\n                    '@' +\n                    (plugin.version || plugin.range || '0.0.0');\n            };\n\n            /**\n             * Returns `true` if the object meets the minimum standard to be considered a plugin.\n             * This means it must define the following properties:\n             * - `name`\n             * - `version`\n             * - `install`\n             * @method isPlugin\n             * @param obj {} The obj to test.\n             * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n             */\n            Plugin.isPlugin = function(obj) {\n              return obj && obj.name && obj.version && obj.install;\n            };\n\n            /**\n             * Returns `true` if a plugin with the given `name` been installed on `module`.\n             * @method isUsed\n             * @param module {} The module.\n             * @param name {string} The plugin name.\n             * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n             */\n            Plugin.isUsed = function(module, name) {\n              return module.used.indexOf(name) > -1;\n            };\n\n            /**\n             * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n             * If `plugin.for` is not specified then it is assumed to be applicable.\n             * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n             * @method isFor\n             * @param plugin {} The plugin.\n             * @param module {} The module.\n             * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n             */\n            Plugin.isFor = function(plugin, module) {\n              var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n              return (\n                !plugin.for ||\n                (module.name === parsed.name &&\n                  Plugin.versionSatisfies(module.version, parsed.range))\n              );\n            };\n\n            /**\n             * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n             * For installing plugins on `Matter` see the convenience function `Matter.use`.\n             * Plugins may be specified either by their name or a reference to the plugin object.\n             * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n             * Order is important, a topological sort is performed to find the best resulting order of installation.\n             * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n             * This function logs the resulting status of each dependency in the console, along with any warnings.\n             * - A green tick ✅ indicates a dependency was resolved and installed.\n             * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n             * - A red cross ❌ indicates a dependency could not be resolved.\n             * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n             * @method use\n             * @param module {} The module install plugins on.\n             * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n             */\n            Plugin.use = function(module, plugins) {\n              module.uses = (module.uses || []).concat(plugins || []);\n\n              if (module.uses.length === 0) {\n                Common.warn(\n                  'Plugin.use:',\n                  Plugin.toString(module),\n                  'does not specify any dependencies to install.'\n                );\n                return;\n              }\n\n              var dependencies = Plugin.dependencies(module),\n                sortedDependencies = Common.topologicalSort(dependencies),\n                status = [];\n\n              for (var i = 0; i < sortedDependencies.length; i += 1) {\n                if (sortedDependencies[i] === module.name) {\n                  continue;\n                }\n\n                var plugin = Plugin.resolve(sortedDependencies[i]);\n\n                if (!plugin) {\n                  status.push('❌ ' + sortedDependencies[i]);\n                  continue;\n                }\n\n                if (Plugin.isUsed(module, plugin.name)) {\n                  continue;\n                }\n\n                if (!Plugin.isFor(plugin, module)) {\n                  Common.warn(\n                    'Plugin.use:',\n                    Plugin.toString(plugin),\n                    'is for',\n                    plugin.for,\n                    'but installed on',\n                    Plugin.toString(module) + '.'\n                  );\n                  plugin._warned = true;\n                }\n\n                if (plugin.install) {\n                  plugin.install(module);\n                } else {\n                  Common.warn(\n                    'Plugin.use:',\n                    Plugin.toString(plugin),\n                    'does not specify an install function.'\n                  );\n                  plugin._warned = true;\n                }\n\n                if (plugin._warned) {\n                  status.push('🔶 ' + Plugin.toString(plugin));\n                  delete plugin._warned;\n                } else {\n                  status.push('✅ ' + Plugin.toString(plugin));\n                }\n\n                module.used.push(plugin.name);\n              }\n\n              if (status.length > 0) {\n                Common.info(status.join('  '));\n              }\n            };\n\n            /**\n             * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n             * @method dependencies\n             * @param module {} The module.\n             * @return {object} A dependency graph.\n             */\n            Plugin.dependencies = function(module, tracked) {\n              var parsedBase = Plugin.dependencyParse(module),\n                name = parsedBase.name;\n\n              tracked = tracked || {};\n\n              if (name in tracked) {\n                return;\n              }\n\n              module = Plugin.resolve(module) || module;\n\n              tracked[name] = Common.map(module.uses || [], function(\n                dependency\n              ) {\n                if (Plugin.isPlugin(dependency)) {\n                  Plugin.register(dependency);\n                }\n\n                var parsed = Plugin.dependencyParse(dependency),\n                  resolved = Plugin.resolve(dependency);\n\n                if (\n                  resolved &&\n                  !Plugin.versionSatisfies(resolved.version, parsed.range)\n                ) {\n                  Common.warn(\n                    'Plugin.dependencies:',\n                    Plugin.toString(resolved),\n                    'does not satisfy',\n                    Plugin.toString(parsed),\n                    'used by',\n                    Plugin.toString(parsedBase) + '.'\n                  );\n\n                  resolved._warned = true;\n                  module._warned = true;\n                } else if (!resolved) {\n                  Common.warn(\n                    'Plugin.dependencies:',\n                    Plugin.toString(dependency),\n                    'used by',\n                    Plugin.toString(parsedBase),\n                    'could not be resolved.'\n                  );\n\n                  module._warned = true;\n                }\n\n                return parsed.name;\n              });\n\n              for (var i = 0; i < tracked[name].length; i += 1) {\n                Plugin.dependencies(tracked[name][i], tracked);\n              }\n\n              return tracked;\n            };\n\n            /**\n             * Parses a dependency string into its components.\n             * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n             * See documentation for `Plugin.versionParse` for a description of the format.\n             * This function can also handle dependencies that are already resolved (e.g. a module object).\n             * @method dependencyParse\n             * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n             * @return {object} The dependency parsed into its components.\n             */\n            Plugin.dependencyParse = function(dependency) {\n              if (Common.isString(dependency)) {\n                var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n                if (!pattern.test(dependency)) {\n                  Common.warn(\n                    'Plugin.dependencyParse:',\n                    dependency,\n                    'is not a valid dependency string.'\n                  );\n                }\n\n                return {\n                  name: dependency.split('@')[0],\n                  range: dependency.split('@')[1] || '*',\n                };\n              }\n\n              return {\n                name: dependency.name,\n                range: dependency.range || dependency.version,\n              };\n            };\n\n            /**\n             * Parses a version string into its components.\n             * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n             * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n             * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n             * Only the following range types are supported:\n             * - Tilde ranges e.g. `~1.2.3`\n             * - Caret ranges e.g. `^1.2.3`\n             * - Exact version e.g. `1.2.3`\n             * - Any version `*`\n             * @method versionParse\n             * @param range {string} The version string.\n             * @return {object} The version range parsed into its components.\n             */\n            Plugin.versionParse = function(range) {\n              var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n              if (!pattern.test(range)) {\n                Common.warn(\n                  'Plugin.versionParse:',\n                  range,\n                  'is not a valid version or range.'\n                );\n              }\n\n              var identifiers = range.split('-');\n              range = identifiers[0];\n\n              var isRange = isNaN(Number(range[0])),\n                version = isRange ? range.substr(1) : range,\n                parts = Common.map(version.split('.'), function(part) {\n                  return Number(part);\n                });\n\n              return {\n                isRange: isRange,\n                version: version,\n                range: range,\n                operator: isRange ? range[0] : '',\n                parts: parts,\n                prerelease: identifiers[1],\n                number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2],\n              };\n            };\n\n            /**\n             * Returns `true` if `version` satisfies the given `range`.\n             * See documentation for `Plugin.versionParse` for a description of the format.\n             * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n             * @method versionSatisfies\n             * @param version {string} The version string.\n             * @param range {string} The range string.\n             * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n             */\n            Plugin.versionSatisfies = function(version, range) {\n              range = range || '*';\n\n              var rangeParsed = Plugin.versionParse(range),\n                rangeParts = rangeParsed.parts,\n                versionParsed = Plugin.versionParse(version),\n                versionParts = versionParsed.parts;\n\n              if (rangeParsed.isRange) {\n                if (rangeParsed.operator === '*' || version === '*') {\n                  return true;\n                }\n\n                if (rangeParsed.operator === '~') {\n                  return (\n                    versionParts[0] === rangeParts[0] &&\n                    versionParts[1] === rangeParts[1] &&\n                    versionParts[2] >= rangeParts[2]\n                  );\n                }\n\n                if (rangeParsed.operator === '^') {\n                  if (rangeParts[0] > 0) {\n                    return (\n                      versionParts[0] === rangeParts[0] &&\n                      versionParsed.number >= rangeParsed.number\n                    );\n                  }\n\n                  if (rangeParts[1] > 0) {\n                    return (\n                      versionParts[1] === rangeParts[1] &&\n                      versionParts[2] >= rangeParts[2]\n                    );\n                  }\n\n                  return versionParts[2] === rangeParts[2];\n                }\n              }\n\n              return version === range || version === '*';\n            };\n          })();\n        },\n        { './Common': 14 },\n      ],\n      21: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Runner` module is an optional utility which provides a game loop,\n           * that handles continuously updating a `Matter.Engine` for you within a browser.\n           * It is intended for development and debugging purposes, but may also be suitable for simple games.\n           * If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n           * Instead just call `Engine.update(engine, delta)` in your own loop.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Runner\n           */\n\n          var Runner = {};\n\n          module.exports = Runner;\n\n          var Events = _dereq_('./Events');\n          var Engine = _dereq_('./Engine');\n          var Common = _dereq_('./Common');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame;\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            if (!_requestAnimationFrame) {\n              var _frameTimeout;\n\n              _requestAnimationFrame = function(callback) {\n                _frameTimeout = setTimeout(function() {\n                  callback(Common.now());\n                }, 1000 / 60);\n              };\n\n              _cancelAnimationFrame = function() {\n                clearTimeout(_frameTimeout);\n              };\n            }\n\n            /**\n             * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * @method create\n             * @param {} options\n             */\n            Runner.create = function(options) {\n              var defaults = {\n                fps: 60,\n                correction: 1,\n                deltaSampleSize: 60,\n                counterTimestamp: 0,\n                frameCounter: 0,\n                deltaHistory: [],\n                timePrev: null,\n                timeScalePrev: 1,\n                frameRequestId: null,\n                isFixed: false,\n                enabled: true,\n              };\n\n              var runner = Common.extend(defaults, options);\n\n              runner.delta = runner.delta || 1000 / runner.fps;\n              runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n              runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n              runner.fps = 1000 / runner.delta;\n\n              return runner;\n            };\n\n            /**\n             * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n             * @method run\n             * @param {engine} engine\n             */\n            Runner.run = function(runner, engine) {\n              // create runner if engine is first argument\n              if (typeof runner.positionIterations !== 'undefined') {\n                engine = runner;\n                runner = Runner.create();\n              }\n\n              (function render(time) {\n                runner.frameRequestId = _requestAnimationFrame(render);\n\n                if (time && runner.enabled) {\n                  Runner.tick(runner, engine, time);\n                }\n              })();\n\n              return runner;\n            };\n\n            /**\n             * A game loop utility that updates the engine and renderer by one step (a 'tick').\n             * Features delta smoothing, time correction and fixed or dynamic timing.\n             * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n             * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n             * @method tick\n             * @param {runner} runner\n             * @param {engine} engine\n             * @param {number} time\n             */\n            Runner.tick = function(runner, engine, time) {\n              var timing = engine.timing,\n                correction = 1,\n                delta;\n\n              // create an event object\n              var event = {\n                timestamp: timing.timestamp,\n              };\n\n              Events.trigger(runner, 'beforeTick', event);\n              Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n              if (runner.isFixed) {\n                // fixed timestep\n                delta = runner.delta;\n              } else {\n                // dynamic timestep based on wall clock between calls\n                delta = time - runner.timePrev || runner.delta;\n                runner.timePrev = time;\n\n                // optimistically filter delta over a few frames, to improve stability\n                runner.deltaHistory.push(delta);\n                runner.deltaHistory = runner.deltaHistory.slice(\n                  -runner.deltaSampleSize\n                );\n                delta = Math.min.apply(null, runner.deltaHistory);\n\n                // limit delta\n                delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n                delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n                // correction for delta\n                correction = delta / runner.delta;\n\n                // update engine timing object\n                runner.delta = delta;\n              }\n\n              // time correction for time scaling\n              if (runner.timeScalePrev !== 0)\n                correction *= timing.timeScale / runner.timeScalePrev;\n\n              if (timing.timeScale === 0) correction = 0;\n\n              runner.timeScalePrev = timing.timeScale;\n              runner.correction = correction;\n\n              // fps counter\n              runner.frameCounter += 1;\n              if (time - runner.counterTimestamp >= 1000) {\n                runner.fps =\n                  runner.frameCounter *\n                  ((time - runner.counterTimestamp) / 1000);\n                runner.counterTimestamp = time;\n                runner.frameCounter = 0;\n              }\n\n              Events.trigger(runner, 'tick', event);\n              Events.trigger(engine, 'tick', event); // @deprecated\n\n              // if world has been modified, clear the render scene graph\n              if (\n                engine.world.isModified &&\n                engine.render &&\n                engine.render.controller &&\n                engine.render.controller.clear\n              ) {\n                engine.render.controller.clear(engine.render); // @deprecated\n              }\n\n              // update\n              Events.trigger(runner, 'beforeUpdate', event);\n              Engine.update(engine, delta, correction);\n              Events.trigger(runner, 'afterUpdate', event);\n\n              // render\n              // @deprecated\n              if (engine.render && engine.render.controller) {\n                Events.trigger(runner, 'beforeRender', event);\n                Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n                engine.render.controller.world(engine.render);\n\n                Events.trigger(runner, 'afterRender', event);\n                Events.trigger(engine, 'afterRender', event); // @deprecated\n              }\n\n              Events.trigger(runner, 'afterTick', event);\n              Events.trigger(engine, 'afterTick', event); // @deprecated\n            };\n\n            /**\n             * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n             * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n             * @method stop\n             * @param {runner} runner\n             */\n            Runner.stop = function(runner) {\n              _cancelAnimationFrame(runner.frameRequestId);\n            };\n\n            /**\n             * Alias for `Runner.run`.\n             * @method start\n             * @param {runner} runner\n             * @param {engine} engine\n             */\n            Runner.start = function(runner, engine) {\n              Runner.run(runner, engine);\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired at the start of a tick, before any updates to the engine or timing\n             *\n             * @event beforeTick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after engine timing updated, but just before update\n             *\n             * @event tick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired at the end of a tick, after engine update and after rendering\n             *\n             * @event afterTick\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired before update\n             *\n             * @event beforeUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after update\n             *\n             * @event afterUpdate\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired before rendering\n             *\n             * @event beforeRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             * @deprecated\n             */\n\n            /**\n             * Fired after rendering\n             *\n             * @event afterRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             * @deprecated\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A flag that specifies whether the runner is running or not.\n             *\n             * @property enabled\n             * @type boolean\n             * @default true\n             */\n\n            /**\n             * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n             * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n             * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n             *\n             * @property isFixed\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Number` that specifies the time step between updates in milliseconds.\n             * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n             * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n             *\n             * @property delta\n             * @type number\n             * @default 1000 / 60\n             */\n          })();\n        },\n        { './Common': 14, './Engine': 15, './Events': 16 },\n      ],\n      22: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n           *\n           * @class Sleeping\n           */\n\n          var Sleeping = {};\n\n          module.exports = Sleeping;\n\n          var Events = _dereq_('./Events');\n\n          (function() {\n            Sleeping._motionWakeThreshold = 0.18;\n            Sleeping._motionSleepThreshold = 0.08;\n            Sleeping._minBias = 0.9;\n\n            /**\n             * Puts bodies to sleep or wakes them up depending on their motion.\n             * @method update\n             * @param {body[]} bodies\n             * @param {number} timeScale\n             */\n            Sleeping.update = function(bodies, timeScale) {\n              var timeFactor = timeScale * timeScale * timeScale;\n\n              // update bodies sleeping status\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  motion =\n                    body.speed * body.speed +\n                    body.angularSpeed * body.angularSpeed;\n\n                // wake up bodies if they have a force applied\n                if (body.force.x !== 0 || body.force.y !== 0) {\n                  Sleeping.set(body, false);\n                  continue;\n                }\n\n                var minMotion = Math.min(body.motion, motion),\n                  maxMotion = Math.max(body.motion, motion);\n\n                // biased average motion estimation between frames\n                body.motion =\n                  Sleeping._minBias * minMotion +\n                  (1 - Sleeping._minBias) * maxMotion;\n\n                if (\n                  body.sleepThreshold > 0 &&\n                  body.motion < Sleeping._motionSleepThreshold * timeFactor\n                ) {\n                  body.sleepCounter += 1;\n\n                  if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n                } else if (body.sleepCounter > 0) {\n                  body.sleepCounter -= 1;\n                }\n              }\n            };\n\n            /**\n             * Given a set of colliding pairs, wakes the sleeping bodies involved.\n             * @method afterCollisions\n             * @param {pair[]} pairs\n             * @param {number} timeScale\n             */\n            Sleeping.afterCollisions = function(pairs, timeScale) {\n              var timeFactor = timeScale * timeScale * timeScale;\n\n              // wake up bodies involved in collisions\n              for (var i = 0; i < pairs.length; i++) {\n                var pair = pairs[i];\n\n                // don't wake inactive pairs\n                if (!pair.isActive) continue;\n\n                var collision = pair.collision,\n                  bodyA = collision.bodyA.parent,\n                  bodyB = collision.bodyB.parent;\n\n                // don't wake if at least one body is static\n                if (\n                  (bodyA.isSleeping && bodyB.isSleeping) ||\n                  bodyA.isStatic ||\n                  bodyB.isStatic\n                )\n                  continue;\n\n                if (bodyA.isSleeping || bodyB.isSleeping) {\n                  var sleepingBody =\n                      bodyA.isSleeping && !bodyA.isStatic ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                  if (\n                    !sleepingBody.isStatic &&\n                    movingBody.motion >\n                      Sleeping._motionWakeThreshold * timeFactor\n                  ) {\n                    Sleeping.set(sleepingBody, false);\n                  }\n                }\n              }\n            };\n\n            /**\n             * Set a body as sleeping or awake.\n             * @method set\n             * @param {body} body\n             * @param {boolean} isSleeping\n             */\n            Sleeping.set = function(body, isSleeping) {\n              var wasSleeping = body.isSleeping;\n\n              if (isSleeping) {\n                body.isSleeping = true;\n                body.sleepCounter = body.sleepThreshold;\n\n                body.positionImpulse.x = 0;\n                body.positionImpulse.y = 0;\n\n                body.positionPrev.x = body.position.x;\n                body.positionPrev.y = body.position.y;\n\n                body.anglePrev = body.angle;\n                body.speed = 0;\n                body.angularSpeed = 0;\n                body.motion = 0;\n\n                if (!wasSleeping) {\n                  Events.trigger(body, 'sleepStart');\n                }\n              } else {\n                body.isSleeping = false;\n                body.sleepCounter = 0;\n\n                if (wasSleeping) {\n                  Events.trigger(body, 'sleepEnd');\n                }\n              }\n            };\n          })();\n        },\n        { './Events': 16 },\n      ],\n      23: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Bodies` module contains factory methods for creating rigid body models\n           * with commonly used body configurations (such as rectangles, circles and other polygons).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Bodies\n           */\n\n          // TODO: true circle bodies\n\n          var Bodies = {};\n\n          module.exports = Bodies;\n\n          var Vertices = _dereq_('../geometry/Vertices');\n          var Common = _dereq_('../core/Common');\n          var Body = _dereq_('../body/Body');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Vector = _dereq_('../geometry/Vector');\n          var decomp;\n\n          (function() {\n            /**\n             * Creates a new rigid body model with a rectangle hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method rectangle\n             * @param {number} x\n             * @param {number} y\n             * @param {number} width\n             * @param {number} height\n             * @param {object} [options]\n             * @return {body} A new rectangle body\n             */\n            Bodies.rectangle = function(x, y, width, height, options) {\n              options = options || {};\n\n              var rectangle = {\n                label: 'Rectangle Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(\n                  'L 0 0 L ' +\n                    width +\n                    ' 0 L ' +\n                    width +\n                    ' ' +\n                    height +\n                    ' L 0 ' +\n                    height\n                ),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                rectangle.vertices = Vertices.chamfer(\n                  rectangle.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, rectangle, options));\n            };\n\n            /**\n             * Creates a new rigid body model with a trapezoid hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method trapezoid\n             * @param {number} x\n             * @param {number} y\n             * @param {number} width\n             * @param {number} height\n             * @param {number} slope\n             * @param {object} [options]\n             * @return {body} A new trapezoid body\n             */\n            Bodies.trapezoid = function(x, y, width, height, slope, options) {\n              options = options || {};\n\n              slope *= 0.5;\n              var roof = (1 - slope * 2) * width;\n\n              var x1 = width * slope,\n                x2 = x1 + roof,\n                x3 = x2 + x1,\n                verticesPath;\n\n              if (slope < 0.5) {\n                verticesPath =\n                  'L 0 0 L ' +\n                  x1 +\n                  ' ' +\n                  -height +\n                  ' L ' +\n                  x2 +\n                  ' ' +\n                  -height +\n                  ' L ' +\n                  x3 +\n                  ' 0';\n              } else {\n                verticesPath =\n                  'L 0 0 L ' + x2 + ' ' + -height + ' L ' + x3 + ' 0';\n              }\n\n              var trapezoid = {\n                label: 'Trapezoid Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(verticesPath),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                trapezoid.vertices = Vertices.chamfer(\n                  trapezoid.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, trapezoid, options));\n            };\n\n            /**\n             * Creates a new rigid body model with a circle hull.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method circle\n             * @param {number} x\n             * @param {number} y\n             * @param {number} radius\n             * @param {object} [options]\n             * @param {number} [maxSides]\n             * @return {body} A new circle body\n             */\n            Bodies.circle = function(x, y, radius, options, maxSides) {\n              options = options || {};\n\n              var circle = {\n                label: 'Circle Body',\n                circleRadius: radius,\n              };\n\n              // approximate circles with polygons until true circles implemented in SAT\n              maxSides = maxSides || 25;\n              var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n              // optimisation: always use even number of sides (half the number of unique axes)\n              if (sides % 2 === 1) sides += 1;\n\n              return Bodies.polygon(\n                x,\n                y,\n                sides,\n                radius,\n                Common.extend({}, circle, options)\n              );\n            };\n\n            /**\n             * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n             * The options parameter is an object that specifies any properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method polygon\n             * @param {number} x\n             * @param {number} y\n             * @param {number} sides\n             * @param {number} radius\n             * @param {object} [options]\n             * @return {body} A new regular polygon body\n             */\n            Bodies.polygon = function(x, y, sides, radius, options) {\n              options = options || {};\n\n              if (sides < 3) return Bodies.circle(x, y, radius, options);\n\n              var theta = 2 * Math.PI / sides,\n                path = '',\n                offset = theta * 0.5;\n\n              for (var i = 0; i < sides; i += 1) {\n                var angle = offset + i * theta,\n                  xx = Math.cos(angle) * radius,\n                  yy = Math.sin(angle) * radius;\n\n                path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n              }\n\n              var polygon = {\n                label: 'Polygon Body',\n                position: { x: x, y: y },\n                vertices: Vertices.fromPath(path),\n              };\n\n              if (options.chamfer) {\n                var chamfer = options.chamfer;\n                polygon.vertices = Vertices.chamfer(\n                  polygon.vertices,\n                  chamfer.radius,\n                  chamfer.quality,\n                  chamfer.qualityMin,\n                  chamfer.qualityMax\n                );\n                delete options.chamfer;\n              }\n\n              return Body.create(Common.extend({}, polygon, options));\n            };\n\n            /**\n             * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n             * If the vertices are convex, they will pass through as supplied.\n             * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n             * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n             * By default the decomposition will discard collinear edges (to improve performance).\n             * It can also optionally discard any parts that have an area less than `minimumArea`.\n             * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n             * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n             * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n             * @method fromVertices\n             * @param {number} x\n             * @param {number} y\n             * @param [[vector]] vertexSets\n             * @param {object} [options]\n             * @param {bool} [flagInternal=false]\n             * @param {number} [removeCollinear=0.01]\n             * @param {number} [minimumArea=10]\n             * @return {body}\n             */\n            Bodies.fromVertices = function(\n              x,\n              y,\n              vertexSets,\n              options,\n              flagInternal,\n              removeCollinear,\n              minimumArea\n            ) {\n              if (!decomp) {\n                decomp = Common._requireGlobal('decomp', 'poly-decomp');\n              }\n\n              var body, parts, isConvex, vertices, i, j, k, v, z;\n\n              options = options || {};\n              parts = [];\n\n              flagInternal =\n                typeof flagInternal !== 'undefined' ? flagInternal : false;\n              removeCollinear =\n                typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n              minimumArea =\n                typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n              if (!decomp) {\n                Common.warn(\n                  'Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.'\n                );\n              }\n\n              // ensure vertexSets is an array of arrays\n              if (!Common.isArray(vertexSets[0])) {\n                vertexSets = [vertexSets];\n              }\n\n              for (v = 0; v < vertexSets.length; v += 1) {\n                vertices = vertexSets[v];\n                isConvex = Vertices.isConvex(vertices);\n\n                if (isConvex || !decomp) {\n                  if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                  } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                  }\n\n                  parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices,\n                  });\n                } else {\n                  // initialise a decomposition\n                  var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                  });\n\n                  // vertices are concave and simple, we can decompose into parts\n                  decomp.makeCCW(concave);\n                  if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                  // use the quick decomposition algorithm (Bayazit)\n                  var decomposed = decomp.quickDecomp(concave);\n\n                  // for each decomposed chunk\n                  for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                      return {\n                        x: vertices[0],\n                        y: vertices[1],\n                      };\n                    });\n\n                    // skip small chunks\n                    if (\n                      minimumArea > 0 &&\n                      Vertices.area(chunkVertices) < minimumArea\n                    )\n                      continue;\n\n                    // create a compound part\n                    parts.push({\n                      position: Vertices.centre(chunkVertices),\n                      vertices: chunkVertices,\n                    });\n                  }\n                }\n              }\n\n              // create body parts\n              for (i = 0; i < parts.length; i++) {\n                parts[i] = Body.create(Common.extend(parts[i], options));\n              }\n\n              // flag internal edges (coincident part edges)\n              if (flagInternal) {\n                var coincident_max_dist = 5;\n\n                for (i = 0; i < parts.length; i++) {\n                  var partA = parts[i];\n\n                  for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                      var pav = partA.vertices,\n                        pbv = partB.vertices;\n\n                      // iterate vertices of both parts\n                      for (k = 0; k < partA.vertices.length; k++) {\n                        for (z = 0; z < partB.vertices.length; z++) {\n                          // find distances between the vertices\n                          var da = Vector.magnitudeSquared(\n                              Vector.sub(pav[(k + 1) % pav.length], pbv[z])\n                            ),\n                            db = Vector.magnitudeSquared(\n                              Vector.sub(pav[k], pbv[(z + 1) % pbv.length])\n                            );\n\n                          // if both vertices are very close, consider the edge concident (internal)\n                          if (\n                            da < coincident_max_dist &&\n                            db < coincident_max_dist\n                          ) {\n                            pav[k].isInternal = true;\n                            pbv[z].isInternal = true;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (parts.length > 1) {\n                // create the parent body to be returned, that contains generated compound parts\n                body = Body.create(\n                  Common.extend({ parts: parts.slice(0) }, options)\n                );\n                Body.setPosition(body, { x: x, y: y });\n\n                return body;\n              } else {\n                return parts[0];\n              }\n            };\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../core/Common': 14,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n        },\n      ],\n      24: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Composites` module contains factory methods for creating composite bodies\n           * with commonly used configurations (such as stacks and chains).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Composites\n           */\n\n          var Composites = {};\n\n          module.exports = Composites;\n\n          var Composite = _dereq_('../body/Composite');\n          var Constraint = _dereq_('../constraint/Constraint');\n          var Common = _dereq_('../core/Common');\n          var Body = _dereq_('../body/Body');\n          var Bodies = _dereq_('./Bodies');\n\n          (function() {\n            /**\n             * Create a new composite containing bodies created in the callback in a grid arrangement.\n             * This function uses the body's bounds to prevent overlaps.\n             * @method stack\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {function} callback\n             * @return {composite} A new composite containing objects created in the callback\n             */\n            Composites.stack = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              callback\n            ) {\n              var stack = Composite.create({ label: 'Stack' }),\n                x = xx,\n                y = yy,\n                lastBody,\n                i = 0;\n\n              for (var row = 0; row < rows; row++) {\n                var maxHeight = 0;\n\n                for (var column = 0; column < columns; column++) {\n                  var body = callback(x, y, column, row, lastBody, i);\n\n                  if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                      bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight) maxHeight = bodyHeight;\n\n                    Body.translate(body, {\n                      x: bodyWidth * 0.5,\n                      y: bodyHeight * 0.5,\n                    });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                  } else {\n                    x += columnGap;\n                  }\n                }\n\n                y += maxHeight + rowGap;\n                x = xx;\n              }\n\n              return stack;\n            };\n\n            /**\n             * Chains all bodies in the given composite together using constraints.\n             * @method chain\n             * @param {composite} composite\n             * @param {number} xOffsetA\n             * @param {number} yOffsetA\n             * @param {number} xOffsetB\n             * @param {number} yOffsetB\n             * @param {object} options\n             * @return {composite} A new composite containing objects chained together with constraints\n             */\n            Composites.chain = function(\n              composite,\n              xOffsetA,\n              yOffsetA,\n              xOffsetB,\n              yOffsetB,\n              options\n            ) {\n              var bodies = composite.bodies;\n\n              for (var i = 1; i < bodies.length; i++) {\n                var bodyA = bodies[i - 1],\n                  bodyB = bodies[i],\n                  bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                  bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                  bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                  bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n                var defaults = {\n                  bodyA: bodyA,\n                  pointA: {\n                    x: bodyAWidth * xOffsetA,\n                    y: bodyAHeight * yOffsetA,\n                  },\n                  bodyB: bodyB,\n                  pointB: {\n                    x: bodyBWidth * xOffsetB,\n                    y: bodyBHeight * yOffsetB,\n                  },\n                };\n\n                var constraint = Common.extend(defaults, options);\n\n                Composite.addConstraint(\n                  composite,\n                  Constraint.create(constraint)\n                );\n              }\n\n              composite.label += ' Chain';\n\n              return composite;\n            };\n\n            /**\n             * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n             * @method mesh\n             * @param {composite} composite\n             * @param {number} columns\n             * @param {number} rows\n             * @param {boolean} crossBrace\n             * @param {object} options\n             * @return {composite} The composite containing objects meshed together with constraints\n             */\n            Composites.mesh = function(\n              composite,\n              columns,\n              rows,\n              crossBrace,\n              options\n            ) {\n              var bodies = composite.bodies,\n                row,\n                col,\n                bodyA,\n                bodyB,\n                bodyC;\n\n              for (row = 0; row < rows; row++) {\n                for (col = 1; col < columns; col++) {\n                  bodyA = bodies[col - 1 + row * columns];\n                  bodyB = bodies[col + row * columns];\n                  Composite.addConstraint(\n                    composite,\n                    Constraint.create(\n                      Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)\n                    )\n                  );\n                }\n\n                if (row > 0) {\n                  for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + (row - 1) * columns];\n                    bodyB = bodies[col + row * columns];\n                    Composite.addConstraint(\n                      composite,\n                      Constraint.create(\n                        Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)\n                      )\n                    );\n\n                    if (crossBrace && col > 0) {\n                      bodyC = bodies[col - 1 + (row - 1) * columns];\n                      Composite.addConstraint(\n                        composite,\n                        Constraint.create(\n                          Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)\n                        )\n                      );\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                      bodyC = bodies[col + 1 + (row - 1) * columns];\n                      Composite.addConstraint(\n                        composite,\n                        Constraint.create(\n                          Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)\n                        )\n                      );\n                    }\n                  }\n                }\n              }\n\n              composite.label += ' Mesh';\n\n              return composite;\n            };\n\n            /**\n             * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n             * This function uses the body's bounds to prevent overlaps.\n             * @method pyramid\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {function} callback\n             * @return {composite} A new composite containing objects created in the callback\n             */\n            Composites.pyramid = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              callback\n            ) {\n              return Composites.stack(\n                xx,\n                yy,\n                columns,\n                rows,\n                columnGap,\n                rowGap,\n                function(x, y, column, row, lastBody, i) {\n                  var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                    lastBodyWidth = lastBody\n                      ? lastBody.bounds.max.x - lastBody.bounds.min.x\n                      : 0;\n\n                  if (row > actualRows) return;\n\n                  // reverse row order\n                  row = actualRows - row;\n\n                  var start = row,\n                    end = columns - 1 - row;\n\n                  if (column < start || column > end) return;\n\n                  // retroactively fix the first body's position, since width was unknown\n                  if (i === 1) {\n                    Body.translate(lastBody, {\n                      x:\n                        (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth,\n                      y: 0,\n                    });\n                  }\n\n                  var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n                  return callback(\n                    xx + xOffset + column * columnGap,\n                    y,\n                    column,\n                    row,\n                    lastBody,\n                    i\n                  );\n                }\n              );\n            };\n\n            /**\n             * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n             * @method newtonsCradle\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} number\n             * @param {number} size\n             * @param {number} length\n             * @return {composite} A new composite newtonsCradle body\n             */\n            Composites.newtonsCradle = function(xx, yy, number, size, length) {\n              var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n              for (var i = 0; i < number; i++) {\n                var separation = 1.9,\n                  circle = Bodies.circle(\n                    xx + i * (size * separation),\n                    yy + length,\n                    size,\n                    {\n                      inertia: Infinity,\n                      restitution: 1,\n                      friction: 0,\n                      frictionAir: 0.0001,\n                      slop: 1,\n                    }\n                  ),\n                  constraint = Constraint.create({\n                    pointA: { x: xx + i * (size * separation), y: yy },\n                    bodyB: circle,\n                  });\n\n                Composite.addBody(newtonsCradle, circle);\n                Composite.addConstraint(newtonsCradle, constraint);\n              }\n\n              return newtonsCradle;\n            };\n\n            /**\n             * Creates a composite with simple car setup of bodies and constraints.\n             * @method car\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} width\n             * @param {number} height\n             * @param {number} wheelSize\n             * @return {composite} A new composite car body\n             */\n            Composites.car = function(xx, yy, width, height, wheelSize) {\n              var group = Body.nextGroup(true),\n                wheelBase = 20,\n                wheelAOffset = -width * 0.5 + wheelBase,\n                wheelBOffset = width * 0.5 - wheelBase,\n                wheelYOffset = 0;\n\n              var car = Composite.create({ label: 'Car' }),\n                body = Bodies.rectangle(xx, yy, width, height, {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  chamfer: {\n                    radius: height * 0.5,\n                  },\n                  density: 0.0002,\n                });\n\n              var wheelA = Bodies.circle(\n                xx + wheelAOffset,\n                yy + wheelYOffset,\n                wheelSize,\n                {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  friction: 0.8,\n                }\n              );\n\n              var wheelB = Bodies.circle(\n                xx + wheelBOffset,\n                yy + wheelYOffset,\n                wheelSize,\n                {\n                  collisionFilter: {\n                    group: group,\n                  },\n                  friction: 0.8,\n                }\n              );\n\n              var axelA = Constraint.create({\n                bodyB: body,\n                pointB: { x: wheelAOffset, y: wheelYOffset },\n                bodyA: wheelA,\n                stiffness: 1,\n                length: 0,\n              });\n\n              var axelB = Constraint.create({\n                bodyB: body,\n                pointB: { x: wheelBOffset, y: wheelYOffset },\n                bodyA: wheelB,\n                stiffness: 1,\n                length: 0,\n              });\n\n              Composite.addBody(car, body);\n              Composite.addBody(car, wheelA);\n              Composite.addBody(car, wheelB);\n              Composite.addConstraint(car, axelA);\n              Composite.addConstraint(car, axelB);\n\n              return car;\n            };\n\n            /**\n             * Creates a simple soft body like object.\n             * @method softBody\n             * @param {number} xx\n             * @param {number} yy\n             * @param {number} columns\n             * @param {number} rows\n             * @param {number} columnGap\n             * @param {number} rowGap\n             * @param {boolean} crossBrace\n             * @param {number} particleRadius\n             * @param {} particleOptions\n             * @param {} constraintOptions\n             * @return {composite} A new composite softBody\n             */\n            Composites.softBody = function(\n              xx,\n              yy,\n              columns,\n              rows,\n              columnGap,\n              rowGap,\n              crossBrace,\n              particleRadius,\n              particleOptions,\n              constraintOptions\n            ) {\n              particleOptions = Common.extend(\n                { inertia: Infinity },\n                particleOptions\n              );\n              constraintOptions = Common.extend(\n                { stiffness: 0.2, render: { type: 'line', anchors: false } },\n                constraintOptions\n              );\n\n              var softBody = Composites.stack(\n                xx,\n                yy,\n                columns,\n                rows,\n                columnGap,\n                rowGap,\n                function(x, y) {\n                  return Bodies.circle(x, y, particleRadius, particleOptions);\n                }\n              );\n\n              Composites.mesh(\n                softBody,\n                columns,\n                rows,\n                crossBrace,\n                constraintOptions\n              );\n\n              softBody.label = 'Soft Body';\n\n              return softBody;\n            };\n          })();\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../constraint/Constraint': 12,\n          '../core/Common': 14,\n          './Bodies': 23,\n        },\n      ],\n      25: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n           *\n           * @class Axes\n           */\n\n          var Axes = {};\n\n          module.exports = Axes;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new set of axes from the given vertices.\n             * @method fromVertices\n             * @param {vertices} vertices\n             * @return {axes} A new axes from the given vertices\n             */\n            Axes.fromVertices = function(vertices) {\n              var axes = {};\n\n              // find the unique axes, using edge normal gradients\n              for (var i = 0; i < vertices.length; i++) {\n                var j = (i + 1) % vertices.length,\n                  normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x,\n                  }),\n                  gradient = normal.y === 0 ? Infinity : normal.x / normal.y;\n\n                // limit precision\n                gradient = gradient.toFixed(3).toString();\n                axes[gradient] = normal;\n              }\n\n              return Common.values(axes);\n            };\n\n            /**\n             * Rotates a set of axes by the given angle.\n             * @method rotate\n             * @param {axes} axes\n             * @param {number} angle\n             */\n            Axes.rotate = function(axes, angle) {\n              if (angle === 0) return;\n\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n\n              for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i],\n                  xx;\n                xx = axis.x * cos - axis.y * sin;\n                axis.y = axis.x * sin + axis.y * cos;\n                axis.x = xx;\n              }\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Vector': 28 },\n      ],\n      26: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n           *\n           * @class Bounds\n           */\n\n          var Bounds = {};\n\n          module.exports = Bounds;\n\n          (function() {\n            /**\n             * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n             * @method create\n             * @param {vertices} vertices\n             * @return {bounds} A new bounds object\n             */\n            Bounds.create = function(vertices) {\n              var bounds = {\n                min: { x: 0, y: 0 },\n                max: { x: 0, y: 0 },\n              };\n\n              if (vertices) Bounds.update(bounds, vertices);\n\n              return bounds;\n            };\n\n            /**\n             * Updates bounds using the given vertices and extends the bounds given a velocity.\n             * @method update\n             * @param {bounds} bounds\n             * @param {vertices} vertices\n             * @param {vector} velocity\n             */\n            Bounds.update = function(bounds, vertices, velocity) {\n              bounds.min.x = Infinity;\n              bounds.max.x = -Infinity;\n              bounds.min.y = Infinity;\n              bounds.max.y = -Infinity;\n\n              for (var i = 0; i < vertices.length; i++) {\n                var vertex = vertices[i];\n                if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n                if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n                if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n                if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n              }\n\n              if (velocity) {\n                if (velocity.x > 0) {\n                  bounds.max.x += velocity.x;\n                } else {\n                  bounds.min.x += velocity.x;\n                }\n\n                if (velocity.y > 0) {\n                  bounds.max.y += velocity.y;\n                } else {\n                  bounds.min.y += velocity.y;\n                }\n              }\n            };\n\n            /**\n             * Returns true if the bounds contains the given point.\n             * @method contains\n             * @param {bounds} bounds\n             * @param {vector} point\n             * @return {boolean} True if the bounds contain the point, otherwise false\n             */\n            Bounds.contains = function(bounds, point) {\n              return (\n                point.x >= bounds.min.x &&\n                point.x <= bounds.max.x &&\n                point.y >= bounds.min.y &&\n                point.y <= bounds.max.y\n              );\n            };\n\n            /**\n             * Returns true if the two bounds intersect.\n             * @method overlaps\n             * @param {bounds} boundsA\n             * @param {bounds} boundsB\n             * @return {boolean} True if the bounds overlap, otherwise false\n             */\n            Bounds.overlaps = function(boundsA, boundsB) {\n              return (\n                boundsA.min.x <= boundsB.max.x &&\n                boundsA.max.x >= boundsB.min.x &&\n                boundsA.max.y >= boundsB.min.y &&\n                boundsA.min.y <= boundsB.max.y\n              );\n            };\n\n            /**\n             * Translates the bounds by the given vector.\n             * @method translate\n             * @param {bounds} bounds\n             * @param {vector} vector\n             */\n            Bounds.translate = function(bounds, vector) {\n              bounds.min.x += vector.x;\n              bounds.max.x += vector.x;\n              bounds.min.y += vector.y;\n              bounds.max.y += vector.y;\n            };\n\n            /**\n             * Shifts the bounds to the given position.\n             * @method shift\n             * @param {bounds} bounds\n             * @param {vector} position\n             */\n            Bounds.shift = function(bounds, position) {\n              var deltaX = bounds.max.x - bounds.min.x,\n                deltaY = bounds.max.y - bounds.min.y;\n\n              bounds.min.x = position.x;\n              bounds.max.x = position.x + deltaX;\n              bounds.min.y = position.y;\n              bounds.max.y = position.y + deltaY;\n            };\n          })();\n        },\n        {},\n      ],\n      27: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n           *\n           * To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Svg\n           */\n\n          var Svg = {};\n\n          module.exports = Svg;\n\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Converts an SVG path into an array of vector points.\n             * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n             * See `Bodies.fromVertices` which provides support for this.\n             * Note that this function is not guaranteed to support complex paths (such as those with holes).\n             * You must load the `pathseg.js` polyfill on newer browsers.\n             * @method pathToVertices\n             * @param {SVGPathElement} path\n             * @param {Number} [sampleLength=15]\n             * @return {Vector[]} points\n             */\n            Svg.pathToVertices = function(path, sampleLength) {\n              if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n                Common.warn(\n                  'Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.'\n                );\n              }\n\n              // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n              var i,\n                il,\n                total,\n                point,\n                segment,\n                segments,\n                segmentsQueue,\n                lastSegment,\n                lastPoint,\n                segmentIndex,\n                points = [],\n                lx,\n                ly,\n                length = 0,\n                x = 0,\n                y = 0;\n\n              sampleLength = sampleLength || 15;\n\n              var addPoint = function(px, py, pathSegType) {\n                // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n                var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n                // when the last point doesn't equal the current point add the current point\n                if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                  if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                  } else {\n                    lx = 0;\n                    ly = 0;\n                  }\n\n                  var point = {\n                    x: lx + px,\n                    y: ly + py,\n                  };\n\n                  // set last point\n                  if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                  }\n\n                  points.push(point);\n\n                  x = lx + px;\n                  y = ly + py;\n                }\n              };\n\n              var addSegmentPoint = function(segment) {\n                var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n                // skip path ends\n                if (segType === 'Z') return;\n\n                // map segment to x and y\n                switch (segType) {\n                  case 'M':\n                  case 'L':\n                  case 'T':\n                  case 'C':\n                  case 'S':\n                  case 'Q':\n                    x = segment.x;\n                    y = segment.y;\n                    break;\n                  case 'H':\n                    x = segment.x;\n                    break;\n                  case 'V':\n                    y = segment.y;\n                    break;\n                }\n\n                addPoint(x, y, segment.pathSegType);\n              };\n\n              // ensure path is absolute\n              Svg._svgPathToAbsolute(path);\n\n              // get total length\n              total = path.getTotalLength();\n\n              // queue segments\n              segments = [];\n              for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n                segments.push(path.pathSegList.getItem(i));\n\n              segmentsQueue = segments.concat();\n\n              // sample through path\n              while (length < total) {\n                // get segment at position\n                segmentIndex = path.getPathSegAtLength(length);\n                segment = segments[segmentIndex];\n\n                // new segment\n                if (segment != lastSegment) {\n                  while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                  lastSegment = segment;\n                }\n\n                // add points in between when curving\n                // TODO: adaptive sampling\n                switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n                  case 'C':\n                  case 'T':\n                  case 'S':\n                  case 'Q':\n                  case 'A':\n                    point = path.getPointAtLength(length);\n                    addPoint(point.x, point.y, 0);\n                    break;\n                }\n\n                // increment by sample value\n                length += sampleLength;\n              }\n\n              // add remaining segments not passed by sampling\n              for (i = 0, il = segmentsQueue.length; i < il; ++i)\n                addSegmentPoint(segmentsQueue[i]);\n\n              return points;\n            };\n\n            Svg._svgPathToAbsolute = function(path) {\n              // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n              // Copyright (c) Gavin Kistner\n              // http://phrogz.net/js/_ReuseLicense.txt\n              // Modifications: tidy formatting and naming\n              var x0,\n                y0,\n                x1,\n                y1,\n                x2,\n                y2,\n                segs = path.pathSegList,\n                x = 0,\n                y = 0,\n                len = segs.numberOfItems;\n\n              for (var i = 0; i < len; ++i) {\n                var seg = segs.getItem(i),\n                  segType = seg.pathSegTypeAsLetter;\n\n                if (/[MLHVCSQTA]/.test(segType)) {\n                  if ('x' in seg) x = seg.x;\n                  if ('y' in seg) y = seg.y;\n                } else {\n                  if ('x1' in seg) x1 = x + seg.x1;\n                  if ('x2' in seg) x2 = x + seg.x2;\n                  if ('y1' in seg) y1 = y + seg.y1;\n                  if ('y2' in seg) y2 = y + seg.y2;\n                  if ('x' in seg) x += seg.x;\n                  if ('y' in seg) y += seg.y;\n\n                  switch (segType) {\n                    case 'm':\n                      segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                      break;\n                    case 'l':\n                      segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                      break;\n                    case 'h':\n                      segs.replaceItem(\n                        path.createSVGPathSegLinetoHorizontalAbs(x),\n                        i\n                      );\n                      break;\n                    case 'v':\n                      segs.replaceItem(\n                        path.createSVGPathSegLinetoVerticalAbs(y),\n                        i\n                      );\n                      break;\n                    case 'c':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoCubicAbs(\n                          x,\n                          y,\n                          x1,\n                          y1,\n                          x2,\n                          y2\n                        ),\n                        i\n                      );\n                      break;\n                    case 's':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoCubicSmoothAbs(\n                          x,\n                          y,\n                          x2,\n                          y2\n                        ),\n                        i\n                      );\n                      break;\n                    case 'q':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1),\n                        i\n                      );\n                      break;\n                    case 't':\n                      segs.replaceItem(\n                        path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y),\n                        i\n                      );\n                      break;\n                    case 'a':\n                      segs.replaceItem(\n                        path.createSVGPathSegArcAbs(\n                          x,\n                          y,\n                          seg.r1,\n                          seg.r2,\n                          seg.angle,\n                          seg.largeArcFlag,\n                          seg.sweepFlag\n                        ),\n                        i\n                      );\n                      break;\n                    case 'z':\n                    case 'Z':\n                      x = x0;\n                      y = y0;\n                      break;\n                  }\n                }\n\n                if (segType == 'M' || segType == 'm') {\n                  x0 = x;\n                  y0 = y;\n                }\n              }\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Bounds': 26 },\n      ],\n      28: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Vector` module contains methods for creating and manipulating vectors.\n           * Vectors are the basis of all the geometry related operations in the engine.\n           * A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Vector\n           */\n\n          // TODO: consider params for reusing vector objects\n\n          var Vector = {};\n\n          module.exports = Vector;\n\n          (function() {\n            /**\n             * Creates a new vector.\n             * @method create\n             * @param {number} x\n             * @param {number} y\n             * @return {vector} A new vector\n             */\n            Vector.create = function(x, y) {\n              return { x: x || 0, y: y || 0 };\n            };\n\n            /**\n             * Returns a new vector with `x` and `y` copied from the given `vector`.\n             * @method clone\n             * @param {vector} vector\n             * @return {vector} A new cloned vector\n             */\n            Vector.clone = function(vector) {\n              return { x: vector.x, y: vector.y };\n            };\n\n            /**\n             * Returns the magnitude (length) of a vector.\n             * @method magnitude\n             * @param {vector} vector\n             * @return {number} The magnitude of the vector\n             */\n            Vector.magnitude = function(vector) {\n              return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n            };\n\n            /**\n             * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n             * @method magnitudeSquared\n             * @param {vector} vector\n             * @return {number} The squared magnitude of the vector\n             */\n            Vector.magnitudeSquared = function(vector) {\n              return vector.x * vector.x + vector.y * vector.y;\n            };\n\n            /**\n             * Rotates the vector about (0, 0) by specified angle.\n             * @method rotate\n             * @param {vector} vector\n             * @param {number} angle\n             * @param {vector} [output]\n             * @return {vector} The vector rotated about (0, 0)\n             */\n            Vector.rotate = function(vector, angle, output) {\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n              if (!output) output = {};\n              var x = vector.x * cos - vector.y * sin;\n              output.y = vector.x * sin + vector.y * cos;\n              output.x = x;\n              return output;\n            };\n\n            /**\n             * Rotates the vector about a specified point by specified angle.\n             * @method rotateAbout\n             * @param {vector} vector\n             * @param {number} angle\n             * @param {vector} point\n             * @param {vector} [output]\n             * @return {vector} A new vector rotated about the point\n             */\n            Vector.rotateAbout = function(vector, angle, point, output) {\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n              if (!output) output = {};\n              var x =\n                point.x +\n                ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n              output.y =\n                point.y +\n                ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n              output.x = x;\n              return output;\n            };\n\n            /**\n             * Normalises a vector (such that its magnitude is `1`).\n             * @method normalise\n             * @param {vector} vector\n             * @return {vector} A new vector normalised\n             */\n            Vector.normalise = function(vector) {\n              var magnitude = Vector.magnitude(vector);\n              if (magnitude === 0) return { x: 0, y: 0 };\n              return { x: vector.x / magnitude, y: vector.y / magnitude };\n            };\n\n            /**\n             * Returns the dot-product of two vectors.\n             * @method dot\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The dot product of the two vectors\n             */\n            Vector.dot = function(vectorA, vectorB) {\n              return vectorA.x * vectorB.x + vectorA.y * vectorB.y;\n            };\n\n            /**\n             * Returns the cross-product of two vectors.\n             * @method cross\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The cross product of the two vectors\n             */\n            Vector.cross = function(vectorA, vectorB) {\n              return vectorA.x * vectorB.y - vectorA.y * vectorB.x;\n            };\n\n            /**\n             * Returns the cross-product of three vectors.\n             * @method cross3\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} vectorC\n             * @return {number} The cross product of the three vectors\n             */\n            Vector.cross3 = function(vectorA, vectorB, vectorC) {\n              return (\n                (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) -\n                (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x)\n              );\n            };\n\n            /**\n             * Adds the two vectors.\n             * @method add\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} [output]\n             * @return {vector} A new vector of vectorA and vectorB added\n             */\n            Vector.add = function(vectorA, vectorB, output) {\n              if (!output) output = {};\n              output.x = vectorA.x + vectorB.x;\n              output.y = vectorA.y + vectorB.y;\n              return output;\n            };\n\n            /**\n             * Subtracts the two vectors.\n             * @method sub\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @param {vector} [output]\n             * @return {vector} A new vector of vectorA and vectorB subtracted\n             */\n            Vector.sub = function(vectorA, vectorB, output) {\n              if (!output) output = {};\n              output.x = vectorA.x - vectorB.x;\n              output.y = vectorA.y - vectorB.y;\n              return output;\n            };\n\n            /**\n             * Multiplies a vector and a scalar.\n             * @method mult\n             * @param {vector} vector\n             * @param {number} scalar\n             * @return {vector} A new vector multiplied by scalar\n             */\n            Vector.mult = function(vector, scalar) {\n              return { x: vector.x * scalar, y: vector.y * scalar };\n            };\n\n            /**\n             * Divides a vector and a scalar.\n             * @method div\n             * @param {vector} vector\n             * @param {number} scalar\n             * @return {vector} A new vector divided by scalar\n             */\n            Vector.div = function(vector, scalar) {\n              return { x: vector.x / scalar, y: vector.y / scalar };\n            };\n\n            /**\n             * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n             * @method perp\n             * @param {vector} vector\n             * @param {bool} [negate=false]\n             * @return {vector} The perpendicular vector\n             */\n            Vector.perp = function(vector, negate) {\n              negate = negate === true ? -1 : 1;\n              return { x: negate * -vector.y, y: negate * vector.x };\n            };\n\n            /**\n             * Negates both components of a vector such that it points in the opposite direction.\n             * @method neg\n             * @param {vector} vector\n             * @return {vector} The negated vector\n             */\n            Vector.neg = function(vector) {\n              return { x: -vector.x, y: -vector.y };\n            };\n\n            /**\n             * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n             * @method angle\n             * @param {vector} vectorA\n             * @param {vector} vectorB\n             * @return {number} The angle in radians\n             */\n            Vector.angle = function(vectorA, vectorB) {\n              return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n            };\n\n            /**\n             * Temporary vector pool (not thread-safe).\n             * @property _temp\n             * @type {vector[]}\n             * @private\n             */\n            Vector._temp = [\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n              Vector.create(),\n            ];\n          })();\n        },\n        {},\n      ],\n      29: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n           * A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n           * A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n           *\n           * See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n           *\n           * @class Vertices\n           */\n\n          var Vertices = {};\n\n          module.exports = Vertices;\n\n          var Vector = _dereq_('../geometry/Vector');\n          var Common = _dereq_('../core/Common');\n\n          (function() {\n            /**\n             * Creates a new set of `Matter.Body` compatible vertices.\n             * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n             *\n             *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n             *\n             * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n             * but with some additional references required for efficient collision detection routines.\n             *\n             * Vertices must be specified in clockwise order.\n             *\n             * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n             *\n             * @method create\n             * @param {vector[]} points\n             * @param {body} body\n             */\n            Vertices.create = function(points, body) {\n              var vertices = [];\n\n              for (var i = 0; i < points.length; i++) {\n                var point = points[i],\n                  vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false,\n                  };\n\n                vertices.push(vertex);\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n             * into a `Matter.Vertices` object for the given `Matter.Body`.\n             * For parsing SVG paths, see `Svg.pathToVertices`.\n             * @method fromPath\n             * @param {string} path\n             * @param {body} body\n             * @return {vertices} vertices\n             */\n            Vertices.fromPath = function(path, body) {\n              var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/gi,\n                points = [];\n\n              path.replace(pathPattern, function(match, x, y) {\n                points.push({ x: parseFloat(x), y: parseFloat(y) });\n              });\n\n              return Vertices.create(points, body);\n            };\n\n            /**\n             * Returns the centre (centroid) of the set of vertices.\n             * @method centre\n             * @param {vertices} vertices\n             * @return {vector} The centre point\n             */\n            Vertices.centre = function(vertices) {\n              var area = Vertices.area(vertices, true),\n                centre = { x: 0, y: 0 },\n                cross,\n                temp,\n                j;\n\n              for (var i = 0; i < vertices.length; i++) {\n                j = (i + 1) % vertices.length;\n                cross = Vector.cross(vertices[i], vertices[j]);\n                temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n                centre = Vector.add(centre, temp);\n              }\n\n              return Vector.div(centre, 6 * area);\n            };\n\n            /**\n             * Returns the average (mean) of the set of vertices.\n             * @method mean\n             * @param {vertices} vertices\n             * @return {vector} The average point\n             */\n            Vertices.mean = function(vertices) {\n              var average = { x: 0, y: 0 };\n\n              for (var i = 0; i < vertices.length; i++) {\n                average.x += vertices[i].x;\n                average.y += vertices[i].y;\n              }\n\n              return Vector.div(average, vertices.length);\n            };\n\n            /**\n             * Returns the area of the set of vertices.\n             * @method area\n             * @param {vertices} vertices\n             * @param {bool} signed\n             * @return {number} The area\n             */\n            Vertices.area = function(vertices, signed) {\n              var area = 0,\n                j = vertices.length - 1;\n\n              for (var i = 0; i < vertices.length; i++) {\n                area +=\n                  (vertices[j].x - vertices[i].x) *\n                  (vertices[j].y + vertices[i].y);\n                j = i;\n              }\n\n              if (signed) return area / 2;\n\n              return Math.abs(area) / 2;\n            };\n\n            /**\n             * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n             * @method inertia\n             * @param {vertices} vertices\n             * @param {number} mass\n             * @return {number} The polygon's moment of inertia\n             */\n            Vertices.inertia = function(vertices, mass) {\n              var numerator = 0,\n                denominator = 0,\n                v = vertices,\n                cross,\n                j;\n\n              // find the polygon's moment of inertia, using second moment of area\n              // from equations at http://www.physicsforums.com/showthread.php?t=25293\n              for (var n = 0; n < v.length; n++) {\n                j = (n + 1) % v.length;\n                cross = Math.abs(Vector.cross(v[j], v[n]));\n                numerator +=\n                  cross *\n                  (Vector.dot(v[j], v[j]) +\n                    Vector.dot(v[j], v[n]) +\n                    Vector.dot(v[n], v[n]));\n                denominator += cross;\n              }\n\n              return mass / 6 * (numerator / denominator);\n            };\n\n            /**\n             * Translates the set of vertices in-place.\n             * @method translate\n             * @param {vertices} vertices\n             * @param {vector} vector\n             * @param {number} scalar\n             */\n            Vertices.translate = function(vertices, vector, scalar) {\n              var i;\n              if (scalar) {\n                for (i = 0; i < vertices.length; i++) {\n                  vertices[i].x += vector.x * scalar;\n                  vertices[i].y += vector.y * scalar;\n                }\n              } else {\n                for (i = 0; i < vertices.length; i++) {\n                  vertices[i].x += vector.x;\n                  vertices[i].y += vector.y;\n                }\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Rotates the set of vertices in-place.\n             * @method rotate\n             * @param {vertices} vertices\n             * @param {number} angle\n             * @param {vector} point\n             */\n            Vertices.rotate = function(vertices, angle, point) {\n              if (angle === 0) return;\n\n              var cos = Math.cos(angle),\n                sin = Math.sin(angle);\n\n              for (var i = 0; i < vertices.length; i++) {\n                var vertice = vertices[i],\n                  dx = vertice.x - point.x,\n                  dy = vertice.y - point.y;\n\n                vertice.x = point.x + (dx * cos - dy * sin);\n                vertice.y = point.y + (dx * sin + dy * cos);\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Returns `true` if the `point` is inside the set of `vertices`.\n             * @method contains\n             * @param {vertices} vertices\n             * @param {vector} point\n             * @return {boolean} True if the vertices contains point, otherwise false\n             */\n            Vertices.contains = function(vertices, point) {\n              for (var i = 0; i < vertices.length; i++) {\n                var vertice = vertices[i],\n                  nextVertice = vertices[(i + 1) % vertices.length];\n                if (\n                  (point.x - vertice.x) * (nextVertice.y - vertice.y) +\n                    (point.y - vertice.y) * (vertice.x - nextVertice.x) >\n                  0\n                ) {\n                  return false;\n                }\n              }\n\n              return true;\n            };\n\n            /**\n             * Scales the vertices from a point (default is centre) in-place.\n             * @method scale\n             * @param {vertices} vertices\n             * @param {number} scaleX\n             * @param {number} scaleY\n             * @param {vector} point\n             */\n            Vertices.scale = function(vertices, scaleX, scaleY, point) {\n              if (scaleX === 1 && scaleY === 1) return vertices;\n\n              point = point || Vertices.centre(vertices);\n\n              var vertex, delta;\n\n              for (var i = 0; i < vertices.length; i++) {\n                vertex = vertices[i];\n                delta = Vector.sub(vertex, point);\n                vertices[i].x = point.x + delta.x * scaleX;\n                vertices[i].y = point.y + delta.y * scaleY;\n              }\n\n              return vertices;\n            };\n\n            /**\n             * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n             * The radius parameter is a single number or an array to specify the radius for each vertex.\n             * @method chamfer\n             * @param {vertices} vertices\n             * @param {number[]} radius\n             * @param {number} quality\n             * @param {number} qualityMin\n             * @param {number} qualityMax\n             */\n            Vertices.chamfer = function(\n              vertices,\n              radius,\n              quality,\n              qualityMin,\n              qualityMax\n            ) {\n              if (typeof radius === 'number') {\n                radius = [radius];\n              } else {\n                radius = radius || [8];\n              }\n\n              // quality defaults to -1, which is auto\n              quality = typeof quality !== 'undefined' ? quality : -1;\n              qualityMin = qualityMin || 2;\n              qualityMax = qualityMax || 14;\n\n              var newVertices = [];\n\n              for (var i = 0; i < vertices.length; i++) {\n                var prevVertex =\n                    vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                  vertex = vertices[i],\n                  nextVertex = vertices[(i + 1) % vertices.length],\n                  currentRadius =\n                    radius[i < radius.length ? i : radius.length - 1];\n\n                if (currentRadius === 0) {\n                  newVertices.push(vertex);\n                  continue;\n                }\n\n                var prevNormal = Vector.normalise({\n                  x: vertex.y - prevVertex.y,\n                  y: prevVertex.x - vertex.x,\n                });\n\n                var nextNormal = Vector.normalise({\n                  x: nextVertex.y - vertex.y,\n                  y: vertex.x - nextVertex.x,\n                });\n\n                var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                  radiusVector = Vector.mult(\n                    Common.clone(prevNormal),\n                    currentRadius\n                  ),\n                  midNormal = Vector.normalise(\n                    Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)\n                  ),\n                  scaledVertex = Vector.sub(\n                    vertex,\n                    Vector.mult(midNormal, diagonalRadius)\n                  );\n\n                var precision = quality;\n\n                if (quality === -1) {\n                  // automatically decide precision\n                  precision = Math.pow(currentRadius, 0.32) * 1.75;\n                }\n\n                precision = Common.clamp(precision, qualityMin, qualityMax);\n\n                // use an even value for precision, more likely to reduce axes by using symmetry\n                if (precision % 2 === 1) precision += 1;\n\n                var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                  theta = alpha / precision;\n\n                for (var j = 0; j < precision; j++) {\n                  newVertices.push(\n                    Vector.add(\n                      Vector.rotate(radiusVector, theta * j),\n                      scaledVertex\n                    )\n                  );\n                }\n              }\n\n              return newVertices;\n            };\n\n            /**\n             * Sorts the input vertices into clockwise order in place.\n             * @method clockwiseSort\n             * @param {vertices} vertices\n             * @return {vertices} vertices\n             */\n            Vertices.clockwiseSort = function(vertices) {\n              var centre = Vertices.mean(vertices);\n\n              vertices.sort(function(vertexA, vertexB) {\n                return (\n                  Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB)\n                );\n              });\n\n              return vertices;\n            };\n\n            /**\n             * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n             * @method isConvex\n             * @param {vertices} vertices\n             * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n             */\n            Vertices.isConvex = function(vertices) {\n              // http://paulbourke.net/geometry/polygonmesh/\n              // Copyright (c) Paul Bourke (use permitted)\n\n              var flag = 0,\n                n = vertices.length,\n                i,\n                j,\n                k,\n                z;\n\n              if (n < 3) return null;\n\n              for (i = 0; i < n; i++) {\n                j = (i + 1) % n;\n                k = (i + 2) % n;\n                z =\n                  (vertices[j].x - vertices[i].x) *\n                  (vertices[k].y - vertices[j].y);\n                z -=\n                  (vertices[j].y - vertices[i].y) *\n                  (vertices[k].x - vertices[j].x);\n\n                if (z < 0) {\n                  flag |= 1;\n                } else if (z > 0) {\n                  flag |= 2;\n                }\n\n                if (flag === 3) {\n                  return false;\n                }\n              }\n\n              if (flag !== 0) {\n                return true;\n              } else {\n                return null;\n              }\n            };\n\n            /**\n             * Returns the convex hull of the input vertices as a new array of points.\n             * @method hull\n             * @param {vertices} vertices\n             * @return [vertex] vertices\n             */\n            Vertices.hull = function(vertices) {\n              // http://geomalgorithms.com/a10-_hull-1.html\n\n              var upper = [],\n                lower = [],\n                vertex,\n                i;\n\n              // sort vertices on x-axis (y-axis for ties)\n              vertices = vertices.slice(0);\n              vertices.sort(function(vertexA, vertexB) {\n                var dx = vertexA.x - vertexB.x;\n                return dx !== 0 ? dx : vertexA.y - vertexB.y;\n              });\n\n              // build lower hull\n              for (i = 0; i < vertices.length; i += 1) {\n                vertex = vertices[i];\n\n                while (\n                  lower.length >= 2 &&\n                  Vector.cross3(\n                    lower[lower.length - 2],\n                    lower[lower.length - 1],\n                    vertex\n                  ) <= 0\n                ) {\n                  lower.pop();\n                }\n\n                lower.push(vertex);\n              }\n\n              // build upper hull\n              for (i = vertices.length - 1; i >= 0; i -= 1) {\n                vertex = vertices[i];\n\n                while (\n                  upper.length >= 2 &&\n                  Vector.cross3(\n                    upper[upper.length - 2],\n                    upper[upper.length - 1],\n                    vertex\n                  ) <= 0\n                ) {\n                  upper.pop();\n                }\n\n                upper.push(vertex);\n              }\n\n              // concatenation of the lower and upper hulls gives the convex hull\n              // omit last points because they are repeated at the beginning of the other list\n              upper.pop();\n              lower.pop();\n\n              return upper.concat(lower);\n            };\n          })();\n        },\n        { '../core/Common': 14, '../geometry/Vector': 28 },\n      ],\n      30: [\n        function(_dereq_, module, exports) {\n          var Matter = (module.exports = _dereq_('../core/Matter'));\n\n          Matter.Body = _dereq_('../body/Body');\n          Matter.Composite = _dereq_('../body/Composite');\n          Matter.World = _dereq_('../body/World');\n\n          Matter.Contact = _dereq_('../collision/Contact');\n          Matter.Detector = _dereq_('../collision/Detector');\n          Matter.Grid = _dereq_('../collision/Grid');\n          Matter.Pairs = _dereq_('../collision/Pairs');\n          Matter.Pair = _dereq_('../collision/Pair');\n          Matter.Query = _dereq_('../collision/Query');\n          Matter.Resolver = _dereq_('../collision/Resolver');\n          Matter.SAT = _dereq_('../collision/SAT');\n\n          Matter.Constraint = _dereq_('../constraint/Constraint');\n          Matter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\n          Matter.Common = _dereq_('../core/Common');\n          Matter.Engine = _dereq_('../core/Engine');\n          Matter.Events = _dereq_('../core/Events');\n          Matter.Mouse = _dereq_('../core/Mouse');\n          Matter.Runner = _dereq_('../core/Runner');\n          Matter.Sleeping = _dereq_('../core/Sleeping');\n          Matter.Plugin = _dereq_('../core/Plugin');\n\n          Matter.Bodies = _dereq_('../factory/Bodies');\n          Matter.Composites = _dereq_('../factory/Composites');\n\n          Matter.Axes = _dereq_('../geometry/Axes');\n          Matter.Bounds = _dereq_('../geometry/Bounds');\n          Matter.Svg = _dereq_('../geometry/Svg');\n          Matter.Vector = _dereq_('../geometry/Vector');\n          Matter.Vertices = _dereq_('../geometry/Vertices');\n\n          Matter.Render = _dereq_('../render/Render');\n          Matter.RenderPixi = _dereq_('../render/RenderPixi');\n\n          // aliases\n\n          Matter.World.add = Matter.Composite.add;\n          Matter.World.remove = Matter.Composite.remove;\n          Matter.World.addComposite = Matter.Composite.addComposite;\n          Matter.World.addBody = Matter.Composite.addBody;\n          Matter.World.addConstraint = Matter.Composite.addConstraint;\n          Matter.World.clear = Matter.Composite.clear;\n          Matter.Engine.run = Matter.Runner.run;\n        },\n        {\n          '../body/Body': 1,\n          '../body/Composite': 2,\n          '../body/World': 3,\n          '../collision/Contact': 4,\n          '../collision/Detector': 5,\n          '../collision/Grid': 6,\n          '../collision/Pair': 7,\n          '../collision/Pairs': 8,\n          '../collision/Query': 9,\n          '../collision/Resolver': 10,\n          '../collision/SAT': 11,\n          '../constraint/Constraint': 12,\n          '../constraint/MouseConstraint': 13,\n          '../core/Common': 14,\n          '../core/Engine': 15,\n          '../core/Events': 16,\n          '../core/Matter': 17,\n          '../core/Metrics': 18,\n          '../core/Mouse': 19,\n          '../core/Plugin': 20,\n          '../core/Runner': 21,\n          '../core/Sleeping': 22,\n          '../factory/Bodies': 23,\n          '../factory/Composites': 24,\n          '../geometry/Axes': 25,\n          '../geometry/Bounds': 26,\n          '../geometry/Svg': 27,\n          '../geometry/Vector': 28,\n          '../geometry/Vertices': 29,\n          '../render/Render': 31,\n          '../render/RenderPixi': 32,\n        },\n      ],\n      31: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n           * It is intended for development and debugging purposes, but may also be suitable for simple games.\n           * It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n           *\n           * @class Render\n           */\n\n          var Render = {};\n\n          module.exports = Render;\n\n          var Common = _dereq_('../core/Common');\n          var Composite = _dereq_('../body/Composite');\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Events = _dereq_('../core/Events');\n          var Grid = _dereq_('../collision/Grid');\n          var Vector = _dereq_('../geometry/Vector');\n          var Mouse = _dereq_('../core/Mouse');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                function(callback) {\n                  window.setTimeout(function() {\n                    callback(Common.now());\n                  }, 1000 / 60);\n                };\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            /**\n             * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n             * All properties have default values, and many are pre-calculated automatically based on other properties.\n             * See the properties section below for detailed information on what you can pass via the `options` object.\n             * @method create\n             * @param {object} [options]\n             * @return {render} A new renderer\n             */\n            Render.create = function(options) {\n              var defaults = {\n                controller: Render,\n                engine: null,\n                element: null,\n                canvas: null,\n                mouse: null,\n                frameRequestId: null,\n                options: {\n                  width: 800,\n                  height: 600,\n                  pixelRatio: 1,\n                  background: '#18181d',\n                  wireframeBackground: '#0f0f13',\n                  hasBounds: !!options.bounds,\n                  enabled: true,\n                  wireframes: true,\n                  showSleeping: true,\n                  showDebug: false,\n                  showBroadphase: false,\n                  showBounds: false,\n                  showVelocity: false,\n                  showCollisions: false,\n                  showSeparations: false,\n                  showAxes: false,\n                  showPositions: false,\n                  showAngleIndicator: false,\n                  showIds: false,\n                  showShadows: false,\n                  showVertexNumbers: false,\n                  showConvexHulls: false,\n                  showInternalEdges: false,\n                  showMousePosition: false,\n                },\n              };\n\n              var render = Common.extend(defaults, options);\n\n              if (render.canvas) {\n                render.canvas.width =\n                  render.options.width || render.canvas.width;\n                render.canvas.height =\n                  render.options.height || render.canvas.height;\n              }\n\n              render.mouse = options.mouse;\n              render.engine = options.engine;\n              render.canvas =\n                render.canvas ||\n                _createCanvas(render.options.width, render.options.height);\n              render.context = render.canvas.getContext('2d');\n              render.textures = {};\n\n              render.bounds = render.bounds || {\n                min: {\n                  x: 0,\n                  y: 0,\n                },\n                max: {\n                  x: render.canvas.width,\n                  y: render.canvas.height,\n                },\n              };\n\n              if (render.options.pixelRatio !== 1) {\n                Render.setPixelRatio(render, render.options.pixelRatio);\n              }\n\n              if (Common.isElement(render.element)) {\n                render.element.appendChild(render.canvas);\n              } else if (!render.canvas.parentNode) {\n                Common.log(\n                  'Render.create: options.element was undefined, render.canvas was created but not appended',\n                  'warn'\n                );\n              }\n\n              return render;\n            };\n\n            /**\n             * Continuously updates the render canvas on the `requestAnimationFrame` event.\n             * @method run\n             * @param {render} render\n             */\n            Render.run = function(render) {\n              (function loop(time) {\n                render.frameRequestId = _requestAnimationFrame(loop);\n                Render.world(render);\n              })();\n            };\n\n            /**\n             * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n             * @method stop\n             * @param {render} render\n             */\n            Render.stop = function(render) {\n              _cancelAnimationFrame(render.frameRequestId);\n            };\n\n            /**\n             * Sets the pixel ratio of the renderer and updates the canvas.\n             * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n             * @method setPixelRatio\n             * @param {render} render\n             * @param {number} pixelRatio\n             */\n            Render.setPixelRatio = function(render, pixelRatio) {\n              var options = render.options,\n                canvas = render.canvas;\n\n              if (pixelRatio === 'auto') {\n                pixelRatio = _getPixelRatio(canvas);\n              }\n\n              options.pixelRatio = pixelRatio;\n              canvas.setAttribute('data-pixel-ratio', pixelRatio);\n              canvas.width = options.width * pixelRatio;\n              canvas.height = options.height * pixelRatio;\n              canvas.style.width = options.width + 'px';\n              canvas.style.height = options.height + 'px';\n              render.context.scale(pixelRatio, pixelRatio);\n            };\n\n            /**\n             * Positions and sizes the viewport around the given object bounds.\n             * Objects must have at least one of the following properties:\n             * - `object.bounds`\n             * - `object.position`\n             * - `object.min` and `object.max`\n             * - `object.x` and `object.y`\n             * @method lookAt\n             * @param {render} render\n             * @param {object[]} objects\n             * @param {vector} [padding]\n             * @param {bool} [center=true]\n             */\n            Render.lookAt = function(render, objects, padding, center) {\n              center = typeof center !== 'undefined' ? center : true;\n              objects = Common.isArray(objects) ? objects : [objects];\n              padding = padding || {\n                x: 0,\n                y: 0,\n              };\n\n              // find bounds of all objects\n              var bounds = {\n                min: { x: Infinity, y: Infinity },\n                max: { x: -Infinity, y: -Infinity },\n              };\n\n              for (var i = 0; i < objects.length; i += 1) {\n                var object = objects[i],\n                  min = object.bounds\n                    ? object.bounds.min\n                    : object.min || object.position || object,\n                  max = object.bounds\n                    ? object.bounds.max\n                    : object.max || object.position || object;\n\n                if (min && max) {\n                  if (min.x < bounds.min.x) bounds.min.x = min.x;\n\n                  if (max.x > bounds.max.x) bounds.max.x = max.x;\n\n                  if (min.y < bounds.min.y) bounds.min.y = min.y;\n\n                  if (max.y > bounds.max.y) bounds.max.y = max.y;\n                }\n              }\n\n              // find ratios\n              var width = bounds.max.x - bounds.min.x + 2 * padding.x,\n                height = bounds.max.y - bounds.min.y + 2 * padding.y,\n                viewHeight = render.canvas.height,\n                viewWidth = render.canvas.width,\n                outerRatio = viewWidth / viewHeight,\n                innerRatio = width / height,\n                scaleX = 1,\n                scaleY = 1;\n\n              // find scale factor\n              if (innerRatio > outerRatio) {\n                scaleY = innerRatio / outerRatio;\n              } else {\n                scaleX = outerRatio / innerRatio;\n              }\n\n              // enable bounds\n              render.options.hasBounds = true;\n\n              // position and size\n              render.bounds.min.x = bounds.min.x;\n              render.bounds.max.x = bounds.min.x + width * scaleX;\n              render.bounds.min.y = bounds.min.y;\n              render.bounds.max.y = bounds.min.y + height * scaleY;\n\n              // center\n              if (center) {\n                render.bounds.min.x += width * 0.5 - width * scaleX * 0.5;\n                render.bounds.max.x += width * 0.5 - width * scaleX * 0.5;\n                render.bounds.min.y += height * 0.5 - height * scaleY * 0.5;\n                render.bounds.max.y += height * 0.5 - height * scaleY * 0.5;\n              }\n\n              // padding\n              render.bounds.min.x -= padding.x;\n              render.bounds.max.x -= padding.x;\n              render.bounds.min.y -= padding.y;\n              render.bounds.max.y -= padding.y;\n\n              // update mouse\n              if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                  x:\n                    (render.bounds.max.x - render.bounds.min.x) /\n                    render.canvas.width,\n                  y:\n                    (render.bounds.max.y - render.bounds.min.y) /\n                    render.canvas.height,\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n              }\n            };\n\n            /**\n             * Applies viewport transforms based on `render.bounds` to a render context.\n             * @method startViewTransform\n             * @param {render} render\n             */\n            Render.startViewTransform = function(render) {\n              var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n              render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n              render.context.translate(\n                -render.bounds.min.x,\n                -render.bounds.min.y\n              );\n            };\n\n            /**\n             * Resets all transforms on the render context.\n             * @method endViewTransform\n             * @param {render} render\n             */\n            Render.endViewTransform = function(render) {\n              render.context.setTransform(\n                render.options.pixelRatio,\n                0,\n                0,\n                render.options.pixelRatio,\n                0,\n                0\n              );\n            };\n\n            /**\n             * Renders the given `engine`'s `Matter.World` object.\n             * This is the entry point for all rendering and should be called every time the scene changes.\n             * @method world\n             * @param {render} render\n             */\n            Render.world = function(render) {\n              var engine = render.engine,\n                world = engine.world,\n                canvas = render.canvas,\n                context = render.context,\n                options = render.options,\n                allBodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world),\n                background = options.wireframes\n                  ? options.wireframeBackground\n                  : options.background,\n                bodies = [],\n                constraints = [],\n                i;\n\n              var event = {\n                timestamp: engine.timing.timestamp,\n              };\n\n              Events.trigger(render, 'beforeRender', event);\n\n              // apply background if it has changed\n              if (render.currentBackground !== background)\n                _applyBackground(render, background);\n\n              // clear the canvas with a transparent fill, to allow the canvas background to show\n              context.globalCompositeOperation = 'source-in';\n              context.fillStyle = 'transparent';\n              context.fillRect(0, 0, canvas.width, canvas.height);\n              context.globalCompositeOperation = 'source-over';\n\n              // handle bounds\n              if (options.hasBounds) {\n                // filter out bodies that are not in view\n                for (i = 0; i < allBodies.length; i++) {\n                  var body = allBodies[i];\n                  if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n                }\n\n                // filter out constraints that are not in view\n                for (i = 0; i < allConstraints.length; i++) {\n                  var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                  if (bodyA)\n                    pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                  if (bodyB)\n                    pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                  if (!pointAWorld || !pointBWorld) continue;\n\n                  if (\n                    Bounds.contains(render.bounds, pointAWorld) ||\n                    Bounds.contains(render.bounds, pointBWorld)\n                  )\n                    constraints.push(constraint);\n                }\n\n                // transform the view\n                Render.startViewTransform(render);\n\n                // update mouse\n                if (render.mouse) {\n                  Mouse.setScale(render.mouse, {\n                    x:\n                      (render.bounds.max.x - render.bounds.min.x) /\n                      render.canvas.width,\n                    y:\n                      (render.bounds.max.y - render.bounds.min.y) /\n                      render.canvas.height,\n                  });\n\n                  Mouse.setOffset(render.mouse, render.bounds.min);\n                }\n              } else {\n                constraints = allConstraints;\n                bodies = allBodies;\n              }\n\n              if (\n                !options.wireframes ||\n                (engine.enableSleeping && options.showSleeping)\n              ) {\n                // fully featured rendering of bodies\n                Render.bodies(render, bodies, context);\n              } else {\n                if (options.showConvexHulls)\n                  Render.bodyConvexHulls(render, bodies, context);\n\n                // optimised method for wireframes only\n                Render.bodyWireframes(render, bodies, context);\n              }\n\n              if (options.showBounds)\n                Render.bodyBounds(render, bodies, context);\n\n              if (options.showAxes || options.showAngleIndicator)\n                Render.bodyAxes(render, bodies, context);\n\n              if (options.showPositions)\n                Render.bodyPositions(render, bodies, context);\n\n              if (options.showVelocity)\n                Render.bodyVelocity(render, bodies, context);\n\n              if (options.showIds) Render.bodyIds(render, bodies, context);\n\n              if (options.showSeparations)\n                Render.separations(render, engine.pairs.list, context);\n\n              if (options.showCollisions)\n                Render.collisions(render, engine.pairs.list, context);\n\n              if (options.showVertexNumbers)\n                Render.vertexNumbers(render, bodies, context);\n\n              if (options.showMousePosition)\n                Render.mousePosition(render, render.mouse, context);\n\n              Render.constraints(constraints, context);\n\n              if (\n                options.showBroadphase &&\n                engine.broadphase.controller === Grid\n              )\n                Render.grid(render, engine.broadphase, context);\n\n              if (options.showDebug) Render.debug(render, context);\n\n              if (options.hasBounds) {\n                // revert view transforms\n                Render.endViewTransform(render);\n              }\n\n              Events.trigger(render, 'afterRender', event);\n            };\n\n            /**\n             * Description\n             * @private\n             * @method debug\n             * @param {render} render\n             * @param {RenderingContext} context\n             */\n            Render.debug = function(render, context) {\n              var c = context,\n                engine = render.engine,\n                world = engine.world,\n                metrics = engine.metrics,\n                options = render.options,\n                bodies = Composite.allBodies(world),\n                space = '    ';\n\n              if (\n                engine.timing.timestamp - (render.debugTimestamp || 0) >=\n                500\n              ) {\n                var text = '';\n\n                if (metrics.timing) {\n                  text += 'fps: ' + Math.round(metrics.timing.fps) + space;\n                }\n\n                render.debugString = text;\n                render.debugTimestamp = engine.timing.timestamp;\n              }\n\n              if (render.debugString) {\n                c.font = '12px Arial';\n\n                if (options.wireframes) {\n                  c.fillStyle = 'rgba(255,255,255,0.5)';\n                } else {\n                  c.fillStyle = 'rgba(0,0,0,0.5)';\n                }\n\n                var split = render.debugString.split('\\n');\n\n                for (var i = 0; i < split.length; i++) {\n                  c.fillText(split[i], 50, 50 + i * 18);\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method constraints\n             * @param {constraint[]} constraints\n             * @param {RenderingContext} context\n             */\n            Render.constraints = function(constraints, context) {\n              var c = context;\n\n              for (var i = 0; i < constraints.length; i++) {\n                var constraint = constraints[i];\n\n                if (\n                  !constraint.render.visible ||\n                  !constraint.pointA ||\n                  !constraint.pointB\n                )\n                  continue;\n\n                var bodyA = constraint.bodyA,\n                  bodyB = constraint.bodyB,\n                  start,\n                  end;\n\n                if (bodyA) {\n                  start = Vector.add(bodyA.position, constraint.pointA);\n                } else {\n                  start = constraint.pointA;\n                }\n\n                if (constraint.render.type === 'pin') {\n                  c.beginPath();\n                  c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                  c.closePath();\n                } else {\n                  if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                  } else {\n                    end = constraint.pointB;\n                  }\n\n                  c.beginPath();\n                  c.moveTo(start.x, start.y);\n\n                  if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                      normal = Vector.perp(Vector.normalise(delta)),\n                      coils = Math.ceil(\n                        Common.clamp(constraint.length / 5, 12, 20)\n                      ),\n                      offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                      offset = j % 2 === 0 ? 1 : -1;\n\n                      c.lineTo(\n                        start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                        start.y + delta.y * (j / coils) + normal.y * offset * 4\n                      );\n                    }\n                  }\n\n                  c.lineTo(end.x, end.y);\n                }\n\n                if (constraint.render.lineWidth) {\n                  c.lineWidth = constraint.render.lineWidth;\n                  c.strokeStyle = constraint.render.strokeStyle;\n                  c.stroke();\n                }\n\n                if (constraint.render.anchors) {\n                  c.fillStyle = constraint.render.strokeStyle;\n                  c.beginPath();\n                  c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                  c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                  c.closePath();\n                  c.fill();\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method bodyShadows\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyShadows = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine;\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                if (body.circleRadius) {\n                  c.beginPath();\n                  c.arc(\n                    body.position.x,\n                    body.position.y,\n                    body.circleRadius,\n                    0,\n                    2 * Math.PI\n                  );\n                  c.closePath();\n                } else {\n                  c.beginPath();\n                  c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                  for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                  }\n                  c.closePath();\n                }\n\n                var distanceX = body.position.x - render.options.width * 0.5,\n                  distanceY = body.position.y - render.options.height * 0.2,\n                  distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n                c.shadowColor = 'rgba(0,0,0,0.15)';\n                c.shadowOffsetX = 0.05 * distanceX;\n                c.shadowOffsetY = 0.05 * distanceY;\n                c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n                c.fill();\n\n                c.shadowColor = null;\n                c.shadowOffsetX = null;\n                c.shadowOffsetY = null;\n                c.shadowBlur = null;\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method bodies\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodies = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                showInternalEdges =\n                  options.showInternalEdges || !options.wireframes,\n                body,\n                part,\n                i,\n                k;\n\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (\n                  k = body.parts.length > 1 ? 1 : 0;\n                  k < body.parts.length;\n                  k++\n                ) {\n                  part = body.parts[k];\n\n                  if (!part.render.visible) continue;\n\n                  if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                  } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                  }\n\n                  if (\n                    part.render.sprite &&\n                    part.render.sprite.texture &&\n                    !options.wireframes\n                  ) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                      texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                      texture,\n                      texture.width * -sprite.xOffset * sprite.xScale,\n                      texture.height * -sprite.yOffset * sprite.yScale,\n                      texture.width * sprite.xScale,\n                      texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                  } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                      c.beginPath();\n                      c.arc(\n                        part.position.x,\n                        part.position.y,\n                        part.circleRadius,\n                        0,\n                        2 * Math.PI\n                      );\n                    } else {\n                      c.beginPath();\n                      c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                      for (var j = 1; j < part.vertices.length; j++) {\n                        if (\n                          !part.vertices[j - 1].isInternal ||\n                          showInternalEdges\n                        ) {\n                          c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                        } else {\n                          c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                        }\n\n                        if (part.vertices[j].isInternal && !showInternalEdges) {\n                          c.moveTo(\n                            part.vertices[(j + 1) % part.vertices.length].x,\n                            part.vertices[(j + 1) % part.vertices.length].y\n                          );\n                        }\n                      }\n\n                      c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                      c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                      c.fillStyle = part.render.fillStyle;\n\n                      if (part.render.lineWidth) {\n                        c.lineWidth = part.render.lineWidth;\n                        c.strokeStyle = part.render.strokeStyle;\n                        c.stroke();\n                      }\n\n                      c.fill();\n                    } else {\n                      c.lineWidth = 1;\n                      c.strokeStyle = '#bbb';\n                      c.stroke();\n                    }\n                  }\n\n                  c.globalAlpha = 1;\n                }\n              }\n            };\n\n            /**\n             * Optimised method for drawing body wireframes in one pass\n             * @private\n             * @method bodyWireframes\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyWireframes = function(render, bodies, context) {\n              var c = context,\n                showInternalEdges = render.options.showInternalEdges,\n                body,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              // render all bodies\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (\n                  k = body.parts.length > 1 ? 1 : 0;\n                  k < body.parts.length;\n                  k++\n                ) {\n                  part = body.parts[k];\n\n                  c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                  for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                      c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                      c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                      c.moveTo(\n                        part.vertices[(j + 1) % part.vertices.length].x,\n                        part.vertices[(j + 1) % part.vertices.length].y\n                      );\n                    }\n                  }\n\n                  c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                }\n              }\n\n              c.lineWidth = 1;\n              c.strokeStyle = '#bbb';\n              c.stroke();\n            };\n\n            /**\n             * Optimised method for drawing body convex hull wireframes in one pass\n             * @private\n             * @method bodyConvexHulls\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyConvexHulls = function(render, bodies, context) {\n              var c = context,\n                body,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              // render convex hulls\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible || body.parts.length === 1) continue;\n\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n                for (j = 1; j < body.vertices.length; j++) {\n                  c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n\n                c.lineTo(body.vertices[0].x, body.vertices[0].y);\n              }\n\n              c.lineWidth = 1;\n              c.strokeStyle = 'rgba(255,255,255,0.2)';\n              c.stroke();\n            };\n\n            /**\n             * Renders body vertex numbers.\n             * @private\n             * @method vertexNumbers\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.vertexNumbers = function(render, bodies, context) {\n              var c = context,\n                i,\n                j,\n                k;\n\n              for (i = 0; i < bodies.length; i++) {\n                var parts = bodies[i].parts;\n                for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                  var part = parts[k];\n                  for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(\n                      i + '_' + j,\n                      part.position.x +\n                        (part.vertices[j].x - part.position.x) * 0.8,\n                      part.position.y +\n                        (part.vertices[j].y - part.position.y) * 0.8\n                    );\n                  }\n                }\n              }\n            };\n\n            /**\n             * Renders mouse position.\n             * @private\n             * @method mousePosition\n             * @param {render} render\n             * @param {mouse} mouse\n             * @param {RenderingContext} context\n             */\n            Render.mousePosition = function(render, mouse, context) {\n              var c = context;\n              c.fillStyle = 'rgba(255,255,255,0.8)';\n              c.fillText(\n                mouse.position.x + '  ' + mouse.position.y,\n                mouse.position.x + 5,\n                mouse.position.y - 5\n              );\n            };\n\n            /**\n             * Draws body bounds\n             * @private\n             * @method bodyBounds\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyBounds = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options;\n\n              c.beginPath();\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (body.render.visible) {\n                  var parts = bodies[i].parts;\n                  for (\n                    var j = parts.length > 1 ? 1 : 0;\n                    j < parts.length;\n                    j++\n                  ) {\n                    var part = parts[j];\n                    c.rect(\n                      part.bounds.min.x,\n                      part.bounds.min.y,\n                      part.bounds.max.x - part.bounds.min.x,\n                      part.bounds.max.y - part.bounds.min.y\n                    );\n                  }\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,255,255,0.08)';\n              } else {\n                c.strokeStyle = 'rgba(0,0,0,0.1)';\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Draws body angle indicators and axes\n             * @private\n             * @method bodyAxes\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyAxes = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                part,\n                i,\n                j,\n                k;\n\n              c.beginPath();\n\n              for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i],\n                  parts = body.parts;\n\n                if (!body.render.visible) continue;\n\n                if (options.showAxes) {\n                  // render all axes\n                  for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                      var axis = part.axes[k];\n                      c.moveTo(part.position.x, part.position.y);\n                      c.lineTo(\n                        part.position.x + axis.x * 20,\n                        part.position.y + axis.y * 20\n                      );\n                    }\n                  }\n                } else {\n                  for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                      // render a single axis indicator\n                      c.moveTo(part.position.x, part.position.y);\n                      c.lineTo(\n                        (part.vertices[0].x +\n                          part.vertices[part.vertices.length - 1].x) /\n                          2,\n                        (part.vertices[0].y +\n                          part.vertices[part.vertices.length - 1].y) /\n                          2\n                      );\n                    }\n                  }\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'indianred';\n                c.lineWidth = 1;\n              } else {\n                c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n                c.globalCompositeOperation = 'overlay';\n                c.lineWidth = 2;\n              }\n\n              c.stroke();\n              c.globalCompositeOperation = 'source-over';\n            };\n\n            /**\n             * Draws body positions\n             * @private\n             * @method bodyPositions\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyPositions = function(render, bodies, context) {\n              var c = context,\n                engine = render.engine,\n                options = render.options,\n                body,\n                part,\n                i,\n                k;\n\n              c.beginPath();\n\n              // render current positions\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                // handle compound parts\n                for (k = 0; k < body.parts.length; k++) {\n                  part = body.parts[k];\n                  c.arc(\n                    part.position.x,\n                    part.position.y,\n                    3,\n                    0,\n                    2 * Math.PI,\n                    false\n                  );\n                  c.closePath();\n                }\n              }\n\n              if (options.wireframes) {\n                c.fillStyle = 'indianred';\n              } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n              }\n              c.fill();\n\n              c.beginPath();\n\n              // render previous positions\n              for (i = 0; i < bodies.length; i++) {\n                body = bodies[i];\n                if (body.render.visible) {\n                  c.arc(\n                    body.positionPrev.x,\n                    body.positionPrev.y,\n                    2,\n                    0,\n                    2 * Math.PI,\n                    false\n                  );\n                  c.closePath();\n                }\n              }\n\n              c.fillStyle = 'rgba(255,165,0,0.8)';\n              c.fill();\n            };\n\n            /**\n             * Draws body velocity\n             * @private\n             * @method bodyVelocity\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyVelocity = function(render, bodies, context) {\n              var c = context;\n\n              c.beginPath();\n\n              for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n\n                if (!body.render.visible) continue;\n\n                c.moveTo(body.position.x, body.position.y);\n                c.lineTo(\n                  body.position.x + (body.position.x - body.positionPrev.x) * 2,\n                  body.position.y + (body.position.y - body.positionPrev.y) * 2\n                );\n              }\n\n              c.lineWidth = 3;\n              c.strokeStyle = 'cornflowerblue';\n              c.stroke();\n            };\n\n            /**\n             * Draws body ids\n             * @private\n             * @method bodyIds\n             * @param {render} render\n             * @param {body[]} bodies\n             * @param {RenderingContext} context\n             */\n            Render.bodyIds = function(render, bodies, context) {\n              var c = context,\n                i,\n                j;\n\n              for (i = 0; i < bodies.length; i++) {\n                if (!bodies[i].render.visible) continue;\n\n                var parts = bodies[i].parts;\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                  var part = parts[j];\n                  c.font = '12px Arial';\n                  c.fillStyle = 'rgba(255,255,255,0.5)';\n                  c.fillText(\n                    part.id,\n                    part.position.x + 10,\n                    part.position.y - 10\n                  );\n                }\n              }\n            };\n\n            /**\n             * Description\n             * @private\n             * @method collisions\n             * @param {render} render\n             * @param {pair[]} pairs\n             * @param {RenderingContext} context\n             */\n            Render.collisions = function(render, pairs, context) {\n              var c = context,\n                options = render.options,\n                pair,\n                collision,\n                corrected,\n                bodyA,\n                bodyB,\n                i,\n                j;\n\n              c.beginPath();\n\n              // render collision positions\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n                for (j = 0; j < pair.activeContacts.length; j++) {\n                  var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                  c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n                }\n              }\n\n              if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.7)';\n              } else {\n                c.fillStyle = 'orange';\n              }\n              c.fill();\n\n              c.beginPath();\n\n              // render collision normals\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n\n                if (pair.activeContacts.length > 0) {\n                  var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                  if (pair.activeContacts.length === 2) {\n                    normalPosX =\n                      (pair.activeContacts[0].vertex.x +\n                        pair.activeContacts[1].vertex.x) /\n                      2;\n                    normalPosY =\n                      (pair.activeContacts[0].vertex.y +\n                        pair.activeContacts[1].vertex.y) /\n                      2;\n                  }\n\n                  if (\n                    collision.bodyB === collision.supports[0].body ||\n                    collision.bodyA.isStatic === true\n                  ) {\n                    c.moveTo(\n                      normalPosX - collision.normal.x * 8,\n                      normalPosY - collision.normal.y * 8\n                    );\n                  } else {\n                    c.moveTo(\n                      normalPosX + collision.normal.x * 8,\n                      normalPosY + collision.normal.y * 8\n                    );\n                  }\n\n                  c.lineTo(normalPosX, normalPosY);\n                }\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,165,0,0.7)';\n              } else {\n                c.strokeStyle = 'orange';\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method separations\n             * @param {render} render\n             * @param {pair[]} pairs\n             * @param {RenderingContext} context\n             */\n            Render.separations = function(render, pairs, context) {\n              var c = context,\n                options = render.options,\n                pair,\n                collision,\n                corrected,\n                bodyA,\n                bodyB,\n                i,\n                j;\n\n              c.beginPath();\n\n              // render separations\n              for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i];\n\n                if (!pair.isActive) continue;\n\n                collision = pair.collision;\n                bodyA = collision.bodyA;\n                bodyB = collision.bodyB;\n\n                var k = 1;\n\n                if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n                if (bodyB.isStatic) k = 0;\n\n                c.moveTo(bodyB.position.x, bodyB.position.y);\n                c.lineTo(\n                  bodyB.position.x - collision.penetration.x * k,\n                  bodyB.position.y - collision.penetration.y * k\n                );\n\n                k = 1;\n\n                if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n                if (bodyA.isStatic) k = 0;\n\n                c.moveTo(bodyA.position.x, bodyA.position.y);\n                c.lineTo(\n                  bodyA.position.x + collision.penetration.x * k,\n                  bodyA.position.y + collision.penetration.y * k\n                );\n              }\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,165,0,0.5)';\n              } else {\n                c.strokeStyle = 'orange';\n              }\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method grid\n             * @param {render} render\n             * @param {grid} grid\n             * @param {RenderingContext} context\n             */\n            Render.grid = function(render, grid, context) {\n              var c = context,\n                options = render.options;\n\n              if (options.wireframes) {\n                c.strokeStyle = 'rgba(255,180,0,0.1)';\n              } else {\n                c.strokeStyle = 'rgba(255,180,0,0.5)';\n              }\n\n              c.beginPath();\n\n              var bucketKeys = Common.keys(grid.buckets);\n\n              for (var i = 0; i < bucketKeys.length; i++) {\n                var bucketId = bucketKeys[i];\n\n                if (grid.buckets[bucketId].length < 2) continue;\n\n                var region = bucketId.split(/C|R/);\n                c.rect(\n                  0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                  0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                  grid.bucketWidth,\n                  grid.bucketHeight\n                );\n              }\n\n              c.lineWidth = 1;\n              c.stroke();\n            };\n\n            /**\n             * Description\n             * @private\n             * @method inspector\n             * @param {inspector} inspector\n             * @param {RenderingContext} context\n             */\n            Render.inspector = function(inspector, context) {\n              var engine = inspector.engine,\n                selected = inspector.selected,\n                render = inspector.render,\n                options = render.options,\n                bounds;\n\n              if (options.hasBounds) {\n                var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                  boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                  boundsScaleX = boundsWidth / render.options.width,\n                  boundsScaleY = boundsHeight / render.options.height;\n\n                context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n                context.translate(-render.bounds.min.x, -render.bounds.min.y);\n              }\n\n              for (var i = 0; i < selected.length; i++) {\n                var item = selected[i].data;\n\n                context.translate(0.5, 0.5);\n                context.lineWidth = 1;\n                context.strokeStyle = 'rgba(255,165,0,0.9)';\n                context.setLineDash([1, 2]);\n\n                switch (item.type) {\n                  case 'body':\n                    // render body selections\n                    bounds = item.bounds;\n                    context.beginPath();\n                    context.rect(\n                      Math.floor(bounds.min.x - 3),\n                      Math.floor(bounds.min.y - 3),\n                      Math.floor(bounds.max.x - bounds.min.x + 6),\n                      Math.floor(bounds.max.y - bounds.min.y + 6)\n                    );\n                    context.closePath();\n                    context.stroke();\n\n                    break;\n\n                  case 'constraint':\n                    // render constraint selections\n                    var point = item.pointA;\n                    if (item.bodyA) point = item.pointB;\n                    context.beginPath();\n                    context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                    context.closePath();\n                    context.stroke();\n\n                    break;\n                }\n\n                context.setLineDash([]);\n                context.translate(-0.5, -0.5);\n              }\n\n              // render selection region\n              if (inspector.selectStart !== null) {\n                context.translate(0.5, 0.5);\n                context.lineWidth = 1;\n                context.strokeStyle = 'rgba(255,165,0,0.6)';\n                context.fillStyle = 'rgba(255,165,0,0.1)';\n                bounds = inspector.selectBounds;\n                context.beginPath();\n                context.rect(\n                  Math.floor(bounds.min.x),\n                  Math.floor(bounds.min.y),\n                  Math.floor(bounds.max.x - bounds.min.x),\n                  Math.floor(bounds.max.y - bounds.min.y)\n                );\n                context.closePath();\n                context.stroke();\n                context.fill();\n                context.translate(-0.5, -0.5);\n              }\n\n              if (options.hasBounds) context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n\n            /**\n             * Description\n             * @method _createCanvas\n             * @private\n             * @param {} width\n             * @param {} height\n             * @return canvas\n             */\n            var _createCanvas = function(width, height) {\n              var canvas = document.createElement('canvas');\n              canvas.width = width;\n              canvas.height = height;\n              canvas.oncontextmenu = function() {\n                return false;\n              };\n              canvas.onselectstart = function() {\n                return false;\n              };\n              return canvas;\n            };\n\n            /**\n             * Gets the pixel ratio of the canvas.\n             * @method _getPixelRatio\n             * @private\n             * @param {HTMLElement} canvas\n             * @return {Number} pixel ratio\n             */\n            var _getPixelRatio = function(canvas) {\n              var context = canvas.getContext('2d'),\n                devicePixelRatio = window.devicePixelRatio || 1,\n                backingStorePixelRatio =\n                  context.webkitBackingStorePixelRatio ||\n                  context.mozBackingStorePixelRatio ||\n                  context.msBackingStorePixelRatio ||\n                  context.oBackingStorePixelRatio ||\n                  context.backingStorePixelRatio ||\n                  1;\n\n              return devicePixelRatio / backingStorePixelRatio;\n            };\n\n            /**\n             * Gets the requested texture (an Image) via its path\n             * @method _getTexture\n             * @private\n             * @param {render} render\n             * @param {string} imagePath\n             * @return {Image} texture\n             */\n            var _getTexture = function(render, imagePath) {\n              var image = render.textures[imagePath];\n\n              if (image) return image;\n\n              image = render.textures[imagePath] = new Image();\n              image.src = imagePath;\n\n              return image;\n            };\n\n            /**\n             * Applies the background to the canvas using CSS.\n             * @method applyBackground\n             * @private\n             * @param {render} render\n             * @param {string} background\n             */\n            var _applyBackground = function(render, background) {\n              var cssBackground = background;\n\n              if (/(jpg|gif|png)$/.test(background))\n                cssBackground = 'url(' + background + ')';\n\n              render.canvas.style.background = cssBackground;\n              render.canvas.style.backgroundSize = 'contain';\n              render.currentBackground = background;\n            };\n\n            /*\n    *\n    *  Events Documentation\n    *\n    */\n\n            /**\n             * Fired before rendering\n             *\n             * @event beforeRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /**\n             * Fired after rendering\n             *\n             * @event afterRender\n             * @param {} event An event object\n             * @param {number} event.timestamp The engine.timing.timestamp of the event\n             * @param {} event.source The source object of the event\n             * @param {} event.name The name of the event\n             */\n\n            /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n            /**\n             * A back-reference to the `Matter.Render` module.\n             *\n             * @property controller\n             * @type render\n             */\n\n            /**\n             * A reference to the `Matter.Engine` instance to be used.\n             *\n             * @property engine\n             * @type engine\n             */\n\n            /**\n             * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n             *\n             * @property element\n             * @type HTMLElement\n             * @default null\n             */\n\n            /**\n             * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n             *\n             * @property canvas\n             * @type HTMLCanvasElement\n             * @default null\n             */\n\n            /**\n             * The configuration options of the renderer.\n             *\n             * @property options\n             * @type {}\n             */\n\n            /**\n             * The target width in pixels of the `render.canvas` to be created.\n             *\n             * @property options.width\n             * @type number\n             * @default 800\n             */\n\n            /**\n             * The target height in pixels of the `render.canvas` to be created.\n             *\n             * @property options.height\n             * @type number\n             * @default 600\n             */\n\n            /**\n             * A flag that specifies if `render.bounds` should be used when rendering.\n             *\n             * @property options.hasBounds\n             * @type boolean\n             * @default false\n             */\n\n            /**\n             * A `Bounds` object that specifies the drawing view region.\n             * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n             * This allows for creating views that can pan or zoom around the scene.\n             * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n             *\n             * @property bounds\n             * @type bounds\n             */\n\n            /**\n             * The 2d rendering context from the `render.canvas` element.\n             *\n             * @property context\n             * @type CanvasRenderingContext2D\n             */\n\n            /**\n             * The sprite texture cache.\n             *\n             * @property textures\n             * @type {}\n             */\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../collision/Grid': 6,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../core/Mouse': 19,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n        },\n      ],\n      32: [\n        function(_dereq_, module, exports) {\n          /**\n           * The `Matter.RenderPixi` module is an example renderer using pixi.js.\n           * See also `Matter.Render` for a canvas based renderer.\n           *\n           * @class RenderPixi\n           * @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n           * It will likely be moved to its own repository (but maintenance will be limited).\n           */\n\n          var RenderPixi = {};\n\n          module.exports = RenderPixi;\n\n          var Bounds = _dereq_('../geometry/Bounds');\n          var Composite = _dereq_('../body/Composite');\n          var Common = _dereq_('../core/Common');\n          var Events = _dereq_('../core/Events');\n          var Vector = _dereq_('../geometry/Vector');\n\n          (function() {\n            var _requestAnimationFrame, _cancelAnimationFrame;\n\n            if (typeof window !== 'undefined') {\n              _requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.msRequestAnimationFrame ||\n                function(callback) {\n                  window.setTimeout(function() {\n                    callback(Common.now());\n                  }, 1000 / 60);\n                };\n\n              _cancelAnimationFrame =\n                window.cancelAnimationFrame ||\n                window.mozCancelAnimationFrame ||\n                window.webkitCancelAnimationFrame ||\n                window.msCancelAnimationFrame;\n            }\n\n            /**\n             * Creates a new Pixi.js WebGL renderer\n             * @method create\n             * @param {object} options\n             * @return {RenderPixi} A new renderer\n             * @deprecated\n             */\n            RenderPixi.create = function(options) {\n              Common.warn(\n                'RenderPixi.create: Matter.RenderPixi is deprecated (see docs)'\n              );\n\n              var defaults = {\n                controller: RenderPixi,\n                engine: null,\n                element: null,\n                frameRequestId: null,\n                canvas: null,\n                renderer: null,\n                container: null,\n                spriteContainer: null,\n                pixiOptions: null,\n                options: {\n                  width: 800,\n                  height: 600,\n                  background: '#fafafa',\n                  wireframeBackground: '#222',\n                  hasBounds: false,\n                  enabled: true,\n                  wireframes: true,\n                  showSleeping: true,\n                  showDebug: false,\n                  showBroadphase: false,\n                  showBounds: false,\n                  showVelocity: false,\n                  showCollisions: false,\n                  showAxes: false,\n                  showPositions: false,\n                  showAngleIndicator: false,\n                  showIds: false,\n                  showShadows: false,\n                },\n              };\n\n              var render = Common.extend(defaults, options),\n                transparent =\n                  !render.options.wireframes &&\n                  render.options.background === 'transparent';\n\n              // init pixi\n              render.pixiOptions = render.pixiOptions || {\n                view: render.canvas,\n                transparent: transparent,\n                antialias: true,\n                backgroundColor: options.background,\n              };\n\n              render.mouse = options.mouse;\n              render.engine = options.engine;\n              render.renderer =\n                render.renderer ||\n                new PIXI.WebGLRenderer(\n                  render.options.width,\n                  render.options.height,\n                  render.pixiOptions\n                );\n              render.container = render.container || new PIXI.Container();\n              render.spriteContainer =\n                render.spriteContainer || new PIXI.Container();\n              render.canvas = render.canvas || render.renderer.view;\n              render.bounds = render.bounds || {\n                min: {\n                  x: 0,\n                  y: 0,\n                },\n                max: {\n                  x: render.options.width,\n                  y: render.options.height,\n                },\n              };\n\n              // event listeners\n              Events.on(render.engine, 'beforeUpdate', function() {\n                RenderPixi.clear(render);\n              });\n\n              // caches\n              render.textures = {};\n              render.sprites = {};\n              render.primitives = {};\n\n              // use a sprite batch for performance\n              render.container.addChild(render.spriteContainer);\n\n              // insert canvas\n              if (Common.isElement(render.element)) {\n                render.element.appendChild(render.canvas);\n              } else {\n                Common.warn(\n                  'No \"render.element\" passed, \"render.canvas\" was not inserted into document.'\n                );\n              }\n\n              // prevent menus on canvas\n              render.canvas.oncontextmenu = function() {\n                return false;\n              };\n              render.canvas.onselectstart = function() {\n                return false;\n              };\n\n              return render;\n            };\n\n            /**\n             * Continuously updates the render canvas on the `requestAnimationFrame` event.\n             * @method run\n             * @param {render} render\n             * @deprecated\n             */\n            RenderPixi.run = function(render) {\n              (function loop(time) {\n                render.frameRequestId = _requestAnimationFrame(loop);\n                RenderPixi.world(render);\n              })();\n            };\n\n            /**\n             * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n             * @method stop\n             * @param {render} render\n             * @deprecated\n             */\n            RenderPixi.stop = function(render) {\n              _cancelAnimationFrame(render.frameRequestId);\n            };\n\n            /**\n             * Clears the scene graph\n             * @method clear\n             * @param {RenderPixi} render\n             * @deprecated\n             */\n            RenderPixi.clear = function(render) {\n              var container = render.container,\n                spriteContainer = render.spriteContainer;\n\n              // clear stage container\n              while (container.children[0]) {\n                container.removeChild(container.children[0]);\n              }\n\n              // clear sprite batch\n              while (spriteContainer.children[0]) {\n                spriteContainer.removeChild(spriteContainer.children[0]);\n              }\n\n              var bgSprite = render.sprites['bg-0'];\n\n              // clear caches\n              render.textures = {};\n              render.sprites = {};\n              render.primitives = {};\n\n              // set background sprite\n              render.sprites['bg-0'] = bgSprite;\n              if (bgSprite) container.addChildAt(bgSprite, 0);\n\n              // add sprite batch back into container\n              render.container.addChild(render.spriteContainer);\n\n              // reset background state\n              render.currentBackground = null;\n\n              // reset bounds transforms\n              container.scale.set(1, 1);\n              container.position.set(0, 0);\n            };\n\n            /**\n             * Sets the background of the canvas\n             * @method setBackground\n             * @param {RenderPixi} render\n             * @param {string} background\n             * @deprecated\n             */\n            RenderPixi.setBackground = function(render, background) {\n              if (render.currentBackground !== background) {\n                var isColor =\n                    background.indexOf && background.indexOf('#') !== -1,\n                  bgSprite = render.sprites['bg-0'];\n\n                if (isColor) {\n                  // if solid background color\n                  var color = Common.colorToNumber(background);\n                  render.renderer.backgroundColor = color;\n\n                  // remove background sprite if existing\n                  if (bgSprite) render.container.removeChild(bgSprite);\n                } else {\n                  // initialise background sprite if needed\n                  if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(\n                      texture\n                    );\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                  }\n                }\n\n                render.currentBackground = background;\n              }\n            };\n\n            /**\n             * Description\n             * @method world\n             * @param {engine} engine\n             * @deprecated\n             */\n            RenderPixi.world = function(render) {\n              var engine = render.engine,\n                world = engine.world,\n                renderer = render.renderer,\n                container = render.container,\n                options = render.options,\n                bodies = Composite.allBodies(world),\n                allConstraints = Composite.allConstraints(world),\n                constraints = [],\n                i;\n\n              if (options.wireframes) {\n                RenderPixi.setBackground(render, options.wireframeBackground);\n              } else {\n                RenderPixi.setBackground(render, options.background);\n              }\n\n              // handle bounds\n              var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n              if (options.hasBounds) {\n                // Hide bodies that are not in view\n                for (i = 0; i < bodies.length; i++) {\n                  var body = bodies[i];\n                  body.render.sprite.visible = Bounds.overlaps(\n                    body.bounds,\n                    render.bounds\n                  );\n                }\n\n                // filter out constraints that are not in view\n                for (i = 0; i < allConstraints.length; i++) {\n                  var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                  if (bodyA)\n                    pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                  if (bodyB)\n                    pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                  if (!pointAWorld || !pointBWorld) continue;\n\n                  if (\n                    Bounds.contains(render.bounds, pointAWorld) ||\n                    Bounds.contains(render.bounds, pointBWorld)\n                  )\n                    constraints.push(constraint);\n                }\n\n                // transform the view\n                container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n                container.position.set(\n                  -render.bounds.min.x * (1 / boundsScaleX),\n                  -render.bounds.min.y * (1 / boundsScaleY)\n                );\n              } else {\n                constraints = allConstraints;\n              }\n\n              for (i = 0; i < bodies.length; i++)\n                RenderPixi.body(render, bodies[i]);\n\n              for (i = 0; i < constraints.length; i++)\n                RenderPixi.constraint(render, constraints[i]);\n\n              renderer.render(container);\n            };\n\n            /**\n             * Description\n             * @method constraint\n             * @param {engine} engine\n             * @param {constraint} constraint\n             * @deprecated\n             */\n            RenderPixi.constraint = function(render, constraint) {\n              var engine = render.engine,\n                bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                pointA = constraint.pointA,\n                pointB = constraint.pointB,\n                container = render.container,\n                constraintRender = constraint.render,\n                primitiveId = 'c-' + constraint.id,\n                primitive = render.primitives[primitiveId];\n\n              // initialise constraint primitive if not existing\n              if (!primitive)\n                primitive = render.primitives[\n                  primitiveId\n                ] = new PIXI.Graphics();\n\n              // don't render if constraint does not have two end points\n              if (\n                !constraintRender.visible ||\n                !constraint.pointA ||\n                !constraint.pointB\n              ) {\n                primitive.clear();\n                return;\n              }\n\n              // add to scene graph if not already there\n              if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n              // render the constraint on every update, since they can change dynamically\n              primitive.clear();\n              primitive.beginFill(0, 0);\n              primitive.lineStyle(\n                constraintRender.lineWidth,\n                Common.colorToNumber(constraintRender.strokeStyle),\n                1\n              );\n\n              if (bodyA) {\n                primitive.moveTo(\n                  bodyA.position.x + pointA.x,\n                  bodyA.position.y + pointA.y\n                );\n              } else {\n                primitive.moveTo(pointA.x, pointA.y);\n              }\n\n              if (bodyB) {\n                primitive.lineTo(\n                  bodyB.position.x + pointB.x,\n                  bodyB.position.y + pointB.y\n                );\n              } else {\n                primitive.lineTo(pointB.x, pointB.y);\n              }\n\n              primitive.endFill();\n            };\n\n            /**\n             * Description\n             * @method body\n             * @param {engine} engine\n             * @param {body} body\n             * @deprecated\n             */\n            RenderPixi.body = function(render, body) {\n              var engine = render.engine,\n                bodyRender = body.render;\n\n              if (!bodyRender.visible) return;\n\n              if (bodyRender.sprite && bodyRender.sprite.texture) {\n                var spriteId = 'b-' + body.id,\n                  sprite = render.sprites[spriteId],\n                  spriteContainer = render.spriteContainer;\n\n                // initialise body sprite if not existing\n                if (!sprite)\n                  sprite = render.sprites[spriteId] = _createBodySprite(\n                    render,\n                    body\n                  );\n\n                // add to scene graph if not already there\n                if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                  spriteContainer.addChild(sprite);\n\n                // update body sprite\n                sprite.position.x = body.position.x;\n                sprite.position.y = body.position.y;\n                sprite.rotation = body.angle;\n                sprite.scale.x = bodyRender.sprite.xScale || 1;\n                sprite.scale.y = bodyRender.sprite.yScale || 1;\n              } else {\n                var primitiveId = 'b-' + body.id,\n                  primitive = render.primitives[primitiveId],\n                  container = render.container;\n\n                // initialise body primitive if not existing\n                if (!primitive) {\n                  primitive = render.primitives[\n                    primitiveId\n                  ] = _createBodyPrimitive(render, body);\n                  primitive.initialAngle = body.angle;\n                }\n\n                // add to scene graph if not already there\n                if (Common.indexOf(container.children, primitive) === -1)\n                  container.addChild(primitive);\n\n                // update body primitive\n                primitive.position.x = body.position.x;\n                primitive.position.y = body.position.y;\n                primitive.rotation = body.angle - primitive.initialAngle;\n              }\n            };\n\n            /**\n             * Creates a body sprite\n             * @method _createBodySprite\n             * @private\n             * @param {RenderPixi} render\n             * @param {body} body\n             * @return {PIXI.Sprite} sprite\n             * @deprecated\n             */\n            var _createBodySprite = function(render, body) {\n              var bodyRender = body.render,\n                texturePath = bodyRender.sprite.texture,\n                texture = _getTexture(render, texturePath),\n                sprite = new PIXI.Sprite(texture);\n\n              sprite.anchor.x = body.render.sprite.xOffset;\n              sprite.anchor.y = body.render.sprite.yOffset;\n\n              return sprite;\n            };\n\n            /**\n             * Creates a body primitive\n             * @method _createBodyPrimitive\n             * @private\n             * @param {RenderPixi} render\n             * @param {body} body\n             * @return {PIXI.Graphics} graphics\n             * @deprecated\n             */\n            var _createBodyPrimitive = function(render, body) {\n              var bodyRender = body.render,\n                options = render.options,\n                primitive = new PIXI.Graphics(),\n                fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n                strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n                strokeStyleIndicator = Common.colorToNumber(\n                  bodyRender.strokeStyle\n                ),\n                strokeStyleWireframe = Common.colorToNumber('#bbb'),\n                strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n                part;\n\n              primitive.clear();\n\n              // handle compound parts\n              for (\n                var k = body.parts.length > 1 ? 1 : 0;\n                k < body.parts.length;\n                k++\n              ) {\n                part = body.parts[k];\n\n                if (!options.wireframes) {\n                  primitive.beginFill(fillStyle, 1);\n                  primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n                } else {\n                  primitive.beginFill(0, 0);\n                  primitive.lineStyle(1, strokeStyleWireframe, 1);\n                }\n\n                primitive.moveTo(\n                  part.vertices[0].x - body.position.x,\n                  part.vertices[0].y - body.position.y\n                );\n\n                for (var j = 1; j < part.vertices.length; j++) {\n                  primitive.lineTo(\n                    part.vertices[j].x - body.position.x,\n                    part.vertices[j].y - body.position.y\n                  );\n                }\n\n                primitive.lineTo(\n                  part.vertices[0].x - body.position.x,\n                  part.vertices[0].y - body.position.y\n                );\n\n                primitive.endFill();\n\n                // angle indicator\n                if (options.showAngleIndicator || options.showAxes) {\n                  primitive.beginFill(0, 0);\n\n                  if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                  } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                  }\n\n                  primitive.moveTo(\n                    part.position.x - body.position.x,\n                    part.position.y - body.position.y\n                  );\n                  primitive.lineTo(\n                    (part.vertices[0].x +\n                      part.vertices[part.vertices.length - 1].x) /\n                      2 -\n                      body.position.x,\n                    (part.vertices[0].y +\n                      part.vertices[part.vertices.length - 1].y) /\n                      2 -\n                      body.position.y\n                  );\n\n                  primitive.endFill();\n                }\n              }\n\n              return primitive;\n            };\n\n            /**\n             * Gets the requested texture (a PIXI.Texture) via its path\n             * @method _getTexture\n             * @private\n             * @param {RenderPixi} render\n             * @param {string} imagePath\n             * @return {PIXI.Texture} texture\n             * @deprecated\n             */\n            var _getTexture = function(render, imagePath) {\n              var texture = render.textures[imagePath];\n\n              if (!texture)\n                texture = render.textures[imagePath] = PIXI.Texture.fromImage(\n                  imagePath\n                );\n\n              return texture;\n            };\n          })();\n        },\n        {\n          '../body/Composite': 2,\n          '../core/Common': 14,\n          '../core/Events': 16,\n          '../geometry/Bounds': 26,\n          '../geometry/Vector': 28,\n        },\n      ],\n    },\n    {},\n    [30]\n  )(30);\n});\n"},"lineCount":11667}},"error":null,"hash":"14754ea7db343854f6004ef8682988b6","cacheData":{"env":{}}}