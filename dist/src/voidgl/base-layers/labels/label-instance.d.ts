import { Label } from "../../primitives/label";
import { LabelAtlasResource } from "../../surface/texture";
import { IInstanceOptions, Instance } from "../../util/instance";
import { Anchor, ScaleType } from "../types";
export interface ILabelInstanceOptions extends IInstanceOptions, Partial<Label> {
    anchor?: Anchor;
    color: [number, number, number, number];
    depth?: number;
    fontFamily?: string;
    fontSize?: number;
    fontStyle?: Label["fontStyle"];
    fontWeight?: Label["fontWeight"];
    maxWidth?: number;
    maxScale?: number;
    rasterization?: {
        scale: number;
    };
    scaling?: ScaleType;
    scale?: number;
    text: string;
    x?: number;
    y?: number;
}
export declare class LabelInstance extends Instance implements Label {
    static destroy(): void;
    color: [number, number, number, number];
    depth: number;
    maxScale: number;
    scaling: ScaleType;
    scale: number;
    x: number;
    y: number;
    private _cssFont;
    private _fontFamily;
    private _fontSize;
    private _fontStyle;
    private _fontWeight;
    private _maxWidth;
    private _text;
    private _width;
    private _height;
    private _isDestroyed;
    private _rasterization;
    readonly cssFont: string;
    readonly isDestroyed: boolean;
    readonly fontFamily: string;
    readonly fontSize: number;
    readonly fontStyle: "normal" | "inherit" | "initial" | "italic" | "oblique";
    readonly fontWeight: 100 | 300 | 500 | "normal" | "bold" | "bolder" | "lighter" | "inherit" | "initial" | "unset" | 200 | 400 | 600 | 700 | 800 | 900;
    readonly maxWidth: number;
    readonly resource: LabelAtlasResource;
    readonly text: string;
    readonly truncatedText: string;
    readonly width: number;
    readonly height: number;
    private _anchor;
    constructor(options: ILabelInstanceOptions);
    destroy(): void;
    readonly anchor: Anchor;
    setAnchor(anchor: Anchor): void;
}
