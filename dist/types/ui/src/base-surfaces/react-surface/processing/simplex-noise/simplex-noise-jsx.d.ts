/// <reference types="react" />
import { type Vec2, type Vec3 } from "../../../../math";
export interface ISimplexNoiseJSX {
    /** Name/key to apply to the scenes generated by this effect */
    name: string;
    /** The resource to output the rendered perlin noise to */
    output: string;
    /**
     * We render the perlin noise as a 3D perlin noise but just a 2D slice of it.
     * This let's you set the 3D offset of the 2D noise
     */
    zOffset?: number | (() => number);
    /**
     * If this is specified rather than the zOffset, the zoffset will
     * automatically drift by this amount
     */
    drift?: Vec3;
    /**
     * Larger the scale, the larger the features. Defaults to 1 which will look
     * very grainy. A value of 200 sees more blobby features. Can not be 0.
     *
     * You can specify multiple scales to generate octaves for the noise pattern.
     */
    scale?: Vec2 | Vec2[];
}
export declare const SimplexNoiseJSX: (props: ISimplexNoiseJSX) => import("react").JSX.Element;
